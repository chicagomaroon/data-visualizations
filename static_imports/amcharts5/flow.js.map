{"version":3,"file":"flow.js","mappings":"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","sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/flow/FlowDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/flow/Flow.ts","webpack://@amcharts/amcharts5/./node_modules/d3-chord/src/math.js","webpack://@amcharts/amcharts5/./node_modules/d3-chord/src/chord.js","webpack://@amcharts/amcharts5/./node_modules/d3-chord/src/array.js","webpack://@amcharts/amcharts5/./node_modules/d3-chord/src/constant.js","webpack://@amcharts/amcharts5/./node_modules/d3-chord/src/ribbon.js","webpack://@amcharts/amcharts5/./node_modules/d3-array/src/ascending.js","webpack://@amcharts/amcharts5/./node_modules/d3-array/src/descending.js","webpack://@amcharts/amcharts5/./node_modules/d3-brush/src/brush.js","webpack://@amcharts/amcharts5/./node_modules/d3-zoom/src/transform.js","webpack://@amcharts/amcharts5/./src/.internal/charts/flow/FlowNode.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/flow/FlowNodes.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/flow/ChordNodes.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/flow/FlowLink.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/flow/ChordLink.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/flow/Chord.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/flow/ChordLinkDirected.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/flow/ChordDirected.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/flow/ChordNonRibbon.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/flow/SankeyNodes.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/flow/SankeyLink.ts","webpack://@amcharts/amcharts5/./node_modules/d3-sankey/node_modules/d3-array/src/sum.js","webpack://@amcharts/amcharts5/./node_modules/d3-sankey/node_modules/d3-array/src/max.js","webpack://@amcharts/amcharts5/./node_modules/d3-sankey/node_modules/d3-array/src/min.js","webpack://@amcharts/amcharts5/./node_modules/d3-sankey/src/align.js","webpack://@amcharts/amcharts5/./node_modules/d3-sankey/src/constant.js","webpack://@amcharts/amcharts5/./node_modules/d3-sankey/src/sankey.js","webpack://@amcharts/amcharts5/./src/.internal/charts/flow/Sankey.ts","webpack://@amcharts/amcharts5/./tmp/webpack/flow.js"],"sourcesContent":["import type { DataItem } from \"../../core/render/Component\";\r\nimport type { IFlowNodesDataItem } from \"../../charts/flow/FlowNodes\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p100, p50 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class FlowDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst r = this.rule.bind(this);\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/flow\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"Flow\").setAll({\r\n\t\t\twidth: p100,\r\n\t\t\theight: p100,\r\n\t\t\tpaddingLeft: 10,\r\n\t\t\tpaddingRight: 10,\r\n\t\t\tpaddingTop: 10,\r\n\t\t\tpaddingBottom: 10\r\n\t\t});\r\n\r\n\t\tr(\"FlowNodes\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tlegendLabelText: \"{name}\",\r\n\t\t\tlegendValueText: \"{sumOutgoing.formatNumber('#.#')}\"\r\n\t\t});\r\n\r\n\t\tr(\"FlowNode\").setAll({\r\n\r\n\t\t});\r\n\r\n\t\tr(\"FlowNode\", [\"unknown\"]).setAll({\r\n\t\t\tdraggable: false,\r\n\t\t\topacity: 0\r\n\t\t});\r\n\r\n\t\tr(\"RadialLabel\", [\"flow\", \"node\"]).setAll({\r\n\t\t\ttext: \"{name}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"FlowLink\").setAll({\r\n\t\t\tfillStyle: \"gradient\",\r\n\t\t\tstrokeStyle: \"gradient\"\r\n\t\t});\r\n\r\n\t\tr(\"FlowLink\", [\"source\", \"unknown\"]).setAll({\r\n\t\t});\r\n\r\n\t\tr(\"FlowLink\", [\"target\", \"unknown\"]).setAll({\r\n\t\t});\r\n\r\n\r\n\t\tr(\"FlowNode\").events.on(\"pointerover\", (e) => {\r\n\t\t\tconst dataItem = e.target.dataItem as DataItem<IFlowNodesDataItem>;\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tconst outgoing = dataItem.get(\"outgoingLinks\")\r\n\t\t\t\tif (outgoing) {\r\n\t\t\t\t\t$array.each(outgoing, (linkDataItem) => {\r\n\t\t\t\t\t\tconst link = (linkDataItem as any).get(\"link\");\r\n\t\t\t\t\t\tlink.hover();\r\n\t\t\t\t\t\tlink.hideTooltip();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tconst incoming = dataItem.get(\"incomingLinks\")\r\n\t\t\t\tif (incoming) {\r\n\t\t\t\t\t$array.each(incoming, (linkDataItem) => {\r\n\t\t\t\t\t\tconst link = (linkDataItem as any).get(\"link\");\r\n\t\t\t\t\t\tlink.hover();\r\n\t\t\t\t\t\tlink.hideTooltip();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet rectangle = (<any>dataItem).get(\"slice\") || (<any>dataItem).get(\"rectangle\");\r\n\t\t\tif (rectangle && rectangle.get(\"tooltipText\")) {\r\n\t\t\t\trectangle.showTooltip();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"FlowNode\").events.on(\"pointerout\", (e) => {\r\n\t\t\tconst dataItem = e.target.dataItem as DataItem<IFlowNodesDataItem>;\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tconst outgoing = dataItem.get(\"outgoingLinks\")\r\n\t\t\t\tif (outgoing) {\r\n\t\t\t\t\t$array.each(outgoing, (linkDataItem) => {\r\n\t\t\t\t\t\t(linkDataItem as any).get(\"link\").unhover();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tconst incoming = dataItem.get(\"incomingLinks\")\r\n\t\t\t\tif (incoming) {\r\n\t\t\t\t\t$array.each(incoming, (linkDataItem) => {\r\n\t\t\t\t\t\t(linkDataItem as any).get(\"link\").unhover();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/flow: Sankey\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Sankey\").setAll({\r\n\t\t\torientation: \"horizontal\",\r\n\t\t\tnodeAlign: \"justify\",\r\n\t\t\tlinkTension: 0.5,\r\n\t\t\tnodePadding: 10,\r\n\t\t\tnodeWidth: 10\r\n\t\t});\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"sankey\", \"node\", \"shape\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"SankeyLink\").setAll({\r\n\t\t\tcontrolPointDistance: 0.2\r\n\t\t});\r\n\r\n\t\tr(\"FlowNode\", [\"sankey\"]).setAll({\r\n\t\t\tdraggable: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"sankey\", \"link\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.2,\r\n\t\t\t\tstrokeOpacity: 0,\r\n\t\t\t\tinteractive: true,\r\n\t\t\t\ttooltipText: \"{sourceId} - {targetId}: {value}\"\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"sankey\", \"link\"]).states.create(\"hover\", { fillOpacity: 0.5 });\r\n\r\n\t\tr(\"Label\", [\"sankey\", \"node\"]).setAll({\r\n\t\t\ttext: \"{name}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"Label\", [\"sankey\", \"horizontal\"]).setAll({\r\n\t\t\ty: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingLeft: 15\r\n\t\t});\r\n\r\n\t\tr(\"Label\", [\"sankey\", \"vertical\"]).setAll({\r\n\t\t\tx: p50,\r\n\t\t\tcenterX: p50,\r\n\t\t\tpaddingTop: 15\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/flow: Chord\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Chord\").setAll({\r\n\t\t\tradius: percent(90),\r\n\t\t\tnodeWidth: 10,\r\n\t\t\tpadAngle: 1,\r\n\t\t\tstartAngle: 0,\r\n\t\t\tsort: \"descending\"\r\n\t\t});\r\n\r\n\t\tr(\"ChordDirected\").setAll({\r\n\t\t\tlinkHeadRadius: 10\r\n\t\t});\r\n\r\n\t\tr(\"ChordNodes\").setAll({\r\n\t\t\tx: p50,\r\n\t\t\ty: p50\r\n\t\t});\r\n\r\n\t\tr(\"FlowNode\", [\"chord\"]).setAll({\r\n\t\t\tdraggable: true\r\n\t\t});\r\n\r\n\t\tr(\"ChordLink\").setAll({\r\n\t\t\tsourceRadius: p100,\r\n\t\t\ttargetRadius: p100,\r\n\t\t\tfillStyle: \"solid\",\r\n\t\t\tstrokeStyle: \"solid\",\r\n\t\t\ttooltipText: \"{sourceId} - {targetId}: {value}\"\r\n\t\t});\r\n\r\n\t\tr(\"Slice\", [\"chord\", \"node\", \"shape\"]).setAll({\r\n\t\t\tcornerRadius: 0\r\n\t\t})\r\n\r\n\t\tr(\"RadialLabel\", [\"chord\", \"node\"]).setAll({\r\n\t\t\tradius: 5,\r\n\t\t\ttextType: \"circular\"\r\n\t\t});\r\n\r\n\t\tr(\"ChordLinkDirected\").setAll({\r\n\t\t\theadRadius: 10\r\n\t\t});\r\n\r\n\t\t// Class: Graphics\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"chord\", \"link\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.2,\r\n\t\t\t\tstrokeOpacity: 0,\r\n\t\t\t\tinteractive: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"grid\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"chord\", \"link\", \"shape\"]).states.create(\"hover\", { fillOpacity: 0.5 });\r\n\r\n\t\tr(\"ChordNonRibbon\").setAll({\r\n\t\t\tlinkType: \"curve\" // \"line\" | \"curve\"\r\n\t\t})\r\n\r\n\t\tr(\"ChordLink\", [\"basic\"]).setAll({\r\n\t\t\tfillStyle: \"none\",\r\n\t\t\tstrokeStyle: \"source\"\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"chord\", \"link\", \"shape\", \"basic\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.4\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"chord\", \"link\", \"shape\", \"basic\"]).states.create(\"hover\", { strokeWidth: 2, strokeOpacity: 1 });\r\n\r\n\t}\r\n}\r\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { Color } from \"../../core/util/Color\";\nimport type { FlowLink } from \"./FlowLink\";\nimport type { FlowNodes, IFlowNodesDataItem } from \"./FlowNodes\";\nimport type { ListTemplate } from \"../../core/util/List\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type * as d3sankey from \"d3-sankey\";\n\nimport { FlowDefaultTheme } from \"./FlowDefaultTheme\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\nimport { Container } from \"../../core/render/Container\";\nimport { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\n\nexport interface IFlowDataItem extends ISeriesDataItem {\n\n\t/**\n\t * Link value.\n\t */\n\tvalue: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvalueWorking: number;\n\n\t/**\n\t * Associated link element.\n\t */\n\tlink: FlowLink;\n\n\t/**\n\t * Link's color.\n\t */\n\tfill: Color;\n\n\t/**\n\t * @ignore\n\t */\n\td3SankeyLink: d3sankey.SankeyLink<d3sankey.SankeyExtraProperties, d3sankey.SankeyExtraProperties>;\n\n\t/**\n\t * An ID of the target node.\n\t */\n\ttargetId: string;\n\n\t/**\n\t * An ID of the source node.\n\t */\n\tsourceId: string;\n\n\t/**\n\t * A data item of the source node.\n\t */\n\tsource: DataItem<IFlowNodesDataItem>;\n\n\t/**\n\t * A data item of the target node.\n\t */\n\ttarget: DataItem<IFlowNodesDataItem>;\n\n}\n\nexport interface IFlowSettings extends ISeriesSettings {\n\n\t/**\n\t * A field in data which holds source node ID.\n\t */\n\tsourceIdField?: string;\n\n\t/**\n\t * A field in data which holds target node ID.\n\t */\n\ttargetIdField?: string;\n\n\t/**\n\t * The thickness of node strip in pixels.\n\t *\n\t * @default 10\n\t */\n\tnodeWidth?: number;\n\n\t/**\n\t * Minimum gap between adjacent nodes.\n\t *\n\t * @default 10\n\t */\n\tnodePadding?: number;\n\n\t/**\n\t * Minimum size of the node/link.\n\t * \n\t * It's a relative value to the sum of all values in the series. If set,\n\t * this relative value will be used for small value nodes when calculating\n\t * their size. For example, if it's set to `0.01`, small nodes will be\n\t * sized like their value is 1% of the total sum of all values in series.\n\t *\n\t * @since 5.1.5\n\t */\n\tminSize?: number;\n\n}\n\nexport interface IFlowPrivate extends ISeriesPrivate {\n\tvalueSum?: number;\n\tvalueLow?: number;\n\tvalueHigh?: number;\n}\n\nexport interface IFlowEvents extends ISeriesEvents {\n}\n\n/**\n * A base class for all flow type series: [[Sankey]] and [[Chord]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more info\n */\nexport abstract class Flow extends Series {\n\tpublic static className: string = \"Flow\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([Flow.className]);\n\n\tdeclare public _settings: IFlowSettings;\n\tdeclare public _privateSettings: IFlowPrivate;\n\tdeclare public _dataItemSettings: IFlowDataItem;\n\tdeclare public _events: IFlowEvents;\n\n\t/**\n\t * @ignore\n\t */\n\tdeclare public readonly nodes: FlowNodes;\n\n\t/**\n\t * Container series will place their links in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly linksContainer = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract readonly links: ListTemplate<FlowLink>;\n\n\tprotected _nodesData: d3sankey.SankeyNodeMinimal<{}, {}>[] = [];\n\tprotected _linksData: { source: d3sankey.SankeyNodeMinimal<{}, {}>, target: d3sankey.SankeyNodeMinimal<{}, {}>, value: number }[] = [];\n\tprotected _index = 0;\n\tprotected _nodesDataSet:boolean = false;\n\n\tprotected _linksByIndex: { [index: string]: any } = {};\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(FlowDefaultTheme.new(this._root));\n\n\t\tthis.fields.push(\"disabled\", \"sourceId\", \"targetId\");\n\n\t\tif (this.nodes) {\n\t\t\tthis.nodes.flow = this;\n\t\t}\n\n\t\tsuper._afterNew();\n\n\t\tthis.children.push(this.bulletsContainer);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): FlowLink;\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst nodes = this.nodes;\n\t\tif (nodes) {\n\t\t\tlet unknown = false;\n\t\t\tlet sourceId = dataItem.get(\"sourceId\");\n\t\t\tlet sourceDataItem = nodes.getDataItemById(sourceId);\n\n\t\t\tif (!sourceDataItem) {\n\t\t\t\tif (sourceId == null) {\n\t\t\t\t\tsourceId = \"undefined\" + this._index;\n\t\t\t\t\tthis._index++;\n\t\t\t\t\tunknown = true;\n\t\t\t\t}\n\t\t\t\tnodes.data.push({ id: sourceId, unknown: unknown });\n\t\t\t\tsourceDataItem = nodes.getDataItemById(sourceId)!;\n\t\t\t\tif (!unknown) {\n\t\t\t\t\tsourceDataItem.set(\"name\", sourceId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tunknown = false;\n\t\t\tlet targetId = dataItem.get(\"targetId\");\n\n\t\t\tlet targetDataItem = nodes.getDataItemById(targetId);\n\t\t\tif (!targetDataItem) {\n\t\t\t\tif (targetId == null) {\n\t\t\t\t\ttargetId = \"undefined\" + this._index;\n\t\t\t\t\tthis._index++;\n\t\t\t\t\tunknown = true;\n\t\t\t\t}\n\n\t\t\t\tnodes.data.push({ id: targetId, unknown: unknown });\n\t\t\t\ttargetDataItem = nodes.getDataItemById(targetId)!;\n\t\t\t\tif (!unknown) {\n\t\t\t\t\ttargetDataItem.set(\"name\", targetId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (sourceDataItem) {\n\t\t\t\tdataItem.set(\"source\", sourceDataItem);\n\t\t\t\tnodes.addOutgoingLink(sourceDataItem, dataItem);\n\t\t\t}\n\n\t\t\tif (targetDataItem) {\n\t\t\t\tdataItem.set(\"target\", targetDataItem);\n\t\t\t\tnodes.addincomingLink(targetDataItem, dataItem);\n\t\t\t}\n\n\t\t\tdataItem.set(\"link\", this.makeLink(dataItem));\n\n\t\t\tconst sourceIndex = this.nodes.dataItems.indexOf(sourceDataItem);\n\t\t\tconst targetIndex = this.nodes.dataItems.indexOf(targetDataItem);\n\n\t\t\tthis._linksByIndex[sourceIndex + \"_\" + targetIndex] = dataItem;\n\n\t\t\tif (sourceDataItem.get(\"unknown\")) {\n\t\t\t\tif (targetDataItem) {\n\t\t\t\t\tsourceDataItem.set(\"fill\", targetDataItem.get(\"fill\"));\n\t\t\t\t}\n\n\t\t\t\tdataItem.get(\"link\").set(\"fillStyle\", \"gradient\");\n\t\t\t}\n\n\n\t\t\tif (targetDataItem.get(\"unknown\")) {\n\t\t\t\tif (sourceDataItem) {\n\t\t\t\t\ttargetDataItem.set(\"fill\", sourceDataItem.get(\"fill\"));\n\t\t\t\t}\n\n\t\t\t\tdataItem.get(\"link\").set(\"fillStyle\", \"gradient\");\n\t\t\t}\n\n\t\t\tthis._updateLinkColor(dataItem);\n\t\t}\n\t}\n\n\tprotected _onDataClear() {\n\t\tif(!this.nodes._userDataSet){\n\t\t\tthis.nodes.data.setAll([]);\n\t\t\tthis.nodes._userDataSet = false;\n\t\t}\n\n\t}\t\t\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tlet valueLow = Infinity;\n\t\tlet valueHigh = -Infinity;\n\t\tlet valueSum = 0;\n\n\t\tif (this._valuesDirty) {\n\t\t\tthis._nodesData = [];\n\t\t\tconst nodes = this.nodes;\n\t\t\tif (nodes) {\n\t\t\t\t$array.each(nodes.dataItems, (dataItem) => {\n\t\t\t\t\tconst d3SankeyNode = dataItem.get(\"d3SankeyNode\");\n\t\t\t\t\tthis._nodesData.push(d3SankeyNode);\n\n\t\t\t\t\tconst incoming = dataItem.get(\"incomingLinks\")\n\n\t\t\t\t\tlet sumIncoming = 0;\n\t\t\t\t\tlet sumIncomingWorking = 0;\n\t\t\t\t\tif (incoming) {\n\t\t\t\t\t\t$array.each(incoming, (link) => {\n\t\t\t\t\t\t\tconst value = link.get(\"value\");\n\t\t\t\t\t\t\tconst workingValue = link.get(\"valueWorking\");\n\t\t\t\t\t\t\tsumIncoming += value;\n\t\t\t\t\t\t\tsumIncomingWorking += workingValue;\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tdataItem.set(\"sumIncoming\", sumIncoming);\n\t\t\t\t\tdataItem.set(\"sumIncomingWorking\", sumIncomingWorking);\n\n\t\t\t\t\tconst outgoing = dataItem.get(\"outgoingLinks\")\n\t\t\t\t\tlet sumOutgoing = 0;\n\t\t\t\t\tlet sumOutgoingWorking = 0;\n\t\t\t\t\tif (outgoing) {\n\t\t\t\t\t\t$array.each(outgoing, (link) => {\n\t\t\t\t\t\t\tconst value = link.get(\"value\");\n\t\t\t\t\t\t\tconst workingValue = link.get(\"valueWorking\");\n\t\t\t\t\t\t\tsumOutgoing += value;\n\t\t\t\t\t\t\tsumOutgoingWorking += workingValue;\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tdataItem.set(\"sumOutgoing\", sumOutgoing);\n\t\t\t\t\tdataItem.set(\"sumOutgoingWorking\", sumOutgoingWorking);\n\n\t\t\t\t\tdataItem.set(\"sum\", sumIncoming + sumOutgoing);\n\t\t\t\t\tdataItem.set(\"sumWorking\", sumIncomingWorking + sumOutgoingWorking);\n\n\t\t\t\t\tnodes.updateLegendValue(dataItem);\n\t\t\t\t})\n\t\t\t}\n\t\t\tthis._linksData = [];\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tlet value = dataItem.get(\"value\");\n\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\tif (value < valueLow) {\n\t\t\t\t\t\tvalueLow = value;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (value > valueHigh) {\n\t\t\t\t\t\tvalueHigh = value;\n\t\t\t\t\t}\n\t\t\t\t\tvalueSum += value;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tlet value = dataItem.get(\"value\");\n\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\tlet valueWorking = dataItem.get(\"valueWorking\");\n\t\t\t\t\tlet minSize = this.get(\"minSize\", 0);\n\t\t\t\t\tif (minSize > 0) {\n\t\t\t\t\t\tif (valueWorking < minSize * valueSum) {\n\t\t\t\t\t\t\tvalueWorking = minSize * valueSum;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet d3SankeyLink = { source: dataItem.get(\"source\").get(\"d3SankeyNode\"), target: dataItem.get(\"target\").get(\"d3SankeyNode\"), value: valueWorking };\n\t\t\t\t\tdataItem.setRaw(\"d3SankeyLink\", d3SankeyLink);\n\t\t\t\t\tthis._linksData.push(d3SankeyLink);\n\t\t\t\t\tthis.updateLegendValue(dataItem);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"valueHigh\", valueHigh);\n\t\t\tthis.setPrivateRaw(\"valueLow\", valueLow);\n\t\t\tthis.setPrivateRaw(\"valueSum\", valueSum);\n\t\t}\n\t}\n\n\tpublic _updateLinkColor(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst link = dataItem.get(\"link\");\n\n\t\tconst fillStyle = link.get(\"fillStyle\");\n\t\tconst strokeStyle = link.get(\"strokeStyle\");\n\t\tconst source = dataItem.get(\"source\");\n\t\tconst target = dataItem.get(\"target\");\n\t\tconst sourceFill = source.get(\"fill\");\n\t\tconst targetFill = target.get(\"fill\");\n\t\tlink.remove(\"fillGradient\");\n\t\tlink.remove(\"strokeGradient\");\n\n\t\tswitch (fillStyle) {\n\n\t\t\tcase \"solid\":\n\t\t\t\tlink._applyTemplates();\n\t\t\t\tbreak;\n\t\t\tcase \"source\":\n\t\t\t\tlink.set(\"fill\", sourceFill);\n\t\t\t\tbreak;\n\n\t\t\tcase \"target\":\n\t\t\t\tlink.set(\"fill\", targetFill);\n\t\t\t\tbreak;\n\n\t\t\tcase \"gradient\":\n\t\t\t\tlet gradient = link._fillGradient;\n\t\t\t\tif (!gradient) {\n\t\t\t\t\tgradient = LinearGradient.new(this._root, {});\n\t\t\t\t\tconst sourceStop: any = { color: sourceFill }\n\t\t\t\t\tif (source.get(\"unknown\")) {\n\t\t\t\t\t\tsourceStop.opacity = 0;\n\t\t\t\t\t}\n\t\t\t\t\tconst targetStop: any = { color: targetFill };\n\t\t\t\t\tif (target.get(\"unknown\")) {\n\t\t\t\t\t\ttargetStop.opacity = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tgradient.set(\"stops\", [sourceStop, targetStop]);\n\t\t\t\t\tlink._fillGradient = gradient;\n\t\t\t\t}\n\t\t\t\tlink.set(\"fillGradient\", gradient);\n\t\t\t\tbreak;\n\t\t\tcase \"none\":\n\t\t\t\tlink.set(\"fill\", undefined); // do not use remove!\n\t\t\t\tbreak;\n\t\t}\n\n\t\tswitch (strokeStyle) {\n\t\t\tcase \"solid\":\n\t\t\t\tlink._applyTemplates();\n\t\t\t\tbreak;\n\n\t\t\tcase \"source\":\n\t\t\t\tlink.set(\"stroke\", sourceFill);\n\t\t\t\tbreak;\n\n\t\t\tcase \"target\":\n\t\t\t\tlink.set(\"stroke\", targetFill);\n\n\t\t\tcase \"gradient\":\n\t\t\t\tlet gradient = link._strokeGradient;\n\t\t\t\tif (!gradient) {\n\t\t\t\t\tgradient = LinearGradient.new(this._root, {});\n\t\t\t\t\tconst sourceStop: any = { color: sourceFill }\n\t\t\t\t\tif (source.get(\"unknown\")) {\n\t\t\t\t\t\tsourceStop.opacity = 0;\n\t\t\t\t\t}\n\t\t\t\t\tconst targetStop: any = { color: targetFill };\n\t\t\t\t\tif (target.get(\"unknown\")) {\n\t\t\t\t\t\ttargetStop.opacity = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tgradient.set(\"stops\", [sourceStop, targetStop]);\n\t\t\t\t\tlink._strokeGradient = gradient;\n\t\t\t\t}\n\t\t\t\tlink.set(\"strokeGradient\", gradient);\n\t\t\t\tbreak;\n\n\t\t\tcase \"none\":\n\t\t\t\tlink.remove(\"stroke\");\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tlet link = dataItem.get(\"link\");\n\t\tif (link) {\n\t\t\tthis.links.removeValue(link);\n\t\t\tlink.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Shows diagram's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tconst stateAnimationDuration = \"stateAnimationDuration\";\n\t\tconst stateAnimationEasing = \"stateAnimationEasing\";\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(stateAnimationDuration, this.get(stateAnimationDuration, 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(stateAnimationEasing, this.get(stateAnimationEasing));\n\n\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: 0, duration: duration, easing: easing }).waitForStop());\n\n\t\tconst linkGraphics = dataItem.get(\"link\");\n\t\tlinkGraphics.hide();\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows diagram's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: dataItem.get(\"value\"), duration: duration, easing: easing }).waitForStop());\n\n\t\tconst linkGraphics = dataItem.get(\"link\");\n\t\tlinkGraphics.show();\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tif (dataItem) {\n\t\t\t\tconst link = dataItem.get(\"link\");\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\t\tif (sprite) {\n\t\t\t\t\tconst point = link.getPoint(this._getBulletLocation(bullet));\n\t\t\t\t\tsprite.setAll({ x: point.x, y: point.y });\n\n\t\t\t\t\tif (bullet.get(\"autoRotate\")) {\n\t\t\t\t\t\tsprite.set(\"rotation\", point.angle + bullet.get(\"autoRotateAngle\", 0));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getBulletLocation(bullet: Bullet): number {\n\t\treturn bullet.get(\"locationY\", 0);\n\t}\n}\n","export var abs = Math.abs;\nexport var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\nexport var epsilon = 1e-12;\n","import {max, tau} from \"./math.js\";\n\nfunction range(i, j) {\n  return Array.from({length: j - i}, (_, k) => i + k);\n}\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  return chord(false, false);\n}\n\nexport function chordTranspose() {\n  return chord(false, true);\n}\n\nexport function chordDirected() {\n  return chord(true, false);\n}\n\nfunction chord(directed, transpose) {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = new Array(n),\n        groupIndex = range(0, n),\n        chords = new Array(n * n),\n        groups = new Array(n),\n        k = 0, dx;\n\n    matrix = Float64Array.from({length: n * n}, transpose\n        ? (_, i) => matrix[i % n][i / n | 0]\n        : (_, i) => matrix[i / n | 0][i % n]);\n\n    // Compute the scaling factor from value to angle in [0, 2pi].\n    for (let i = 0; i < n; ++i) {\n      let x = 0;\n      for (let j = 0; j < n; ++j) x += matrix[i * n + j] + directed * matrix[j * n + i];\n      k += groupSums[i] = x;\n    }\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the angles for each group and constituent chord.\n    {\n      let x = 0;\n      if (sortGroups) groupIndex.sort((a, b) => sortGroups(groupSums[a], groupSums[b]));\n      for (const i of groupIndex) {\n        const x0 = x;\n        if (directed) {\n          const subgroupIndex = range(~n + 1, n).filter(j => j < 0 ? matrix[~j * n + i] : matrix[i * n + j]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(a < 0 ? -matrix[~a * n + i] : matrix[i * n + a], b < 0 ? -matrix[~b * n + i] : matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            if (j < 0) {\n              const chord = chords[~j * n + i] || (chords[~j * n + i] = {source: null, target: null});\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[~j * n + i] * k, value: matrix[~j * n + i]};\n            } else {\n              const chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n            }\n          }\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\n        } else {\n          const subgroupIndex = range(0, n).filter(j => matrix[i * n + j] || matrix[j * n + i]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(matrix[i * n + a], matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            let chord;\n            if (i < j) {\n              chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n            } else {\n              chord = chords[j * n + i] || (chords[j * n + i] = {source: null, target: null});\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n              if (i === j) chord.source = chord.target;\n            }\n            if (chord.source && chord.target && chord.source.value < chord.target.value) {\n              const source = chord.source;\n              chord.source = chord.target;\n              chord.target = source;\n            }\n          }\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\n        }\n        x += dx;\n      }\n    }\n\n    // Remove empty chords.\n    chords = Object.values(chords);\n    chords.groups = groups;\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {path} from \"d3-path\";\nimport {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport {abs, cos, epsilon, halfPi, sin} from \"./math.js\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction defaultPadAngle() {\n  return 0;\n}\n\nfunction defaultArrowheadRadius() {\n  return 10;\n}\n\nfunction ribbon(headRadius) {\n  var source = defaultSource,\n      target = defaultTarget,\n      sourceRadius = defaultRadius,\n      targetRadius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      padAngle = defaultPadAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        s = source.apply(this, arguments),\n        t = target.apply(this, arguments),\n        ap = padAngle.apply(this, arguments) / 2,\n        argv = slice.call(arguments),\n        sr = +sourceRadius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        tr = +targetRadius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    if (ap > epsilon) {\n      if (abs(sa1 - sa0) > ap * 2 + epsilon) sa1 > sa0 ? (sa0 += ap, sa1 -= ap) : (sa0 -= ap, sa1 += ap);\n      else sa0 = sa1 = (sa0 + sa1) / 2;\n      if (abs(ta1 - ta0) > ap * 2 + epsilon) ta1 > ta0 ? (ta0 += ap, ta1 -= ap) : (ta0 -= ap, ta1 += ap);\n      else ta0 = ta1 = (ta0 + ta1) / 2;\n    }\n\n    context.moveTo(sr * cos(sa0), sr * sin(sa0));\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) {\n      if (headRadius) {\n        var hr = +headRadius.apply(this, arguments), tr2 = tr - hr, ta2 = (ta0 + ta1) / 2;\n        context.quadraticCurveTo(0, 0, tr2 * cos(ta0), tr2 * sin(ta0));\n        context.lineTo(tr * cos(ta2), tr * sin(ta2));\n        context.lineTo(tr2 * cos(ta1), tr2 * sin(ta1));\n      } else {\n        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n        context.arc(0, 0, tr, ta0, ta1);\n      }\n    }\n    context.quadraticCurveTo(0, 0, sr * cos(sa0), sr * sin(sa0));\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  if (headRadius) ribbon.headRadius = function(_) {\n    return arguments.length ? (headRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : headRadius;\n  };\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (sourceRadius = targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.sourceRadius = function(_) {\n    return arguments.length ? (sourceRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.targetRadius = function(_) {\n    return arguments.length ? (targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : targetRadius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : padAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n\nexport default function() {\n  return ribbon();\n}\n\nexport function ribbonArrow() {\n  return ribbon(defaultArrowheadRadius);\n}\n","export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {pointer, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport BrushEvent from \"./event.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nconst {abs, max, min} = Math;\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection, event) {\n    if (group.tween) {\n      group\n          .on(\"start.brush\", function(event) { emitter(this, arguments).beforestart().start(event); })\n          .on(\"interrupt.brush end.brush\", function(event) { emitter(this, arguments).end(event); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start(event).brush(event).end(event);\n          });\n    }\n  };\n\n  brush.clear = function(group, event) {\n    brush.move(group, null, event);\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    var emit = that.__brush.emitter;\n    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\n  }\n\n  function Emitter(that, args, clean) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n    this.clean = clean;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function(event, mode) {\n      if (this.starting) this.starting = false, this.emit(\"start\", event, mode);\n      else this.emit(\"brush\", event);\n      return this;\n    },\n    brush: function(event, mode) {\n      this.emit(\"brush\", event, mode);\n      return this;\n    },\n    end: function(event, mode) {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\", event, mode);\n      return this;\n    },\n    emit: function(type, event, mode) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new BrushEvent(type, {\n          sourceEvent: event,\n          target: brush,\n          selection: dim.output(this.state.selection),\n          mode,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function started(event) {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && event.shiftKey,\n        lockX,\n        lockY,\n        points = Array.from(event.touches || [event], t => {\n          const i = t.identifier;\n          t = pointer(t, that);\n          t.point0 = t.slice();\n          t.identifier = i;\n          return t;\n        });\n\n    interrupt(that);\n    var emit = emitter(that, arguments, true).beforestart();\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      const pts = [points[0], points[1] || points[0]];\n      state.selection = selection = [[\n          w0 = dim === Y ? W : min(pts[0][0], pts[1][0]),\n          n0 = dim === X ? N : min(pts[0][1], pts[1][1])\n        ], [\n          e0 = dim === Y ? E : max(pts[0][0], pts[1][0]),\n          s0 = dim === X ? S : max(pts[0][1], pts[1][1])\n        ]];\n      if (points.length > 1) move(event);\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = select(event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n\n      dragDisable(event.view);\n    }\n\n    redraw.call(that);\n    emit.start(event, mode.name);\n\n    function moved(event) {\n      for (const p of event.changedTouches || [event]) {\n        for (const d of points)\n          if (d.identifier === p.identifier) d.cur = pointer(p, that);\n      }\n      if (shifting && !lockX && !lockY && points.length === 1) {\n        const point = points[0];\n        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1]))\n          lockY = true;\n        else\n          lockX = true;\n      }\n      for (const point of points)\n        if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];\n      moving = true;\n      noevent(event);\n      move(event);\n    }\n\n    function move(event) {\n      const point = points[0], point0 = point.point0;\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (points[1]) {\n            if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;\n            if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;\n          } else {\n            if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n            else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n            else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          }\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));\n          if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush(event, mode.name);\n      }\n    }\n\n    function ended(event) {\n      nopropagation(event);\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end(event, mode.name);\n    }\n\n    function keydowned(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n\n    function keyupped(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move(event);\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n  }\n\n  function touchmoved(event) {\n    emitter(this, arguments).moved(event);\n  }\n\n  function touchended(event) {\n    emitter(this, arguments).ended(event);\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { IFlowNodesDataItem, FlowNodes } from \"./FlowNodes\";\n\nimport { Container, IContainerPrivate, IContainerSettings } from \"../../core/render/Container\";\n\nexport interface IFlowNodeSettings extends IContainerSettings {\n}\n\nexport interface IFlowNodePrivate extends IContainerPrivate {\n}\n\n/**\n * Base class for flow chart nodes.\n */\nexport class FlowNode extends Container {\n\n\t/**\n\t * Related series.\n\t */\n\tpublic series: FlowNodes | undefined;\n\n\tdeclare public _settings: IFlowNodeSettings;\n\tdeclare public _privateSettings: IFlowNodePrivate;\n\n\tpublic static className: string = \"FlowNode\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([FlowNode.className]);\n\n\tdeclare protected _dataItem: DataItem<IFlowNodesDataItem> | undefined;\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { Color } from \"../../core/util/Color\";\nimport type { Time } from \"../../core/util/Animation\";\nimport type { Flow, IFlowDataItem } from \"./Flow\";\nimport type * as d3sankey from \"d3-sankey\";\n\nimport { Label } from \"../../core/render/Label\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { FlowNode } from \"./FlowNode\";\nimport type { ColorSet } from \"../../core/util/ColorSet\";\n\nimport * as $array from \"../../core/util/Array\";\n\nexport interface IFlowNodesDataItem extends ISeriesDataItem {\n\n\t/**\n\t * Node name.\n\t */\n\tname: string;\n\n\t/**\n\t * An associated node instance.\n\t */\n\tnode: FlowNode;\n\n\t/**\n\t * Node label.\n\t */\n\tlabel: Label;\n\n\t/**\n\t * Node color.\n\t */\n\tfill: Color;\n\n\t/**\n\t * Indicates \"unknown\" node.\n\t */\n\tunknown: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\td3SankeyNode: d3sankey.SankeyNode<d3sankey.SankeyExtraProperties, d3sankey.SankeyExtraProperties>;\n\n\t/**\n\t * Sum of values of all incoming links.\n\t */\n\tsumIncoming: number;\n\n\t/**\n\t * Sum of values of all outgoing links.\n\t */\n\tsumOutgoing: number;\n\n\t/**\n\t * @ignore\n\t */\n\tsumIncomingWorking: number;\n\n\t/**\n\t * @ignore\n\t */\n\tsumOutgoingWorking: number;\n\n\t/**\n\t * Sum of values of all links: incoming and outgoing.\n\t */\n\tsum: number;\n\n\t/**\n\t * @ignore\n\t */\n\tsumWorking: number;\n\n\t/**\n\t * A list of incoming link data items.\n\t */\n\tincomingLinks: Array<DataItem<IFlowDataItem>>;\n\n\t/**\n\t * A list of outgoing link data items.\n\t */\n\toutgoingLinks: Array<DataItem<IFlowDataItem>>;\n\n\t/**\n\t * Depth of the node.\n\t */\n\tdepth: number;\n\n}\n\nexport interface IFlowNodesSettings extends ISeriesSettings {\n\n\t/**\n\t * A field in data boolean setting if the node is \"unknown\".\n\t *\n\t * @default \"unknown\"\n\t */\n\tunknownField?: string;\n\n\t/**\n\t * A field in data that holds name for the node.\n\t *\n\t * @default \"id\"\n\t */\n\tnameField?: string;\n\n\t/**\n\t * A field in data that holds color used for fills nodes.\n\t *\n\t * @default \"fill\"\n\t */\n\tfillField?: string;\n\n\t/**\n\t * A [[ColorSet]] that series will use to apply to its nodes.\n\t */\n\tcolors?: ColorSet;\n\n\t/**\n\t * Animation duration in ms.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * Easing function to use for node animations.\n\t */\n\tanimationEasing?: (t: Time) => Time;\n}\n\nexport interface IFlowNodesPrivate extends ISeriesPrivate {\n}\n\nexport interface IFlowNodesEvents extends ISeriesEvents {\n}\n\n\n/**\n * Holds instances of nodes for a [[Flow]] series.\n */\nexport abstract class FlowNodes extends Series {\n\tpublic static className: string = \"FlowNodes\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([FlowNodes.className]);\n\n\tdeclare public _settings: IFlowNodesSettings;\n\tdeclare public _privateSettings: IFlowNodesPrivate;\n\tdeclare public _dataItemSettings: IFlowNodesDataItem;\n\tdeclare public _events: IFlowNodesEvents;\n\n\t/**\n\t * List of label elements.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, {}, [this.labels.template])\n\t);\n\n\t/**\n\t * List of node elements.\n\t *\n\t * @default new ListTemplate<FlowNode>\n\t */\n\tpublic readonly nodes: ListTemplate<FlowNode> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => FlowNode._new(this._root, { themeTags: [\"node\"] }, [this.nodes.template])\n\t);\n\n\t/**\n\t * Related [[Flow]] series.\n\t */\n\tpublic abstract flow: Flow | undefined;\n\n\tpublic _userDataSet = false;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"unknown\", \"name\", \"fill\");\n\n\t\tthis.set(\"idField\", \"id\");\n\t\tthis.set(\"nameField\", \"id\");\n\t\tthis.set(\"fillField\", \"fill\");\n\t\tthis.set(\"unknownField\", \"unknown\");\n\n\t\tthis.children.push(this.bulletsContainer);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _onDataClear() {\n\t\tconst colors = this.get(\"colors\");\n\t\tif (colors) {\n\t\t\tcolors.reset();\n\t\t}\n\n\t\tthis._userDataSet = true;\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\t\tdataItem.setRaw(\"d3SankeyNode\", { name: dataItem.get(\"id\"), dataItem: dataItem });\n\n\t\tif (dataItem.get(\"fill\") == null) {\n\t\t\tlet colors = this.get(\"colors\");\n\t\t\tif (colors) {\n\t\t\t\tdataItem.setRaw(\"fill\", colors.next());\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"node\", this.makeNode(dataItem));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTag?: string): FlowNode {\n\n\t\tconst node = this.nodes.make();\n\t\tthis.nodes.push(node);\n\n\t\tif (themeTag) {\n\t\t\tnode.addTag(themeTag);\n\t\t}\n\n\t\tif (dataItem.get(\"unknown\")) {\n\t\t\tnode.addTag(\"unknown\");\n\t\t}\n\n\t\tthis.children.push(node);\n\t\tnode._setDataItem(dataItem);\n\t\tnode.series = this;\n\n\t\tdataItem.set(\"node\", node);\n\t\treturn node;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tlet node = dataItem.get(\"node\");\n\t\tif (node) {\n\t\t\tthis.nodes.removeValue(node);\n\t\t\tnode.dispose();\n\t\t}\n\t\tlet label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tthis.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addincomingLink(dataItem: DataItem<this[\"_dataItemSettings\"]>, link: DataItem<IFlowDataItem>) {\n\t\tlet incoming = dataItem.get(\"incomingLinks\");\n\t\tif (!incoming) {\n\t\t\tincoming = [];\n\t\t\tdataItem.set(\"incomingLinks\", incoming)\n\t\t}\n\t\tincoming.push(link);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addOutgoingLink(dataItem: DataItem<this[\"_dataItemSettings\"]>, link: DataItem<IFlowDataItem>) {\n\t\tlet outgoing = dataItem.get(\"outgoingLinks\");\n\t\tif (!outgoing) {\n\t\t\toutgoing = [];\n\t\t\tdataItem.set(\"outgoingLinks\", outgoing)\n\t\t}\n\t\toutgoing.push(link);\n\t}\n\n\t/**\n\t * Shows node's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst flow = this.flow;\n\t\tif (flow) {\n\n\t\t\tlet label = dataItem.get(\"label\");\n\n\t\t\tif (label) {\n\t\t\t\tlabel.show(duration);\n\t\t\t}\n\n\t\t\tlet links = dataItem.get(\"outgoingLinks\");\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.showDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tlinks = dataItem.get(\"incomingLinks\");\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.showDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tawait promises;\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst flow = this.flow;\n\t\tif (flow) {\n\n\t\t\tlet label = dataItem.get(\"label\");\n\n\t\t\tif (label) {\n\t\t\t\tlabel.hide(duration);\n\t\t\t}\n\n\t\t\tlet links = dataItem.get(\"outgoingLinks\");\n\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.hideDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tlinks = dataItem.get(\"incomingLinks\");\n\n\t\t\tif (links) {\n\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.hideDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tawait promises;\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { FlowNode } from \"./FlowNode\";\nimport type { Chord } from \"./Chord\";\nimport type { Bullet } from \"../../core/render/Bullet\";\n\nimport { FlowNodes, IFlowNodesSettings, IFlowNodesDataItem, IFlowNodesPrivate, IFlowNodesEvents } from \"./FlowNodes\";\nimport { Slice } from \"../../core/render/Slice\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\n\nimport * as $math from \"../../core/util/Math\";\n\nexport interface IChordNodesDataItem extends IFlowNodesDataItem {\n\n\t/**\n\t * Node [[Slice]] element.\n\t */\n\tslice: Slice;\n\n\t/**\n\t * Node label element.\n\t */\n\tlabel: RadialLabel;\n\n}\n\nexport interface IChordNodesSettings extends IFlowNodesSettings {\n}\n\nexport interface IChordNodesPrivate extends IFlowNodesPrivate {\n}\n\nexport interface IChordNodesEvents extends IFlowNodesEvents {\n}\n\n/**\n * Holds instances of nodes for a [[Chord]] series.\n */\nexport class ChordNodes extends FlowNodes {\n\tpublic static className: string = \"ChordNodes\";\n\tpublic static classNames: Array<string> = FlowNodes.classNames.concat([ChordNodes.className]);\n\n\t/**\n\t * List of label elements.\n\t *\n\t * @default new ListTemplate<RadialLabel>\n\t */\n\tpublic readonly labels: ListTemplate<RadialLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RadialLabel._new(this._root, {}, [this.labels.template])\n\t);\n\n\tdeclare public _settings: IChordNodesSettings;\n\tdeclare public _privateSettings: IChordNodesPrivate;\n\tdeclare public _dataItemSettings: IChordNodesDataItem;\n\tdeclare public _events: IChordNodesEvents;\n\n\t/**\n\t * Related [[Chord]] series.\n\t */\n\tpublic flow: Chord | undefined;\n\n\tprotected _dAngle: number = 0;\n\n\t/**\n\t * List of slice elements.\n\t *\n\t * @default new ListTemplate<Slice>\n\t */\n\tpublic readonly rectangles: ListTemplate<Slice> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Slice._new(this._root, { themeTags: [\"shape\"] }, [this.rectangles.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): FlowNode {\n\t\tconst node = super.makeNode(dataItem, \"chord\");\n\n\t\tconst slice = node.children.insertIndex(0, this.rectangles.make());\n\t\tdataItem.set(\"slice\", slice);\n\t\tslice._setSoft(\"fill\", dataItem.get(\"fill\"));\n\n\t\tconst label = this.labels.make();\n\t\tthis.labels.push(label);\n\t\tlabel.addTag(\"flow\");\n\t\tlabel.addTag(\"chord\");\n\t\tlabel.addTag(\"node\");\n\n\t\tnode.children.push(label);\n\t\tdataItem.set(\"label\", label);\n\n\t\tnode.events.on(\"dragstart\", (e) => {\n\t\t\tlet point = this.toLocal(e.point);\n\t\t\tconst angle = $math.getAngle({ x: 0, y: 0 }, point);\n\t\t\tif (this.flow) {\n\t\t\t\tthis._dAngle = this.flow.get(\"startAngle\", 0) - angle;\n\t\t\t}\n\t\t})\n\n\t\tnode.events.on(\"dragged\", (e) => {\n\t\t\tlet point = this.toLocal(e.point);\n\t\t\tconst angle = $math.getAngle({ x: 0, y: 0 }, point);\n\n\t\t\tnode.setAll({ x: 0, y: 0 });\n\t\t\tif (this.flow) {\n\t\t\t\tthis.flow.set(\"startAngle\", angle + this._dAngle);\n\t\t\t}\n\t\t})\n\n\t\tlabel._setDataItem(dataItem);\n\t\tslice._setDataItem(dataItem);\n\n\t\treturn node;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tif (dataItem) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\t\t\t\t\tif (slice) {\n\t\t\t\t\t\tconst radius = slice.get(\"radius\", 0);\n\t\t\t\t\t\tconst innerRadius = slice.get(\"innerRadius\", 0);\n\t\t\t\t\t\tconst bulletRadius = innerRadius + (radius - innerRadius) * locationY;\n\t\t\t\t\t\tconst angle = slice.get(\"startAngle\", 0) + slice.get(\"arc\", 0) * locationX;\n\t\t\t\t\t\tsprite.setAll({ x: bulletRadius * $math.cos(angle), y: bulletRadius * $math.sin(angle) });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\nimport type { IFlowNodesDataItem } from \"./FlowNodes\";\nimport type { IFlowDataItem, Flow } from \"./Flow\";\nimport type { IOrientationPoint, IPoint } from \"../../core/util/IPoint\";\nimport type { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\nimport { Percent } from \"../../core/util/Percent\";\n\nexport interface IFlowLinkSettings extends IGraphicsSettings {\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource?: DataItem<IFlowNodesDataItem>;\n\n\t/**\n\t * Source node data item.\n\t */\n\ttarget?: DataItem<IFlowNodesDataItem>;\n\n\t/**\n\t * Type of fill to use for links.\n\t */\n\tfillStyle?: \"solid\" | \"source\" | \"target\" | \"gradient\" | \"none\";\n\n\t/**\n\t * Type of outline to use for links.\n\t */\n\tstrokeStyle?: \"solid\" | \"source\" | \"target\" | \"gradient\" | \"none\";\n\n}\n\nexport interface IFlowLinkPrivate extends IGraphicsPrivate {\n}\n\n/**\n * A base class for a flow link.\n */\nexport abstract class FlowLink extends Graphics {\n\n\tpublic series: Flow | undefined;\n\n\tdeclare public _settings: IFlowLinkSettings;\n\tdeclare public _privateSettings: IFlowLinkPrivate;\n\n\tpublic static className: string = \"FlowLink\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([FlowLink.className]);\n\n\tdeclare protected _dataItem: DataItem<IFlowDataItem> | undefined;\n\n\tpublic _fillGradient: LinearGradient | undefined;\n\tpublic _strokeGradient: LinearGradient | undefined;\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"fillStyle\")) {\n\t\t\tconst series = this.series;\n\t\t\tconst dataItem = this.dataItem as DataItem<IFlowDataItem>;\n\t\t\tif (series && dataItem) {\n\t\t\t\tseries._updateLinkColor(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic abstract getPoint(location: number): IOrientationPoint;\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tlet tooltipY = this.get(\"tooltipY\");\n\t\tlet position = 0.5;\n\t\tif (tooltipY instanceof Percent) {\n\t\t\tposition = tooltipY.value;\n\t\t}\n\n\t\treturn this.getPoint(position);\n\t}\n}\n","import { FlowLink, IFlowLinkPrivate, IFlowLinkSettings } from \"./FlowLink\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IChordNodesDataItem } from \"./ChordNodes\";\nimport type { Percent } from \"../../core/util/Percent\";\nimport type { Chord, IChordDataItem } from \"./Chord\";\nimport type { IOrientationPoint, IPoint } from \"../../core/util/IPoint\";\nimport * as $math from \"../../core/util/Math\";\n\nexport interface IChordLinkSettings extends IFlowLinkSettings {\n\n\t/**\n\t * Source data item.\n\t */\n\tsource?: DataItem<IChordNodesDataItem>;\n\n\t/**\n\t * target data item.\n\t */\n\ttarget?: DataItem<IChordNodesDataItem>;\n\n\t/**\n\t * Radius of the link at the source.\n\t */\n\tsourceRadius?: number | Percent;\n\n\t/**\n\t * Radius of the link at the end (target).\n\t */\n\ttargetRadius?: number | Percent;\n\n}\n\nexport interface IChordLinkPrivate extends IFlowLinkPrivate {\n}\n\n/**\n * A link element used in [[Chord]] chart.\n */\nexport class ChordLink extends FlowLink {\n\n\tpublic _p0: IPoint | undefined;\n\tpublic _p1: IPoint | undefined;\n\n\tpublic _type: \"line\" | \"curve\" | undefined;\n\n\tdeclare public _settings: IChordLinkSettings;\n\tdeclare public _privateSettings: IChordLinkPrivate;\n\n\tpublic static className: string = \"ChordLink\";\n\tpublic static classNames: Array<string> = FlowLink.classNames.concat([ChordLink.className]);\n\n\tdeclare protected _dataItem: DataItem<IChordDataItem> | undefined;\n\n\tdeclare public series: Chord | undefined;\n\n\tpublic getPoint(location: number): IOrientationPoint {\n\t\tif (this._p0 && this._p1) {\n\t\t\tif (this._type === \"line\") {\n\t\t\t\tlet p = $math.getPointOnLine(this._p0, this._p1, location);\n\t\t\t\treturn { x: p.x, y: p.y, angle: $math.getAngle(this._p0, this._p1) };\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet p0 = $math.getPointOnQuadraticCurve(this._p0, this._p1, { x: 0, y: 0 }, Math.max(0, location - 0.01));\n\t\t\t\tlet p1 = $math.getPointOnQuadraticCurve(this._p0, this._p1, { x: 0, y: 0 }, Math.min(1, location + 0.01));\n\t\t\t\tlet p = $math.getPointOnQuadraticCurve(this._p0, this._p1, { x: 0, y: 0 }, location);\n\n\t\t\t\treturn { x: p.x, y: p.y, angle: $math.getAngle(p0, p1) };\n\t\t\t}\n\t\t}\n\t\treturn { x: 0, y: 0, angle: 0 };\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { RadialLabel } from \"../../core/render/RadialLabel\";\n\nimport { Flow, IFlowSettings, IFlowDataItem, IFlowPrivate, IFlowEvents } from \"./Flow\";\nimport { chord, ribbon, RibbonGenerator, RibbonSubgroup, Ribbon } from \"d3-chord\";\nimport { ascending, descending } from \"d3\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { ChordNodes, IChordNodesDataItem } from \"./ChordNodes\";\nimport { ChordLink } from \"./ChordLink\";\nimport { Percent, p100, p50 } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\n\n\nexport interface IChordDataItem extends IFlowDataItem {\n\n\t/**\n\t * A link element.\n\t */\n\tlink: ChordLink;\n\n\t/**\n\t * A label element.\n\t */\n\tlabel: RadialLabel;\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource: DataItem<IChordNodesDataItem>;\n\n\t/**\n\t * Target node data item.\n\t */\n\ttarget: DataItem<IChordNodesDataItem>;\n\n}\n\nexport interface IChordSettings extends IFlowSettings {\n\n\t/**\n\t * Angle of a gap between each node, in degrees.\n\t *\n\t * @default 1\n\t */\n\tpadAngle?: number;\n\n\t/**\n\t * Radius of the diagram in percent or pixels.\n\t *\n\t * If set in percent, it will be relative to the whole area available for\n\t * the series.\n\t *\n\t * @default 90%\n\t */\n\tradius?: number | Percent;\n\n\t/**\n\t * The thickness of node strip in pixels.\n\t *\n\t * @default 10\n\t */\n\tnodeWidth?: number;\n\n\t/**\n\t * Starting angle in degrees.\n\t *\n\t * @default 0\n\t */\n\tstartAngle?: number;\n\n\t/**\n\t * How to sort nodes by their value.\n\t *\n\t * @default \"descending\"\n\t */\n\tsort?: \"ascending\" | \"descending\" | \"none\"\n\n}\n\nexport interface IChordPrivate extends IFlowPrivate {\n}\n\nexport interface IChordEvents extends IFlowEvents {\n}\n\n/**\n * Regular chord series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\n * @important\n */\nexport class Chord extends Flow {\n\n\tpublic static className: string = \"Chord\";\n\tpublic static classNames: Array<string> = Flow.classNames.concat([Chord.className]);\n\n\t/**\n\t * List of link elements.\n\t *\n\t * @default new ListTemplate<ChordLink>\n\t */\n\tpublic readonly links: ListTemplate<ChordLink> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => ChordLink._new(this._root, { themeTags: [\"link\", \"shape\"] }, [this.links.template])\n\t);\n\n\t/**\n\t * A series for all chord nodes.\n\t *\n\t * @default ChordNodes.new()\n\t */\n\tpublic readonly nodes: ChordNodes = this.children.push(ChordNodes.new(this._root, {}));\n\n\tdeclare public _settings: IChordSettings;\n\tdeclare public _privateSettings: IChordPrivate;\n\tdeclare public _dataItemSettings: IChordDataItem;\n\tdeclare public _events: IChordEvents;\n\n\tpublic _d3chord = chord();\n\tpublic _chordLayout: { source: { index: number, startAngle: number, endAngle: number, value: number }, target: { index: number, startAngle: number, endAngle: number, value: number } }[] = [];\n\tpublic _ribbon = ribbon();\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"chord\"]);\n\t\tthis.linksContainer.setAll({ x: p50, y: p50 })\n\t\tthis.bulletsContainer.setAll({ x: p50, y: p50 });\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _fixRibbon(ribbon: RibbonGenerator<any, Ribbon, RibbonSubgroup>) {\n\t\tribbon.startAngle((d) => {\n\t\t\treturn d.startAngle + this.get(\"startAngle\", 0) * $math.RADIANS + Math.PI / 2;\n\t\t})\n\n\t\tribbon.endAngle((d) => {\n\t\t\treturn d.endAngle + this.get(\"startAngle\", 0) * $math.RADIANS + Math.PI / 2;\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): ChordLink {\n\t\tconst link = this.linksContainer.children.push(this.links.make());\n\t\tthis.links.push(link);\n\t\tlink._setDataItem(dataItem);\n\t\tlink.set(\"source\", dataItem.get(\"source\"));\n\t\tlink.set(\"target\", dataItem.get(\"target\"));\n\t\tlink.series = this;\n\t\treturn link;\n\t}\n\n\tprotected _makeMatrix(): number[][] {\n\t\tconst matrix: number[][] = [];\n\t\t$array.each(this.nodes.dataItems, (sourceDataItem) => {\n\t\t\tconst group: number[] = [];\n\t\t\tmatrix.push(group);\n\t\t\tlet outgoing = sourceDataItem.get(\"outgoingLinks\");\n\n\t\t\t$array.each(this.nodes.dataItems, (targetDataItem) => {\n\t\t\t\tlet value = 0;\n\t\t\t\tif (outgoing) {\n\t\t\t\t\t$array.each(outgoing, (outgoingLink) => {\n\t\t\t\t\t\tif (outgoingLink.get(\"target\") === targetDataItem) {\n\t\t\t\t\t\t\tvalue = outgoingLink.get(\"valueWorking\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet valueSum = this.getPrivate(\"valueSum\", 0);\n\t\t\t\t\t\tlet minSize = this.get(\"minSize\", 0);\n\t\t\t\t\t\tif(value > 0 && minSize > 0){\n\t\t\t\t\t\t\tif(value < valueSum * minSize){\n\t\t\t\t\t\t\t\tvalue = valueSum * minSize;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tgroup.push(value);\n\t\t\t})\n\t\t})\n\t\treturn matrix;\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis._fixRibbon(this._ribbon);\n\n\t\tlet chordChanged = false;\n\n\t\tif (this._valuesDirty || this._sizeDirty || this.isDirty(\"padAngle\") || this.isDirty(\"startAngle\")) {\n\n\t\t\tconst matrix = this._makeMatrix();\n\n\t\t\tthis._d3chord.padAngle(this.get(\"padAngle\", 0) * $math.RADIANS);\n\t\t\tconst sort = this.get(\"sort\");\n\n\t\t\tif (sort === \"ascending\") {\n\t\t\t\tthis._d3chord.sortGroups(ascending);\n\t\t\t}\n\t\t\telse if (sort === \"descending\") {\n\t\t\t\tthis._d3chord.sortGroups(descending);\n\t\t\t}\n/*\n\t\t\tthis._d3chord.sortSubgroups((a, b)=>{\n\t\t\t\tif (a != Math.round(a)) return false\n\t\t\t\tif (b != Math.round(b)) return true\n\t\t\t\treturn b < a ? -1 : b > a ? 1 : 0;\n\t\t\t})\n*/\n\t\t\tthis._chordLayout = this._d3chord(matrix);\n\n\t\t\tchordChanged = true;\n\t\t}\n\n\t\tif (chordChanged || this.isDirty(\"radius\") || this.isDirty(\"nodeWidth\")) {\n\t\t\tlet radius = $utils.relativeToValue(this.get(\"radius\", 0), Math.min(this.innerWidth(), this.innerHeight())) / 2;\n\n\t\t\tlet i = 0;\n\n\t\t\tconst chordStartAngle = this.get(\"startAngle\", 0);\n\t\t\tconst nodeWidth = this.get(\"nodeWidth\", 0);\n\n\t\t\t$array.each(this.nodes.dataItems, (dataItem) => {\n\t\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\t\tconst chordGroup = (this._chordLayout as any).groups[i];\n\t\t\t\tconst startAngle = chordGroup.startAngle * $math.DEGREES + chordStartAngle;\n\t\t\t\tconst endAngle = chordGroup.endAngle * $math.DEGREES + chordStartAngle;\n\t\t\t\tslice.setAll({ radius: radius, innerRadius: radius - nodeWidth, startAngle: startAngle as number, arc: endAngle - startAngle })\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tlabel.setAll({ labelAngle: startAngle + (endAngle - startAngle) / 2 });\n\t\t\t\tlabel.setPrivate(\"radius\", radius);\n\t\t\t\tlabel.setPrivate(\"innerRadius\", 0.1);\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tconst linkRadius = radius - this.get(\"nodeWidth\", 0);\n\n\t\t\t$array.each(this._chordLayout, (chord) => {\n\n\t\t\t\tlet dataItem = this._linksByIndex[chord.source.index + \"_\" + chord.target.index];\n\n\t\t\t\tif (!dataItem) {\n\t\t\t\t\tdataItem = this._linksByIndex[chord.target.index + \"_\" + chord.source.index];\n\t\t\t\t}\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tconst link = dataItem.get(\"link\");\n\t\t\t\t\tthis._getLinkPoints(link, linkRadius, chord);\n\t\t\t\t\tthis._updateLink(this._ribbon, link, linkRadius, chord);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _getLinkPoints(link: ChordLink, linkRadius: number, chordLayoutItem: any) {\n\t\tconst source = chordLayoutItem.source;\n\t\tconst target = chordLayoutItem.target;\n\n\t\tconst chordStartAngle = this.get(\"startAngle\", 0) * $math.RADIANS;\n\n\t\tif (source && target) {\n\t\t\tconst startAngle0 = source.startAngle;\n\t\t\tconst endAngle0 = source.endAngle\n\t\t\tconst angle0 = startAngle0 + (endAngle0 - startAngle0) / 2 + chordStartAngle;\n\n\t\t\tconst startAngle1 = target.startAngle;\n\t\t\tconst endAngle1 = target.endAngle\n\t\t\tconst angle1 = startAngle1 + (endAngle1 - startAngle1) / 2 + chordStartAngle;\n\n\t\t\tlink._p0 = { x: linkRadius * Math.cos(angle0), y: linkRadius * Math.sin(angle0) };\n\t\t\tlink._p1 = { x: linkRadius * Math.cos(angle1), y: linkRadius * Math.sin(angle1) };\n\t\t}\n\t}\n\n\tprotected _updateLink(ribbon: RibbonGenerator<any, Ribbon, RibbonSubgroup>, link: ChordLink, linkRadius: number, chordLayoutItem: any) {\n\t\tif (chordLayoutItem) {\n\t\t\tribbon.sourceRadius($utils.relativeToValue(link.get(\"sourceRadius\", p100), linkRadius));\n\t\t\tribbon.targetRadius($utils.relativeToValue(link.get(\"targetRadius\", p100), linkRadius));\n\n\t\t\tlink.set(\"draw\", (display) => {\n\t\t\t\tribbon.context(display as any);\n\t\t\t\tribbon(chordLayoutItem);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tlet label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.dispose();\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { ChordDirected, IChordDirectedDataItem } from \"./ChordDirected\";\n\nimport { ChordLink, IChordLinkPrivate, IChordLinkSettings } from \"./ChordLink\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\n\nexport interface IChordLinkDirectedSettings extends IChordLinkSettings {\n\n\t/**\n\t * Length of the link arrow in pixels.\n\t *\n\t * @default 10\n\t */\n\theadRadius?: number;\n\n}\n\nexport interface IChordLinkDirectedPrivate extends IChordLinkPrivate {\n}\n\n/**\n * A link element used in [[ChordDirected]] chart.\n */\nexport class ChordLinkDirected extends ChordLink {\n\tdeclare public _settings: IChordLinkDirectedSettings;\n\tdeclare public _privateSettings: IChordLinkDirectedPrivate;\n\n\tpublic static className: string = \"ChordLinkDirected\";\n\tpublic static classNames: Array<string> = ChordLink.classNames.concat([ChordLinkDirected.className]);\n\n\tdeclare protected _dataItem: DataItem<IChordDirectedDataItem> | undefined;\n\n\tdeclare public series: ChordDirected | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"chord\", \"link\", \"directed\"]);\n\n\t\tsuper._afterNew();\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\n\nimport { Chord, IChordSettings, IChordDataItem, IChordPrivate, IChordEvents } from \"./Chord\";\nimport { ChordLinkDirected } from \"./ChordLinkDirected\";\nimport { chordDirected, ribbonArrow, ribbon, RibbonArrowGenerator, Ribbon, RibbonSubgroup } from \"d3-chord\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IChordDirectedDataItem extends IChordDataItem {\n\n}\n\nexport interface IChordDirectedSettings extends IChordSettings {\n\n\t/**\n\t * Length of the link arrow in pixels.\n\t *\n\t * Set to `null` to disable arrowheads.\n\t *\n\t * @default 10\n\t */\n\tlinkHeadRadius?: number | undefined;\n\n}\n\nexport interface IChordDirectedPrivate extends IChordPrivate {\n}\n\nexport interface IChordDirectedEvents extends IChordEvents {\n}\n\n/**\n * Directed chord series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\n * @important\n */\nexport class ChordDirected extends Chord {\n\n\tpublic static className: string = \"ChordDirected\";\n\tpublic static classNames: Array<string> = Chord.classNames.concat([ChordDirected.className]);\n\n\tdeclare public _settings: IChordDirectedSettings;\n\tdeclare public _privateSettings: IChordDirectedPrivate;\n\tdeclare public _dataItemSettings: IChordDirectedDataItem;\n\tdeclare public _events: IChordDirectedEvents;\n\n\tpublic _d3chord = chordDirected();\n\tpublic _ribbonArrow: RibbonArrowGenerator<any, Ribbon, RibbonSubgroup> = ribbonArrow();\n\n\t/**\n\t * List of link elements.\n\t *\n\t * @default new ListTemplate<ChordLinkDirected>\n\t */\n\tpublic readonly links: ListTemplate<ChordLinkDirected> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => ChordLinkDirected._new(this._root, { themeTags: [\"link\", \"shape\"] }, [this.links.template])\n\t);\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): ChordLinkDirected {\n\t\tconst link = this.linksContainer.children.push(this.links.make());\n\t\tlink._setDataItem(dataItem);\n\t\tlink.set(\"source\", dataItem.get(\"source\"));\n\t\tlink.set(\"target\", dataItem.get(\"target\"));\n\n\t\tlink.series = this;\n\n\t\treturn link;\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"directed\"]);\n\t\tsuper._afterNew();\n\t\tthis._markDirtyKey(\"linkHeadRadius\");\n\t}\n\n\tpublic _prepareChildren() {\n\t\tconst linkHeadRadius = \"linkHeadRadius\";\n\t\tif (this.isDirty(linkHeadRadius)) {\n\t\t\tconst headRadius = this.get(linkHeadRadius);\n\t\t\tif (headRadius == null) {\n\t\t\t\tthis._ribbon = ribbon();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet ribbon = ribbonArrow();\n\t\t\t\tribbon.headRadius(headRadius);\n\t\t\t\tthis._ribbon = ribbon;\n\t\t\t}\n\t\t}\n\n\t\tsuper._prepareChildren();\n\t}\n}\n","import type { ChordLink } from \"./ChordLink\";\nimport type { RibbonGenerator, RibbonSubgroup, Ribbon } from \"d3-chord\";\n\nimport { Chord, IChordSettings, IChordDataItem, IChordPrivate, IChordEvents } from \"./Chord\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IChordNonRibbonDataItem extends IChordDataItem {\n\n}\n\nexport interface IChordNonRibbonSettings extends IChordSettings {\n\n\t/**\n\t * Type of the link:\n\t *\n\t * `\"curve\"` (default) will display link as a curved line.\n\t * `\"line\"` will display link as a straight line.\n\t *\n\t * @default \"curve\"\n\t */\n\tlinkType?: \"curve\" | \"line\"\n\n}\n\nexport interface IChordNonRibbonPrivate extends IChordPrivate {\n}\n\nexport interface IChordNonRibbonEvents extends IChordEvents {\n}\n\n/**\n * Chord series with think line links.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\n * @important\n */\nexport class ChordNonRibbon extends Chord {\n\n\tpublic static className: string = \"ChordNonRibbon\";\n\tpublic static classNames: Array<string> = Chord.classNames.concat([ChordNonRibbon.className]);\n\n\tdeclare public _settings: IChordNonRibbonSettings;\n\tdeclare public _privateSettings: IChordNonRibbonPrivate;\n\tdeclare public _dataItemSettings: IChordNonRibbonDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"chord\", \"basic\"]);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _makeMatrix(): number[][] {\n\t\tconst matrix: number[][] = [];\n\t\t$array.each(this.nodes.dataItems, (sourceDataItem) => {\n\t\t\tconst group: number[] = [];\n\t\t\tmatrix.push(group);\n\n\t\t\t$array.each(this.nodes.dataItems, (targetDataItem) => {\n\t\t\t\tlet value = 1;\n\n\t\t\t\tif (sourceDataItem === targetDataItem) {\n\t\t\t\t\tvalue = 0;\n\t\t\t\t}\n\n\t\t\t\tgroup.push(value);\n\t\t\t})\n\t\t})\n\t\treturn matrix;\n\t}\n\n\tprotected _updateLink(_ribbon: RibbonGenerator<any, Ribbon, RibbonSubgroup>, link: ChordLink, _linkRadius: number, chordLayoutItem: any) {\n\t\tlink._type = this.get(\"linkType\");\n\t\tif (chordLayoutItem) {\n\t\t\tconst linkType = this.get(\"linkType\");\n\n\t\t\tlink.set(\"draw\", (display) => {\n\t\t\t\tlet p0 = link._p0;\n\t\t\t\tlet p1 = link._p1;\n\t\t\t\tif (p0 && p1) {\n\t\t\t\t\tdisplay.moveTo(p0.x, p0.y);\n\t\t\t\t\tif (linkType == \"line\") {\n\t\t\t\t\t\tdisplay.lineTo(p1.x, p1.y);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdisplay.quadraticCurveTo(0, 0, p1.x, p1.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _getLinkPoints(link: ChordLink, linkRadius: number, _chordLayoutItem: any) {\n\t\tconst source = link.get(\"source\");\n\t\tconst target = link.get(\"target\");\n\n\t\tif (source && target) {\n\n\t\t\tconst sourceSlice = source.get(\"slice\");\n\t\t\tconst targetSlice = target.get(\"slice\");\n\n\t\t\tconst startAngle0 = sourceSlice.get(\"startAngle\", 0);\n\t\t\tconst arc0 = sourceSlice.get(\"arc\", 0)\n\t\t\tconst angle0 = startAngle0 + arc0 / 2;\n\n\t\t\tconst startAngle1 = targetSlice.get(\"startAngle\", 0);\n\t\t\tconst arc1 = targetSlice.get(\"arc\", 0)\n\t\t\tconst angle1 = startAngle1 + arc1 / 2;\n\n\t\t\tlink._p0 = { x: linkRadius * $math.cos(angle0), y: linkRadius * $math.sin(angle0) };\n\t\t\tlink._p1 = { x: linkRadius * $math.cos(angle1), y: linkRadius * $math.sin(angle1) };\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { FlowNode } from \"./FlowNode\";\nimport type { Sankey } from \"./Sankey\";\nimport type { Bullet } from \"../../core/render/Bullet\";\n\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { FlowNodes, IFlowNodesSettings, IFlowNodesDataItem, IFlowNodesPrivate, IFlowNodesEvents } from \"./FlowNodes\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\n\nexport interface ISankeyNodesDataItem extends IFlowNodesDataItem {\n\trectangle: RoundedRectangle;\n}\n\nexport interface ISankeyNodesSettings extends IFlowNodesSettings {\n}\n\nexport interface ISankeyNodesPrivate extends IFlowNodesPrivate {\n}\n\nexport interface ISankeyNodesEvents extends IFlowNodesEvents {\n}\n\n/**\n * Holds instances of nodes for a [[Sankey]] series.\n */\nexport class SankeyNodes extends FlowNodes {\n\tpublic static className: string = \"SankeyNodes\";\n\tpublic static classNames: Array<string> = FlowNodes.classNames.concat([SankeyNodes.className]);\n\n\tdeclare public _settings: ISankeyNodesSettings;\n\tdeclare public _privateSettings: ISankeyNodesPrivate;\n\tdeclare public _dataItemSettings: ISankeyNodesDataItem;\n\tdeclare public _events: ISankeyNodesEvents;\n\n\t/**\n\t * List of rectangle elements.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly rectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, { themeTags: [\"shape\"] }, [this.rectangles.template])\n\t);\n\n\t/**\n\t * Related [[Sankey]] series.\n\t */\n\tpublic flow: Sankey | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): FlowNode {\n\t\tconst flow = this.flow;\n\n\t\tconst node = super.makeNode(dataItem, \"sankey\");\n\n\t\tconst rectangle = node.children.insertIndex(0, this.rectangles.make());\n\t\tthis.rectangles.push(rectangle);\n\t\trectangle._setSoft(\"fill\", dataItem.get(\"fill\"));\n\t\tdataItem.set(\"rectangle\", rectangle);\n\n\t\tnode.events.on(\"dragged\", () => {\n\t\t\tconst d3SankeyNode = (node.dataItem as DataItem<ISankeyNodesDataItem>).get(\"d3SankeyNode\");\n\t\t\tif (d3SankeyNode) {\n\t\t\t\tif (flow) {\n\t\t\t\t\tif (flow.get(\"orientation\") == \"horizontal\") {\n\t\t\t\t\t\td3SankeyNode.x0 = node.x();\n\t\t\t\t\t\td3SankeyNode.y0 = node.y();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td3SankeyNode.x0 = node.y();\n\t\t\t\t\t\td3SankeyNode.y0 = node.x();\n\t\t\t\t\t}\n\n\t\t\t\t\tflow.updateSankey();\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tconst label = this.labels.make();\n\t\tthis.labels.push(label);\n\n\t\tif (flow) {\n\t\t\tlabel.addTag(flow.get(\"orientation\", \"\"));\n\t\t}\n\t\tnode.children.push(label);\n\t\tdataItem.set(\"label\", label);\n\n\t\tlabel._setDataItem(dataItem);\n\t\trectangle._setDataItem(dataItem);\n\n\t\treturn node;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tif (dataItem) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\t\t\t\tconst node = dataItem.get(\"node\");\n\t\t\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\t\t\t\t\tif (rectangle) {\n\t\t\t\t\t\tsprite.setAll({ x: node.x() + rectangle.width() * locationX, y: node.y() + rectangle.height() * locationY });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tlet rectangle = dataItem.get(\"rectangle\");\n\t\tif (rectangle) {\n\t\t\tthis.rectangles.removeValue(rectangle);\n\t\t\trectangle.dispose();\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { FlowNode } from \"./FlowNode\";\nimport type { Sankey, ISankeyDataItem } from \"./Sankey\";\nimport type { ISankeyNodesDataItem } from \"./SankeyNodes\";\nimport type { IOrientationPoint } from \"../../core/util/IPoint\";\n\nimport { FlowLink, IFlowLinkPrivate, IFlowLinkSettings } from \"./FlowLink\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport * as $math from \"../../core/util/Math\";\n\n\nexport interface ISankeyLinkSettings extends IFlowLinkSettings {\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource?: DataItem<ISankeyNodesDataItem>;\n\n\t/**\n\t * Source node data item.\n\t */\n\ttarget?: DataItem<ISankeyNodesDataItem>;\n\n\t/**\n\t * Type of fill to use for links.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/sankey-diagram/#Color_mode} for more info\n\t * @default \"gradient\"\n\t */\n\tfillStyle?: \"solid\" | \"gradient\" | \"source\" | \"target\";\n\n\t/**\n\t * A relative distance from node for link \"elbow\" (bend point).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/sankey-diagram/#Bend_point} for more info\n\t * @default 0.2\n\t */\n\tcontrolPointDistance?: number;\n\n}\n\nexport interface ISankeyLinkPrivate extends IFlowLinkPrivate {\n\n\t/**\n\t * Link orientation.\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n}\n\nexport class SankeyLink extends FlowLink {\n\tdeclare public _settings: ISankeyLinkSettings;\n\tdeclare public _privateSettings: ISankeyLinkPrivate;\n\n\tpublic static className: string = \"SankeyLink\";\n\tpublic static classNames: Array<string> = FlowLink.classNames.concat([SankeyLink.className]);\n\n\tdeclare protected _dataItem: DataItem<ISankeyDataItem> | undefined;\n\n\tdeclare public series: Sankey | undefined;\n\n\tprotected _svgPath: SVGPathElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n\tprotected _totalLength: number = 0;\n\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"source\")) {\n\t\t\tconst source = this.get(\"source\");\n\t\t\tif (source) {\n\t\t\t\tconst sourceNode = source.get(\"node\");\n\t\t\t\tthis._disposers.push(sourceNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis.markDirty();\n\t\t\t\t}))\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"target\")) {\n\t\t\tconst target = this.get(\"target\");\n\t\t\tif (target) {\n\t\t\t\tconst targetNode = target.get(\"node\");\n\t\t\t\tthis._disposers.push(targetNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis.markDirty();\n\t\t\t\t}))\n\t\t\t}\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"orientation\")) {\n\t\t\tconst series = this.series;\n\t\t\tconst dataItem = this.dataItem as DataItem<ISankeyDataItem>;\n\t\t\tif (dataItem && series) {\n\t\t\t\tseries._updateLinkColor(dataItem);\n\t\t\t}\n\t\t}\n\n\t\tconst target = this.get(\"target\");\n\t\tconst source = this.get(\"source\");\n\n\t\tlet sourceNode: FlowNode | undefined;\n\t\tlet targetNode: FlowNode | undefined;\n\n\t\tif (source && target) {\n\t\t\tthis._clear = true;\n\t\t\tsourceNode = source.get(\"node\");\n\t\t\ttargetNode = target.get(\"node\");\n\n\t\t\tlet x0 = 0;\n\t\t\tlet x1 = 0;\n\t\t\tlet y0 = 0;\n\t\t\tlet y1 = 0;\n\n\t\t\tlet xt0 = 0;\n\t\t\tlet yt0 = 0;\n\n\t\t\tlet xt1 = 0;\n\t\t\tlet yt1 = 0;\n\n\t\t\tlet xb0 = 0;\n\t\t\tlet xb1 = 0;\n\n\t\t\tlet yb0 = 0;\n\t\t\tlet yb1 = 0;\n\n\t\t\tlet xm0 = 0;\n\t\t\tlet xm1 = 0;\n\n\t\t\tlet ym0 = 0;\n\t\t\tlet ym1 = 0;\n\n\t\t\tlet angle0 = 0;\n\t\t\tlet angle1 = 0;\n\n\n\t\t\tconst dataItem = this.dataItem as DataItem<ISankeyDataItem>;\n\t\t\tif (dataItem) {\n\t\t\t\tconst d3SankeyLink = dataItem.get(\"d3SankeyLink\");\n\t\t\t\tif (d3SankeyLink) {\n\n\t\t\t\t\tlet w = d3SankeyLink.width || 0;\n\n\t\t\t\t\tlet orientation = this.getPrivate(\"orientation\");\n\n\t\t\t\t\tif (orientation == \"vertical\") {\n\t\t\t\t\t\tif (sourceNode) {\n\t\t\t\t\t\t\ty0 = sourceNode.y();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (targetNode) {\n\t\t\t\t\t\t\ty1 = targetNode.y();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tangle0 = 90;\n\t\t\t\t\t\tangle1 = 90;\n\n\t\t\t\t\t\tx0 = d3SankeyLink.y0 || 0;\n\t\t\t\t\t\tx1 = d3SankeyLink.y1 || 0;\n\n\t\t\t\t\t\tif (y1 < y0) {\n\t\t\t\t\t\t\t[x0, x1] = [x1, x0];\n\t\t\t\t\t\t\t[y0, y1] = [y1, y0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (source.get(\"unknown\")) {\n\t\t\t\t\t\t\tx0 = x1;\n\t\t\t\t\t\t\ty0 = y0 + (y1 - y0) / 2;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (target.get(\"unknown\")) {\n\t\t\t\t\t\t\tx1 = x0;\n\t\t\t\t\t\t\ty1 = y0 + (y1 - y0) / 2;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\txt0 = x0 - w / 2;\n\t\t\t\t\t\tyt0 = y0;\n\n\t\t\t\t\t\txt1 = x1 - w / 2;\n\t\t\t\t\t\tyt1 = y1;\n\n\t\t\t\t\t\txb0 = x0 + w / 2;\n\t\t\t\t\t\txb1 = x1 + w / 2;\n\n\t\t\t\t\t\tyb0 = y0;\n\t\t\t\t\t\tyb1 = y1;\n\n\t\t\t\t\t\txm0 = x0;\n\t\t\t\t\t\txm1 = x1;\n\n\t\t\t\t\t\tym0 = y0;\n\t\t\t\t\t\tym1 = y1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (sourceNode) {\n\t\t\t\t\t\t\tx0 = sourceNode.x();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (targetNode) {\n\t\t\t\t\t\t\tx1 = targetNode.x();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ty0 = d3SankeyLink.y0 || 0;\n\t\t\t\t\t\ty1 = d3SankeyLink.y1 || 0;\n\n\t\t\t\t\t\tif (x1 < x0) {\n\t\t\t\t\t\t\t[x0, x1] = [x1, x0];\n\t\t\t\t\t\t\t[y0, y1] = [y1, y0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (source.get(\"unknown\")) {\n\t\t\t\t\t\t\ty0 = y1;\n\t\t\t\t\t\t\tx0 = x0 + (x1 - x0) / 2;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (target.get(\"unknown\")) {\n\t\t\t\t\t\t\ty1 = y0;\n\t\t\t\t\t\t\tx1 = x0 + (x1 - x0) / 2;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\txt0 = x0;\n\t\t\t\t\t\tyt0 = y0 - w / 2;\n\n\t\t\t\t\t\txt1 = x1;\n\t\t\t\t\t\tyt1 = y1 - w / 2;\n\n\t\t\t\t\t\txb0 = x0;\n\t\t\t\t\t\txb1 = x1;\n\n\t\t\t\t\t\tyb0 = y0 + w / 2;\n\t\t\t\t\t\tyb1 = y1 + w / 2;\n\n\t\t\t\t\t\txm0 = x0;\n\t\t\t\t\t\txm1 = x1;\n\n\t\t\t\t\t\tym0 = y0;\n\t\t\t\t\t\tym1 = y1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($math.round(xt0, 3) == $math.round(xt1, 3)) {\n\t\t\t\t\t\txt1 += 0.01;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($math.round(yt0, 3) == $math.round(yt1, 3)) {\n\t\t\t\t\t\tyt1 += 0.01;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($math.round(xb0, 3) == $math.round(xb1, 3)) {\n\t\t\t\t\t\txb1 += 0.01;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($math.round(yb0, 3) == $math.round(yb1, 3)) {\n\t\t\t\t\t\tyb1 += 0.01;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet cpd = this.get(\"controlPointDistance\", 0.2);\n\t\t\t\t\tcpd = Math.min(0.4999, cpd);\n\n\t\t\t\t\tlet kxt0 = xt0 + (xt1 - xt0) * cpd * $math.cos(angle0);\n\t\t\t\t\tlet kyt0 = yt0 + (yt1 - yt0) * cpd * $math.sin(angle0);\n\n\t\t\t\t\tlet kxt1 = xt1 - (xt1 - xt0) * cpd * $math.cos(angle1);\n\t\t\t\t\tlet kyt1 = yt1 - (yt1 - yt0) * cpd * $math.sin(angle1);\n\n\t\t\t\t\tlet kxm0 = xm0 + (xm1 - xm0) * cpd * $math.cos(angle0);\n\t\t\t\t\tlet kym0 = ym0 + (ym1 - ym0) * cpd * $math.sin(angle0);\n\n\t\t\t\t\tlet kxm1 = xm1 - (xm1 - xm0) * cpd * $math.cos(angle1);\n\t\t\t\t\tlet kym1 = ym1 - (ym1 - ym0) * cpd * $math.sin(angle1);\n\n\t\t\t\t\tlet angle = $math.getAngle({ x: kxt0, y: kyt0 }, { x: kxt1, y: kyt1 });\n\n\t\t\t\t\tlet dx = (w / $math.cos(angle) - w) / $math.tan(angle) * $math.cos(angle0);\n\t\t\t\t\tlet dy = (w / $math.sin(angle) - w) * $math.tan(angle) * $math.sin(angle0);\n\n\t\t\t\t\tlet kxb0 = -dx / 2 + xb0 + (xb1 - xb0) * cpd * $math.cos(angle0);\n\t\t\t\t\tlet kyb0 = -dy / 2 + yb0 + (yb1 - yb0) * cpd * $math.sin(angle0);\n\n\t\t\t\t\tlet kxb1 = -dx / 2 + xb1 - (xb1 - xb0) * cpd * $math.cos(angle1);\n\t\t\t\t\tlet kyb1 = -dy / 2 + yb1 - (yb1 - yb0) * cpd * $math.sin(angle1);\n\n\t\t\t\t\tkxt0 += dx / 2;\n\t\t\t\t\tkyt0 += dy / 2;\n\n\t\t\t\t\tkxt1 += dx / 2;\n\t\t\t\t\tkyt1 += dy / 2;\n\n\t\t\t\t\tif (orientation == \"vertical\") {\n\t\t\t\t\t\tkyt0 = Math.min(yt1, Math.max(yt0 + 1, kyt0));\n\t\t\t\t\t\tkyb0 = Math.min(yb1, Math.max(yb0 + 1, kyb0));\n\n\t\t\t\t\t\tkyt1 = Math.max(yt0, Math.min(yt1 - 1, kyt1));\n\t\t\t\t\t\tkyb1 = Math.max(yb0, Math.min(yb1 - 1, kyb1));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tkxt0 = Math.min(xt1, Math.max(xt0 + 1, kxt0));\n\t\t\t\t\t\tkxb0 = Math.min(xb1, Math.max(xb0 + 1, kxb0));\n\n\t\t\t\t\t\tkxt1 = Math.max(xt0, Math.min(xt1 - 1, kxt1));\n\t\t\t\t\t\tkxb1 = Math.max(xb0, Math.min(xb1 - 1, kxb1));\n\t\t\t\t\t}\n\n\t\t\t\t\tlet segment = [[xt0, yt0, xb0, yb0], [kxt0, kyt0, kxb0, kyb0], [kxt1, kyt1, kxb1, kyb1], [xt1, yt1, xb1, yb1]];\n\n\t\t\t\t\tthis.set(\"draw\", (display) => {\n\t\t\t\t\t\tconst series = this.series!;\n\t\t\t\t\t\tseries._fillGenerator.context(display as any);\n\t\t\t\t\t\tseries._fillGenerator(segment as [number, number][]);\n\t\t\t\t\t})\n\n\t\t\t\t\tlet middleSegment = [[xm0, ym0], [kxm0, kym0], [kxm1, kym1], [xm1, ym1]];\n\n\t\t\t\t\tconst path = this.series!._strokeGenerator(middleSegment as [number, number][]);\n\n\t\t\t\t\tif (path) {\n\t\t\t\t\t\tthis._svgPath.setAttribute(\"d\", path);\n\t\t\t\t\t\tthis._totalLength = this._svgPath.getTotalLength();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this.series && this.dataItem) {\n\t\t\tthis.series._positionBullets(this.dataItem as any);\n\t\t}\n\t}\n\n\tpublic getPoint(location: number): IOrientationPoint {\n\t\tif (this._svgPath) {\n\t\t\tif (this._svgPath.getAttribute(\"d\")) {\n\t\t\t\tlet p0 = this._svgPath.getPointAtLength(location * this._totalLength - 0.1);\n\t\t\t\tlet p1 = this._svgPath.getPointAtLength(location * this._totalLength + 0.1);\n\t\t\t\tlet p = this.toGlobal(this._svgPath.getPointAtLength(location * this._totalLength));\n\t\t\t\treturn { x: p.x, y: p.y, angle: $math.getAngle(p0, p1) };\n\t\t\t}\n\t\t}\n\t\treturn { x: 0, y: 0, angle: 0 }\n\t}\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\treturn this.toLocal(super._getTooltipPoint());\n\t}\n}\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","import {min} from \"d3-array\";\n\nfunction targetDepth(d) {\n  return d.target.depth;\n}\n\nexport function left(node) {\n  return node.depth;\n}\n\nexport function right(node, n) {\n  return n - 1 - node.height;\n}\n\nexport function justify(node, n) {\n  return node.sourceLinks.length ? node.depth : n - 1;\n}\n\nexport function center(node) {\n  return node.targetLinks.length ? node.depth\n      : node.sourceLinks.length ? min(node.sourceLinks, targetDepth) - 1\n      : 0;\n}\n","export default function constant(x) {\n  return function() {\n    return x;\n  };\n}\n","import {max, min, sum} from \"d3-array\";\nimport {justify} from \"./align.js\";\nimport constant from \"./constant.js\";\n\nfunction ascendingSourceBreadth(a, b) {\n  return ascendingBreadth(a.source, b.source) || a.index - b.index;\n}\n\nfunction ascendingTargetBreadth(a, b) {\n  return ascendingBreadth(a.target, b.target) || a.index - b.index;\n}\n\nfunction ascendingBreadth(a, b) {\n  return a.y0 - b.y0;\n}\n\nfunction value(d) {\n  return d.value;\n}\n\nfunction defaultId(d) {\n  return d.index;\n}\n\nfunction defaultNodes(graph) {\n  return graph.nodes;\n}\n\nfunction defaultLinks(graph) {\n  return graph.links;\n}\n\nfunction find(nodeById, id) {\n  const node = nodeById.get(id);\n  if (!node) throw new Error(\"missing: \" + id);\n  return node;\n}\n\nfunction computeLinkBreadths({nodes}) {\n  for (const node of nodes) {\n    let y0 = node.y0;\n    let y1 = y0;\n    for (const link of node.sourceLinks) {\n      link.y0 = y0 + link.width / 2;\n      y0 += link.width;\n    }\n    for (const link of node.targetLinks) {\n      link.y1 = y1 + link.width / 2;\n      y1 += link.width;\n    }\n  }\n}\n\nexport default function Sankey() {\n  let x0 = 0, y0 = 0, x1 = 1, y1 = 1; // extent\n  let dx = 24; // nodeWidth\n  let dy = 8, py; // nodePadding\n  let id = defaultId;\n  let align = justify;\n  let sort;\n  let linkSort;\n  let nodes = defaultNodes;\n  let links = defaultLinks;\n  let iterations = 6;\n\n  function sankey() {\n    const graph = {nodes: nodes.apply(null, arguments), links: links.apply(null, arguments)};\n    computeNodeLinks(graph);\n    computeNodeValues(graph);\n    computeNodeDepths(graph);\n    computeNodeHeights(graph);\n    computeNodeBreadths(graph);\n    computeLinkBreadths(graph);\n    return graph;\n  }\n\n  sankey.update = function(graph) {\n    computeLinkBreadths(graph);\n    return graph;\n  };\n\n  sankey.nodeId = function(_) {\n    return arguments.length ? (id = typeof _ === \"function\" ? _ : constant(_), sankey) : id;\n  };\n\n  sankey.nodeAlign = function(_) {\n    return arguments.length ? (align = typeof _ === \"function\" ? _ : constant(_), sankey) : align;\n  };\n\n  sankey.nodeSort = function(_) {\n    return arguments.length ? (sort = _, sankey) : sort;\n  };\n\n  sankey.nodeWidth = function(_) {\n    return arguments.length ? (dx = +_, sankey) : dx;\n  };\n\n  sankey.nodePadding = function(_) {\n    return arguments.length ? (dy = py = +_, sankey) : dy;\n  };\n\n  sankey.nodes = function(_) {\n    return arguments.length ? (nodes = typeof _ === \"function\" ? _ : constant(_), sankey) : nodes;\n  };\n\n  sankey.links = function(_) {\n    return arguments.length ? (links = typeof _ === \"function\" ? _ : constant(_), sankey) : links;\n  };\n\n  sankey.linkSort = function(_) {\n    return arguments.length ? (linkSort = _, sankey) : linkSort;\n  };\n\n  sankey.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], sankey) : [x1 - x0, y1 - y0];\n  };\n\n  sankey.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], sankey) : [[x0, y0], [x1, y1]];\n  };\n\n  sankey.iterations = function(_) {\n    return arguments.length ? (iterations = +_, sankey) : iterations;\n  };\n\n  function computeNodeLinks({nodes, links}) {\n    for (const [i, node] of nodes.entries()) {\n      node.index = i;\n      node.sourceLinks = [];\n      node.targetLinks = [];\n    }\n    const nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d]));\n    for (const [i, link] of links.entries()) {\n      link.index = i;\n      let {source, target} = link;\n      if (typeof source !== \"object\") source = link.source = find(nodeById, source);\n      if (typeof target !== \"object\") target = link.target = find(nodeById, target);\n      source.sourceLinks.push(link);\n      target.targetLinks.push(link);\n    }\n    if (linkSort != null) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(linkSort);\n        targetLinks.sort(linkSort);\n      }\n    }\n  }\n\n  function computeNodeValues({nodes}) {\n    for (const node of nodes) {\n      node.value = node.fixedValue === undefined\n          ? Math.max(sum(node.sourceLinks, value), sum(node.targetLinks, value))\n          : node.fixedValue;\n    }\n  }\n\n  function computeNodeDepths({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.depth = x;\n        for (const {target} of node.sourceLinks) {\n          next.add(target);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeHeights({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.height = x;\n        for (const {source} of node.targetLinks) {\n          next.add(source);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeLayers({nodes}) {\n    const x = max(nodes, d => d.depth) + 1;\n    const kx = (x1 - x0 - dx) / (x - 1);\n    const columns = new Array(x);\n    for (const node of nodes) {\n      const i = Math.max(0, Math.min(x - 1, Math.floor(align.call(null, node, x))));\n      node.layer = i;\n      node.x0 = x0 + i * kx;\n      node.x1 = node.x0 + dx;\n      if (columns[i]) columns[i].push(node);\n      else columns[i] = [node];\n    }\n    if (sort) for (const column of columns) {\n      column.sort(sort);\n    }\n    return columns;\n  }\n\n  function initializeNodeBreadths(columns) {\n    const ky = min(columns, c => (y1 - y0 - (c.length - 1) * py) / sum(c, value));\n    for (const nodes of columns) {\n      let y = y0;\n      for (const node of nodes) {\n        node.y0 = y;\n        node.y1 = y + node.value * ky;\n        y = node.y1 + py;\n        for (const link of node.sourceLinks) {\n          link.width = link.value * ky;\n        }\n      }\n      y = (y1 - y + py) / (nodes.length + 1);\n      for (let i = 0; i < nodes.length; ++i) {\n        const node = nodes[i];\n        node.y0 += y * (i + 1);\n        node.y1 += y * (i + 1);\n      }\n      reorderLinks(nodes);\n    }\n  }\n\n  function computeNodeBreadths(graph) {\n    const columns = computeNodeLayers(graph);\n    py = Math.min(dy, (y1 - y0) / (max(columns, c => c.length) - 1));\n    initializeNodeBreadths(columns);\n    for (let i = 0; i < iterations; ++i) {\n      const alpha = Math.pow(0.99, i);\n      const beta = Math.max(1 - alpha, (i + 1) / iterations);\n      relaxRightToLeft(columns, alpha, beta);\n      relaxLeftToRight(columns, alpha, beta);\n    }\n  }\n\n  // Reposition each node based on its incoming (target) links.\n  function relaxLeftToRight(columns, alpha, beta) {\n    for (let i = 1, n = columns.length; i < n; ++i) {\n      const column = columns[i];\n      for (const target of column) {\n        let y = 0;\n        let w = 0;\n        for (const {source, value} of target.targetLinks) {\n          let v = value * (target.layer - source.layer);\n          y += targetTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - target.y0) * alpha;\n        target.y0 += dy;\n        target.y1 += dy;\n        reorderNodeLinks(target);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  // Reposition each node based on its outgoing (source) links.\n  function relaxRightToLeft(columns, alpha, beta) {\n    for (let n = columns.length, i = n - 2; i >= 0; --i) {\n      const column = columns[i];\n      for (const source of column) {\n        let y = 0;\n        let w = 0;\n        for (const {target, value} of source.sourceLinks) {\n          let v = value * (target.layer - source.layer);\n          y += sourceTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - source.y0) * alpha;\n        source.y0 += dy;\n        source.y1 += dy;\n        reorderNodeLinks(source);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  function resolveCollisions(nodes, alpha) {\n    const i = nodes.length >> 1;\n    const subject = nodes[i];\n    resolveCollisionsBottomToTop(nodes, subject.y0 - py, i - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, subject.y1 + py, i + 1, alpha);\n    resolveCollisionsBottomToTop(nodes, y1, nodes.length - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, y0, 0, alpha);\n  }\n\n  // Push any overlapping nodes down.\n  function resolveCollisionsTopToBottom(nodes, y, i, alpha) {\n    for (; i < nodes.length; ++i) {\n      const node = nodes[i];\n      const dy = (y - node.y0) * alpha;\n      if (dy > 1e-6) node.y0 += dy, node.y1 += dy;\n      y = node.y1 + py;\n    }\n  }\n\n  // Push any overlapping nodes up.\n  function resolveCollisionsBottomToTop(nodes, y, i, alpha) {\n    for (; i >= 0; --i) {\n      const node = nodes[i];\n      const dy = (node.y1 - y) * alpha;\n      if (dy > 1e-6) node.y0 -= dy, node.y1 -= dy;\n      y = node.y0 - py;\n    }\n  }\n\n  function reorderNodeLinks({sourceLinks, targetLinks}) {\n    if (linkSort === undefined) {\n      for (const {source: {sourceLinks}} of targetLinks) {\n        sourceLinks.sort(ascendingTargetBreadth);\n      }\n      for (const {target: {targetLinks}} of sourceLinks) {\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  function reorderLinks(nodes) {\n    if (linkSort === undefined) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(ascendingTargetBreadth);\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  // Returns the target.y0 that would produce an ideal link from source to target.\n  function targetTop(source, target) {\n    let y = source.y0 - (source.sourceLinks.length - 1) * py / 2;\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y += width + py;\n    }\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  // Returns the source.y0 that would produce an ideal link from source to target.\n  function sourceTop(source, target) {\n    let y = target.y0 - (target.targetLinks.length - 1) * py / 2;\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y += width + py;\n    }\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  return sankey;\n}\n","import type { DataItem } from \"../../core/render/Component\";\n\nimport { Flow, IFlowSettings, IFlowDataItem, IFlowPrivate, IFlowEvents } from \"./Flow\";\nimport { SankeyNodes, ISankeyNodesDataItem } from \"./SankeyNodes\";\nimport { SankeyLink } from \"./SankeyLink\";\nimport { area, line } from \"d3-shape\";\nimport { curveMonotoneXTension } from \"../../core/render/MonotoneXTension\";\nimport { curveMonotoneYTension } from \"../../core/render/MonotoneYTension\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3sankey from \"d3-sankey\";\n\nimport type { Bullet } from \"../../core/render/Bullet\";\n\nexport interface ISankeyDataItem extends IFlowDataItem {\n\n\t/**\n\t * Link element.\n\t */\n\tlink: SankeyLink;\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource: DataItem<ISankeyNodesDataItem>;\n\n\t/**\n\t * Target node data item.\n\t */\n\ttarget: DataItem<ISankeyNodesDataItem>;\n\n}\n\nexport interface ISankeySettings extends IFlowSettings {\n\n\t/**\n\t * Orientation of the series.\n\t *\n\t * @default \"horizontal\"\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n\t/**\n\t * Alignment of nodes.\n\t *\n\t * @default \"left\"\n\t */\n\tnodeAlign?: \"left\" | \"right\" | \"justify\" | \"center\"\n\n\t/**\n\t * Tension setting of the link curve.\n\t *\n\t * Accepts values from `0` to `1`.\n\t *\n\t * `1` will result in perfectly straight lines.\n\t *\n\t * @default 0.5\n\t */\n\tlinkTension?: number;\n\n\t/**\n\t * A custom function to use when sorting nodes.\n\t *\n\t * @todo test\n\t * @ignore\n\t */\n\tnodeSort?: (a: d3sankey.SankeyNodeMinimal<{}, {}>, b: d3sankey.SankeyNodeMinimal<{}, {}>) => number | null;\n\n}\n\nexport interface ISankeyPrivate extends IFlowPrivate {\n}\n\nexport interface ISankeyEvents extends IFlowEvents {\n}\n\n/**\n * Sankey series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\n * @important\n */\nexport class Sankey extends Flow {\n\n\tpublic static className: string = \"Sankey\";\n\tpublic static classNames: Array<string> = Flow.classNames.concat([Sankey.className]);\n\n\t/**\n\t * List of link elements.\n\t *\n\t * @default new ListTemplate<SankeyLink>\n\t */\n\tpublic readonly links: ListTemplate<SankeyLink> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => SankeyLink._new(this._root, { themeTags: [\"link\", \"shape\"] }, [this.links.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"sankey\", this._settings.orientation || \"horizontal\"]);\n\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * A series representing sankey nodes.\n\t *\n\t * @default SankeyNodes.new()\n\t */\n\tpublic readonly nodes: SankeyNodes = this.children.push(SankeyNodes.new(this._root, {}));\n\n\tdeclare public _settings: ISankeySettings;\n\tdeclare public _privateSettings: ISankeyPrivate;\n\tdeclare public _dataItemSettings: ISankeyDataItem;\n\tdeclare public _events: ISankeyEvents;\n\n\tpublic _d3Sankey = d3sankey.sankey();\n\tpublic _d3Graph: d3sankey.SankeyGraph<{}, {}> | undefined;\n\n\tpublic _fillGenerator = area();\n\tpublic _strokeGenerator = line();\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): SankeyLink {\n\t\tconst source = dataItem.get(\"source\");\n\t\tconst target = dataItem.get(\"target\");\n\n\t\tconst link = this.links.make();\n\n\t\tif (source.get(\"unknown\")) {\n\t\t\tlink.addTag(\"source\");\n\t\t\tlink.addTag(\"unknown\");\n\t\t}\n\n\t\tif (target.get(\"unknown\")) {\n\t\t\tlink.addTag(\"target\");\n\t\t\tlink.addTag(\"unknown\");\n\t\t}\n\n\t\tthis.linksContainer.children.push(link);\n\t\tlink._setDataItem(dataItem);\n\t\tlink.set(\"source\", source);\n\t\tlink.set(\"target\", target);\n\t\tlink.series = this;\n\n\t\tthis.links.push(link);\n\n\t\treturn link;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateSankey() {\n\t\tconst d3Graph = this._d3Graph;\n\t\tif (d3Graph) {\n\t\t\tthis._d3Sankey.update(d3Graph);\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst link = dataItem.get(\"link\");\n\t\t\t\tlink.setPrivate(\"orientation\", this.get(\"orientation\"));\n\t\t\t\tlink.markDirty();\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _updateLinkColor(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateLinkColor(dataItem);\n\t\tconst orientation = this.get(\"orientation\");\n\t\tconst fillGradient = dataItem.get(\"link\")._fillGradient;\n\t\tconst strokeGradient = dataItem.get(\"link\")._strokeGradient;\n\n\t\tif (orientation == \"vertical\") {\n\t\t\tif (fillGradient) {\n\t\t\t\tfillGradient.set(\"rotation\", 90);\n\t\t\t}\n\t\t\tif (strokeGradient) {\n\t\t\t\tstrokeGradient.set(\"rotation\", 90);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (fillGradient) {\n\t\t\t\tfillGradient.set(\"rotation\", 0);\n\t\t\t}\n\t\t\tif (strokeGradient) {\n\t\t\t\tstrokeGradient.set(\"rotation\", 0);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getBulletLocation(bullet: Bullet): number {\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\treturn bullet.get(\"locationY\", 0);\n\t\t}\n\t\telse {\n\t\t\treturn bullet.get(\"locationX\", 0);\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\t\tlet vertical = false;\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\tvertical = true;\n\t\t}\n\n\t\tif (this.isDirty(\"orientation\") || this.isDirty(\"linkTension\")) {\n\t\t\tconst linkTension = this.get(\"linkTension\", 0.5);\n\t\t\tif (vertical) {\n\t\t\t\tthis._fillGenerator.curve(curveMonotoneYTension(linkTension));\n\t\t\t\tthis._strokeGenerator.curve(curveMonotoneYTension(linkTension));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._fillGenerator.curve(curveMonotoneXTension(linkTension));\n\t\t\t\tthis._strokeGenerator.curve(curveMonotoneXTension(linkTension));\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty || this._sizeDirty || this.isDirty(\"nodePadding\") || this.isDirty(\"nodeWidth\") || this.isDirty(\"nodeAlign\") || this.isDirty(\"nodeSort\") || this.isDirty(\"orientation\") || this.isDirty(\"linkTension\")) {\n\t\t\tif (this._nodesData.length > 0) {\n\t\t\t\tconst d3Sankey = this._d3Sankey;\n\t\t\t\tlet w = this.innerWidth();\n\t\t\t\tlet h = this.innerHeight();\n\n\t\t\t\tif (vertical) {\n\t\t\t\t\t[w, h] = [h, w];\n\t\t\t\t}\n\n\t\t\t\td3Sankey.size([w, h]);\n\t\t\t\td3Sankey.nodePadding(this.get(\"nodePadding\", 10));\n\t\t\t\td3Sankey.nodeWidth(this.get(\"nodeWidth\", 10));\n\t\t\t\td3Sankey.nodeSort(this.get(\"nodeSort\", null) as any);\n\n\t\t\t\tswitch (this.get(\"nodeAlign\")) {\n\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\td3Sankey.nodeAlign(d3sankey.sankeyRight);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"justify\":\n\t\t\t\t\t\td3Sankey.nodeAlign(d3sankey.sankeyJustify);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\td3Sankey.nodeAlign(d3sankey.sankeyCenter);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\td3Sankey.nodeAlign(d3sankey.sankeyLeft);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthis._d3Graph = d3Sankey({ nodes: this._nodesData, links: this._linksData });\n\n\t\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t\tconst link = dataItem.get(\"link\");\n\t\t\t\t\tlink.setPrivate(\"orientation\", this.get(\"orientation\"));\n\t\t\t\t\tlink.markDirty();\n\t\t\t\t})\n\n\t\t\t\tconst d3Graph = this._d3Graph;\n\n\t\t\t\tif (d3Graph) {\n\t\t\t\t\tconst nodes = d3Graph.nodes;\n\n\t\t\t\t\t$array.each(nodes, (d3SankeyNode) => {\n\t\t\t\t\t\tconst dataItem = (d3SankeyNode as any).dataItem as DataItem<ISankeyNodesDataItem>;\n\t\t\t\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\t\t\t\tlet x0: number | undefined;\n\t\t\t\t\t\tlet x1: number | undefined;\n\t\t\t\t\t\tlet y0: number | undefined;\n\t\t\t\t\t\tlet y1: number | undefined;\n\n\t\t\t\t\t\tif (vertical) {\n\t\t\t\t\t\t\tx0 = d3SankeyNode.y0;\n\t\t\t\t\t\t\tx1 = d3SankeyNode.y1;\n\t\t\t\t\t\t\ty0 = d3SankeyNode.x0;\n\t\t\t\t\t\t\ty1 = d3SankeyNode.x1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tx0 = d3SankeyNode.x0;\n\t\t\t\t\t\t\tx1 = d3SankeyNode.x1;\n\t\t\t\t\t\t\ty0 = d3SankeyNode.y0;\n\t\t\t\t\t\t\ty1 = d3SankeyNode.y1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(x0) && $type.isNumber(x1) && $type.isNumber(y0) && $type.isNumber(y1)) {\n\t\t\t\t\t\t\tnode.setAll({ x: x0, y: y0, width: x1 - x0, height: y1 - y0 });\n\n\t\t\t\t\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\t\t\t\t\t\trectangle.setAll({ width: x1 - x0, height: y1 - y0 });\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/flow.js\";\nexport const am5flow = m;"],"names":["FlowDefaultTheme","Theme","setupDefaultRules","super","ic","this","_root","interfaceColors","r","rule","bind","setAll","width","height","paddingLeft","paddingRight","paddingTop","paddingBottom","colors","ColorSet","legendLabelText","legendValueText","draggable","opacity","text","populateText","fillStyle","strokeStyle","events","on","e","dataItem","target","outgoing","get","linkDataItem","link","hover","hideTooltip","incoming","rectangle","showTooltip","unhover","orientation","nodeAlign","linkTension","nodePadding","nodeWidth","cornerRadiusTL","cornerRadiusBL","cornerRadiusTR","cornerRadiusBR","controlPointDistance","fillOpacity","strokeOpacity","interactive","tooltipText","states","create","y","centerY","x","centerX","radius","padAngle","startAngle","sort","linkHeadRadius","sourceRadius","targetRadius","cornerRadius","textType","headRadius","linkType","strokeWidth","Flow","Series","children","push","Container","_afterNew","_defaultThemes","fields","nodes","flow","bulletsContainer","processDataItem","unknown","sourceId","sourceDataItem","getDataItemById","_index","data","id","set","targetId","targetDataItem","addOutgoingLink","addincomingLink","makeLink","sourceIndex","dataItems","indexOf","targetIndex","_linksByIndex","_updateLinkColor","_onDataClear","_userDataSet","_prepareChildren","valueLow","Infinity","valueHigh","valueSum","_valuesDirty","_nodesData","d3SankeyNode","sumIncoming","sumIncomingWorking","value","workingValue","sumOutgoing","sumOutgoingWorking","updateLegendValue","_linksData","valueWorking","minSize","d3SankeyLink","source","setRaw","setPrivateRaw","sourceFill","targetFill","remove","_applyTemplates","gradient","_fillGradient","LinearGradient","sourceStop","color","targetStop","undefined","_strokeGradient","disposeDataItem","links","removeValue","dispose","hideDataItem","duration","promises","hiddenState","stateAnimationDuration","stateAnimationEasing","easing","animate","key","to","waitForStop","hide","Promise","all","showDataItem","show","_positionBullet","bullet","sprite","point","getPoint","_getBulletLocation","angle","className","abs","Math","cos","sin","pi","PI","halfPi","tau","max","epsilon","range","i","j","Array","from","length","_","k","compareValue","compare","a","b","directed","transpose","sortGroups","sortSubgroups","sortChords","chord","matrix","dx","n","groupSums","groupIndex","chords","groups","Float64Array","x0","subgroupIndex","filter","index","endAngle","Object","values","arguments","slice","prototype","defaultSource","d","defaultTarget","defaultRadius","defaultStartAngle","defaultEndAngle","defaultPadAngle","defaultArrowheadRadius","ribbon","context","buffer","s","apply","t","ap","argv","call","sr","sa0","sa1","tr","ta0","ta1","path","moveTo","arc","hr","tr2","ta2","quadraticCurveTo","lineTo","closePath","ribbonArrow","ascending","NaN","descending","type","map","constructor","scale","translate","applyX","applyY","invert","location","invertX","invertY","rescaleX","copy","domain","rescaleY","toString","FlowNode","FlowNodes","List","Template","Label","labels","template","_new","themeTags","reset","name","next","makeNode","themeTag","node","make","addTag","_setDataItem","series","label","ChordNodes","RadialLabel","Slice","rectangles","insertIndex","_setSoft","toLocal","_dAngle","locationX","locationY","innerRadius","bulletRadius","classNames","concat","FlowLink","Graphics","_changed","isDirty","_getTooltipPoint","tooltipY","position","Percent","ChordLink","_p0","_p1","_type","p","p0","p1","min","Chord","_settings","linksContainer","_fixRibbon","_makeMatrix","group","outgoingLink","getPrivate","_ribbon","chordChanged","_sizeDirty","_d3chord","_chordLayout","innerWidth","innerHeight","chordStartAngle","chordGroup","labelAngle","setPrivate","linkRadius","_getLinkPoints","_updateLink","chordLayoutItem","startAngle0","angle0","startAngle1","angle1","display","ChordLinkDirected","ChordDirected","_markDirtyKey","ChordNonRibbon","_linkRadius","_chordLayoutItem","sourceSlice","targetSlice","SankeyNodes","RoundedRectangle","y0","updateSankey","SankeyLink","document","createElementNS","_beforeChanged","sourceNode","_disposers","markDirty","targetNode","isPrivateDirty","_clear","x1","y1","xt0","yt0","xt1","yt1","xb0","xb1","yb0","yb1","xm0","xm1","ym0","ym1","w","cpd","kxt0","kyt0","kxt1","kyt1","kxm0","kym0","kxm1","kym1","dy","kxb0","kyb0","kxb1","kyb1","segment","_fillGenerator","middleSegment","_strokeGenerator","_svgPath","setAttribute","_totalLength","getTotalLength","_positionBullets","getAttribute","getPointAtLength","toGlobal","sum","valueof","targetDepth","depth","left","right","justify","sourceLinks","center","targetLinks","ascendingSourceBreadth","ascendingBreadth","ascendingTargetBreadth","defaultId","defaultNodes","graph","defaultLinks","find","nodeById","Error","computeLinkBreadths","py","linkSort","align","iterations","sankey","computeNodeLinks","computeNodeValues","computeNodeDepths","computeNodeHeights","computeNodeBreadths","entries","Map","fixedValue","current","Set","size","add","columns","kx","floor","layer","column","computeNodeLayers","c","ky","reorderLinks","initializeNodeBreadths","alpha","pow","beta","relaxRightToLeft","relaxLeftToRight","v","targetTop","reorderNodeLinks","resolveCollisions","sourceTop","subject","resolveCollisionsBottomToTop","resolveCollisionsTopToBottom","update","nodeId","nodeSort","extent","Sankey","line","d3Graph","_d3Graph","_d3Sankey","fillGradient","strokeGradient","vertical","curve","d3Sankey","h","am5flow"],"sourceRoot":""}