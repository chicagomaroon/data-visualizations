{"version":3,"file":"hierarchy.js","mappings":"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","sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/HierarchyDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/BreadcrumbBar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/HierarchyNode.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/find.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/iterator.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Hierarchy.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/LinkedHierarchyNode.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/HierarchyLink.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/LinkedHierarchy.ts","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/lcg.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/simulation.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/add.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/quad.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/x.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/y.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/quadtree.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/constant.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/jiggle.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/collide.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/link.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/cover.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/data.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/extent.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/find.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/remove.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/root.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/size.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/visit.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/visitAfter.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/ForceDirected.ts","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/x.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/y.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/manyBody.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/accessors.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/constant.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/lcg.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/pack/enclose.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/pack/siblings.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/array.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/pack/index.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Pack.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/round.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/dice.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/partition.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Partition.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Sunburst.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/tree.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Tree.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/slice.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/index.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/binary.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/sliceDice.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Treemap.ts","webpack://@amcharts/amcharts5/./tmp/webpack/hierarchy.js"],"sourcesContent":["import { Theme } from \"../../core/Theme\";\r\nimport { percent, p100, p50 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $ease from \"../../core/util/Ease\";\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class HierarchyDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst gridLayout = this._root.gridLayout;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/hierarchy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"Hierarchy\").setAll({\r\n\t\t\tlegendLabelText: \"{category}\",\r\n\t\t\tlegendValueText: \"{sum.formatNumber('#.#')}\",\r\n\t\t\twidth: p100,\r\n\t\t\theight: p100,\r\n\t\t\tcolors: ColorSet.new(this._root, { step: 2 }),\r\n\t\t\tdownDepth: 1,\r\n\t\t\tinitialDepth: 5,\r\n\t\t\tsingleBranchOnly: true,\r\n\t\t\tmaskContent: true,\r\n\t\t\tanimationEasing: $ease.out($ease.cubic)\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\").setAll({\r\n\t\t\ttoggleKey: \"disabled\",\r\n\t\t\tsetStateOnChildren: true,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\tcursorOverStyle: \"pointer\",\r\n\t\t\ttooltipText: \"{category}: {sum}\"\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"last\"]).setAll({\r\n\t\t\tcursorOverStyle: \"default\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"hierarchy\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingRight: 4,\r\n\t\t\t\tpaddingLeft: 4,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.3\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"HierarchyLink\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrength: 0.9,\r\n\t\t\t\tdistance: 1.1\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tfillOpacity: 1,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tradius: 15,\r\n\t\t\ttooltipY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\topacity: 1,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tstrokeDasharray: 0,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tradius: 15,\r\n\t\t\tscale: 1.1,\r\n\t\t\tinteractive: false\r\n\t\t})\r\n\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"disabled\", { opacity: 1, scale: 1.1, strokeDasharray: 2 });\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hoverDisabled\", { scale: 1.2, opacity: 1, strokeDasharray: 2 });\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hover\", { scale: 1.05, strokeDasharray: 0 });\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hidden\", { opacity: 0, strokeDasharray: 0 });\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: BreadcrumbBar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"BreadcrumbBar\").setAll({\r\n\t\t\tpaddingLeft: 8,\r\n\t\t\tlayout: gridLayout\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tpaddingRight: 4,\r\n\t\t\t\tpaddingLeft: 4,\r\n\t\t\t\tcursorOverStyle: \"pointer\",\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}:\",\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\"]).states.create(\"hover\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\", \"last\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\tcursorOverStyle: \"default\"\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"breadcrumb\", \"label\", \"background\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Partition\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Partition\").setAll({\r\n\t\t\tdownDepth: 1,\r\n\t\t\tupDepth: 0,\r\n\t\t\tinitialDepth: 5\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"partition\"]).setAll({\r\n\t\t\tsetStateOnChildren: false\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"partition\"]).states.create(\"hidden\", {\r\n\t\t\topacity: 1,\r\n\t\t\tvisible: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"partition\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tx: p50,\r\n\t\t\t\ty: p50,\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\trotation: 90,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\tr(\"Label\", [\"horizontal\", \"partition\", \"node\"]).setAll({\r\n\t\t\trotation: 0\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"partition\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tcornerRadiusBR: 0,\r\n\t\t\t\tcornerRadiusTR: 0,\r\n\t\t\t\tcornerRadiusBL: 0,\r\n\t\t\t\tcornerRadiusTL: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\tr(\"RoundedRectangle\", [\"partition\", \"node\", \"shape\", \"last\"]).setAll({\r\n\t\t\tfillOpacity: 0.75\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Sunburst\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Sunburst\").setAll({\r\n\t\t\tsingleBranchOnly: true\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"sunburst\"]).setAll({\r\n\t\t\tsetStateOnChildren: false\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"sunburst\"]).states.create(\"hidden\", {\r\n\t\t\topacity: 0,\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Slice\", [\"sunburst\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tcornerRadius: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\tr(\"Slice\", [\"sunburst\", \"node\", \"shape\", \"last\"]).setAll({\r\n\t\t\tfillOpacity: 0.75\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RadialLabel\", [\"sunburst\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\ttextType: \"radial\",\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4,\r\n\t\t\t\tbaseRadius: p50,\r\n\t\t\t\trotation: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: ForceDirected\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"ForceDirected\").setAll({\r\n\t\t\tminRadius: percent(1),\r\n\t\t\tmaxRadius: percent(8),\r\n\t\t\tinitialFrames: 500,\r\n\t\t\tcenterStrength: 0.8,\r\n\t\t\tmanyBodyStrength: -14,\r\n\t\t\tvelocityDecay: 0.5,\r\n\t\t\tlinkWithStrength: 0.5,\r\n\t\t\tshowOnFrame: 10,\r\n\t\t\tsingleBranchOnly: false,\r\n\t\t\tupDepth: Infinity,\r\n\t\t\tdownDepth: 1,\r\n\t\t\tinitialDepth: 5,\r\n\t\t\ttopDepth: 0\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Tree\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Tree\").setAll({\r\n\t\t\torientation: \"vertical\",\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 20,\r\n\t\t\tpaddingBottom: 20,\r\n\t\t\tsingleBranchOnly: false,\r\n\t\t\tupDepth: Infinity,\r\n\t\t\tdownDepth: 1,\r\n\t\t\tinitialDepth: 5,\r\n\t\t\ttopDepth: 0\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Pack\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Pack\").setAll({\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingTop: 20,\r\n\t\t\tpaddingBottom: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tnodePadding: 0\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"pack\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Circle\", [\"pack\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.5,\r\n\t\t\t\tfillOpacity: 0.8,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t\tr(\"LinkedHierarchyNode\").setAll({\r\n\t\t\tdraggable: true\r\n\t\t});\r\n\r\n\t\tr(\"LinkedHierarchyNode\").states.create(\"hidden\", { scale: 0, opacity: 0, visible: false });\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Treemap\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Treemap\").setAll({\r\n\t\t\tupDepth: 0,\r\n\t\t\tlayoutAlgorithm: \"squarify\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"treemap\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tx: p50,\r\n\t\t\t\ty: p50,\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\tr(\"HierarchyNode\", [\"treemap\", \"node\"]).setAll({\r\n\t\t\ttooltipY: percent(40),\r\n\t\t\tisMeasured: false,\r\n\t\t\tposition: \"absolute\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"treemap\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tcornerRadiusBR: 0,\r\n\t\t\t\tcornerRadiusTR: 0,\r\n\t\t\t\tcornerRadiusBL: 0,\r\n\t\t\t\tcornerRadiusTL: 0,\r\n\t\t\t\tfillOpacity: 1\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t}\r\n}\r\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { Hierarchy, IHierarchyDataItem } from \"./Hierarchy\";\n\nimport { HierarchyDefaultTheme } from \"./HierarchyDefaultTheme\";\nimport { Container, IContainerPrivate, IContainerSettings, IContainerEvents } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IBreadcrumbBarSettings extends IContainerSettings {\n\n\t/**\n\t * A hierarchy series bar will use to build current selection path.\n\t */\n\tseries: Hierarchy;\n\n}\n\nexport interface IBreadcrumbBarPrivate extends IContainerPrivate {\n}\n\nexport interface IBreadcrumbBarEvents extends IContainerEvents {\n}\n\n/**\n * Creates a breadcrumb navigation control.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/breadcrumbs/} for more info\n * @important\n */\nexport class BreadcrumbBar extends Container {\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IHierarchyDataItem>): Label {\n\t\tconst label = this.labels.make();\n\t\tlabel._setDataItem(dataItem);\n\t\tlabel.states.create(\"hover\", {});\n\t\tlabel.states.create(\"down\", {});\n\t\tlabel.events.on(\"click\", () => {\n\t\t\tconst series = this.get(\"series\");\n\t\t\tif (series) {\n\t\t\t\tseries.selectDataItem(dataItem);\n\t\t\t}\n\t\t});\n\n\t\tthis.labels.push(label);\n\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the bar.\n\t *\n\t * `labels.template` can be used to configure label apperance and behavior.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"label\"]),\n\t\t\tbackground: RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: [\"background\"]\n\t\t\t})\n\t\t}, [this.labels.template])\n\t);\n\n\tpublic static className: string = \"BreadcrumbBar\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([BreadcrumbBar.className]);\n\n\tdeclare public _settings: IBreadcrumbBarSettings;\n\tdeclare public _privateSettings: IBreadcrumbBarPrivate;\n\tdeclare public _events: IBreadcrumbBarEvents;\n\n\tprotected _disposer: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(HierarchyDefaultTheme.new(this._root));\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"breadcrumb\"]);\n\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"series\")) {\n\t\t\tconst series = this.get(\"series\");\n\t\t\tconst previous = this._prevSettings.series;\n\t\t\tif (series != previous) {\n\t\t\t\tthis._disposer = series.events.on(\"dataitemselected\", (event) => {\n\t\t\t\t\tthis._handleDataItem(event.dataItem)\n\t\t\t\t})\n\t\t\t}\n\t\t\telse if (previous) {\n\t\t\t\tif (this._disposer) {\n\t\t\t\t\tthis._disposer.dispose();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._handleDataItem(series.get(\"selectedDataItem\"));\n\t\t}\n\t}\n\n\tprotected _handleDataItem(dataItem: DataItem<IHierarchyDataItem> | undefined) {\n\t\tthis.set(\"minHeight\", this.height());\n\t\tthis.children.clear();\n\t\tthis.labels.clear();\n\n\t\tif (dataItem) {\n\t\t\tlet parent = dataItem;\n\n\t\t\twhile (parent) {\n\t\t\t\tlet label = this.makeLabel(parent);\n\t\t\t\tif (parent == dataItem) {\n\t\t\t\t\tlabel.addTag(\"last\");\n\t\t\t\t}\n\t\t\t\tthis.children.moveValue(label, 0);\n\t\t\t\tparent = parent.get(\"parent\");\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { Hierarchy, IHierarchyDataItem } from \"./Hierarchy\";\n\nimport { Container, IContainerPrivate, IContainerSettings } from \"../../core/render/Container\";\n\nexport interface IHierarchyNodeSettings extends IContainerSettings {\n}\n\nexport interface IHierarchyNodePrivate extends IContainerPrivate {\n}\n\n/**\n * Base class for hierarchy nodes.\n */\nexport class HierarchyNode extends Container {\n\n\t/**\n\t * Related series.\n\t */\n\tpublic series: Hierarchy | undefined;\n\n\tdeclare public _settings: IHierarchyNodeSettings;\n\tdeclare public _privateSettings: IHierarchyNodePrivate;\n\n\tpublic static className: string = \"HierarchyNode\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([HierarchyNode.className]);\n\n\tdeclare protected _dataItem: DataItem<IHierarchyDataItem> | undefined;\n\n\tprotected _clickDisposer: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.states.create(\"disabled\", {});\n\t\tthis.states.create(\"hover\", {});\n\t\tthis.states.create(\"hoverDisabled\", {});\n\n\t\tthis.on(\"disabled\", () => {\n\t\t\tconst dataItem = this.dataItem as DataItem<IHierarchyDataItem>;\n\t\t\tif (!dataItem.get(\"children\")) {\n\t\t\t\tthis.set(\"disabled\", true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst disabled = this.get(\"disabled\");\n\t\t\tconst series = this.series;\n\n\t\t\tif (dataItem && series) {\n\t\t\t\tif (dataItem.get(\"disabled\") != disabled) {\n\t\t\t\t\tif (disabled) {\n\t\t\t\t\t\tseries.disableDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.enableDataItem(dataItem, series.get(\"downDepth\", 1), 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"toggleKey\")) {\n\t\t\tconst toggleKey = this.get(\"toggleKey\");\n\n\t\t\tif (toggleKey == \"disabled\") {\n\t\t\t\tthis._clickDisposer = this.events.on(\"click\", () => {\n\t\t\t\t\tif (!this._isDragging) {\n\t\t\t\t\t\tlet series = this.series;\n\t\t\t\t\t\tif (series) {\n\t\t\t\t\t\t\tseries.selectDataItem(this.dataItem as DataItem<IHierarchyDataItem>);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._clickDisposer) {\n\t\t\t\t\tthis._clickDisposer.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n","import type { Color } from \"../../core/util/Color\";\nimport type { ColorSet } from \"../../core/util/ColorSet\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { Root } from \"../../core/Root\";\nimport type { Easing } from \"../../core/util/Ease\";\n\nimport { HierarchyDefaultTheme } from \"./HierarchyDefaultTheme\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\nimport { DataItem } from \"../../core/render/Component\";\nimport { HierarchyNode } from \"./HierarchyNode\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\n/**\n * @ignore\n */\nexport interface IHierarchyDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IHierarchyDataObject[],\n\tdataItem?: DataItem<IHierarchyDataItem>\n\tcustomValue?: boolean;\n};\n\nexport interface IHierarchyDataItem extends ISeriesDataItem {\n\n\t/**\n\t * Value of the node as set in data.\n\t */\n\tvalue: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvalueWorking: number;\n\n\t/**\n\t * Percent value of the node, based on total sum of all nodes in upper level.\n\t */\n\tvaluePercentTotal: number;\n\n\t/**\n\t * Percent value of the node, based on the value of its direct parent.\n\t *\n\t * @since 5.2.21\n\t */\n\tvaluePercent: number;\n\n\t/**\n\t * Sum of child values.\n\t */\n\tsum: number;\n\n\t/**\n\t * Category.\n\t */\n\tcategory: string;\n\n\t/**\n\t * List of child node data items.\n\t */\n\tchildren: Array<DataItem<IHierarchyDataItem>>;\n\n\t/**\n\t * Raw data of the node's children.\n\t */\n\tchildData: Array<any>\n\n\t/**\n\t * Data item of parent node.\n\t */\n\tparent: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Node's depth within the hierarchy.\n\t */\n\tdepth: number;\n\n\t/**\n\t * A reference to the related [[HierarchyNode]].\n\t */\n\tnode: HierarchyNode;\n\n\t/**\n\t * A reference to node's [[Label]].\n\t */\n\tlabel: Label;\n\n\t/**\n\t * Node's auto-assigned color.\n\t */\n\tfill: Color;\n\n\t/**\n\t * Indicates if node is currently disabled.\n\t */\n\tdisabled: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>;\n\n}\n\nexport interface IHierarchySettings extends ISeriesSettings {\n\t/**\n\t * How to sort nodes by their value.\n\t *\n\t * @default \"none\"\n\t */\n\tsort?: \"ascending\" | \"descending\" | \"none\"\n\n\n\t/**\n\t * A field in data that holds numeric value for the node.\n\t */\n\tvalueField?: string;\n\n\t/**\n\t * A field in data that holds string-based identificator for node.\n\t */\n\tcategoryField?: string;\n\n\t/**\n\t * A field in data that holds an array of child node data.\n\t */\n\tchildDataField?: string;\n\n\t/**\n\t * A field in data that holds boolean value indicating if node is\n\t * disabled (collapsed).\n\t */\n\tdisabledField?: string;\n\n\t/**\n\t * A field in data that holds color used for fills for various elements, such\n\t * as nodes.\n\t */\n\tfillField?: string;\n\n\t/**\n\t * A [[ColorSet]] to use when asigning colors for nodes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Node_colors} for more info\n\t */\n\tcolors?: ColorSet;\n\n\t/**\n\t * Number of child levels to open when clicking on a node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Drill_down} for more info\n\t */\n\tdownDepth?: number;\n\n\t/**\n\t * Number of levels parent levels to show from currently selected node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Drill_down} for more info\n\t */\n\tupDepth?: number;\n\n\t/**\n\t * Number of levels to show on chart's first load.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Tree_depth} for more info\n\t */\n\tinitialDepth?: number;\n\n\t/**\n\t * If set, will show nodes starting from set level.\n\t *\n\t * It could be used to eliminate top level branches, that do not need to be\n\t * shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Tree_depth} for more info\n\t */\n\ttopDepth?: number;\n\n\t/**\n\t * If set to `true` will make all other branches collapse when some branch is\n\t * expanded.\n\t */\n\tsingleBranchOnly?: boolean;\n\n\t/**\n\t * A data item for currently selected node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Pre_selected_branch} for more info\n\t */\n\tselectedDataItem?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Duration for all drill animations in milliseconds.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * An easing function to use for drill animations.\n\t */\n\tanimationEasing?: Easing;\n\n}\n\nexport interface IHierarchyPrivate extends ISeriesPrivate {\n\n\t/**\n\t * Level count in series.\n\t */\n\tmaxDepth: number;\n\n}\n\nexport interface IHierarchyEvents extends ISeriesEvents {\n\tdataitemselected: {\n\t\tdataItem?: DataItem<IHierarchyDataItem>\n\t};\n}\n\n/**\n * A base class for all hierarchy charts.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/} for more info\n */\nexport abstract class Hierarchy extends Series {\n\tpublic static className: string = \"Hierarchy\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([Hierarchy.className]);\n\n\tdeclare public _settings: IHierarchySettings;\n\tdeclare public _privateSettings: IHierarchyPrivate;\n\tdeclare public _dataItemSettings: IHierarchyDataItem;\n\tdeclare public _events: IHierarchyEvents;\n\n\t/**\n\t * A [[Container]] that nodes are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly nodesContainer = this.children.push(Container.new(this._root, { isMeasured: false }));\n\n\tpublic _rootNode: d3hierarchy.HierarchyNode<IHierarchyDataObject> | undefined;\n\n\tpublic _treeData: IHierarchyDataObject | undefined;\n\n\tprotected _index: number = 0;\n\n\tprotected _tag: string = \"hierarchy\";\n\n\t/**\n\t * A list of nodes in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<HierarchyNode>\n\t */\n\tpublic readonly nodes: ListTemplate<HierarchyNode> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => HierarchyNode.new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.nodes.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\"])\n\t\t}, this.nodes.template)\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\n\t\tconst childData = dataItem.get(\"childData\");\n\n\t\tconst node = this.nodes.make();\n\t\tnode.series = this;\n\t\tnode._setDataItem(dataItem);\n\t\tthis.nodes.push(node);\n\t\tdataItem.setRaw(\"node\", node);\n\n\t\tconst label = this.labels.make();\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\n\t\tif (!childData || childData.length == 0) {\n\t\t\tnode.addTag(\"last\");\n\t\t}\n\n\t\tconst depth = dataItem.get(\"depth\");\n\t\tnode.addTag(\"depth\" + depth);\n\n\t\tthis.nodesContainer.children.push(node);\n\t\tnode.children.push(label);\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * A list of label elements in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label.new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [this._tag])\n\t\t}, this.labels.template)\n\t);\n\n\tpublic _currentDownDepth: number | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(HierarchyDefaultTheme.new(this._root));\n\t\tthis.fields.push(\"category\", \"childData\", \"disabled\", \"fill\");\n\n\t\tthis.children.push(this.bulletsContainer);\n\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this._valuesDirty) {\n\t\t\tthis._treeData = {};\n\n\t\t\tconst first = this.dataItems[0];\n\t\t\tif (first) {\n\t\t\t\tthis._makeHierarchyData(this._treeData, first);\n\t\t\t\tthis._index = 0;\n\t\t\t\tthis._rootNode = (d3hierarchy.hierarchy(this._treeData) as any);\n\t\t\t\tif (this._rootNode) {\n\t\t\t\t\tthis._rootNode.sum((d) => {\n\t\t\t\t\t\treturn d.value as any;\n\t\t\t\t\t});\n\t\t\t\t\tconst sort = this.get(\"sort\")\n\t\t\t\t\tif (sort == \"descending\") {\n\t\t\t\t\t\tthis._rootNode.sort((a, b) => (b.value as any) - (a.value as any));\n\t\t\t\t\t}\n\t\t\t\t\telse if (sort == \"ascending\") {\n\t\t\t\t\t\tthis._rootNode.sort((a, b) => (a.value as any) - (b.value as any));\n\t\t\t\t\t}\n\t\t\t\t\tthis.setPrivateRaw(\"valueLow\", Infinity);\n\t\t\t\t\tthis.setPrivateRaw(\"valueHigh\", -Infinity);\n\t\t\t\t\tthis.setPrivateRaw(\"maxDepth\", 0);\n\t\t\t\t\tthis._updateValues(this._rootNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty || this._sizeDirty) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\n\t\tif (this._sizeDirty) {\n\t\t\tthis._selectDataItem(this.get(\"selectedDataItem\"), this._currentDownDepth, false);\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"selectedDataItem\")) {\n\t\t\tthis._selectDataItem(this.get(\"selectedDataItem\"));\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNodes(hierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\n\t\tif (dataItem) {\n\t\t\tthis._updateNode(dataItem);\n\n\t\t\tif (this.bullets.length > 0 && !dataItem.bullets) {\n\t\t\t\tthis._makeBullets(dataItem);\n\t\t\t}\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodes(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateNode(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\tpublic _getDataItemById(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>, id: string): DataItem<this[\"_dataItemSettings\"]> | undefined {\n\n\t\tlet di: DataItem<this[\"_dataItemSettings\"]> | undefined;\n\n\t\t$array.each(dataItems, (dataItem: any) => {\n\n\t\t\tif (dataItem.get(\"id\") == id) {\n\t\t\t\tdi = dataItem;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tlet childDataItem = this._getDataItemById(children, id);\n\t\t\t\tif (childDataItem) {\n\t\t\t\t\tdi = childDataItem\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\treturn di;\n\t}\n\n\tprotected _handleBullets(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets) {\n\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\tbullet.dispose();\n\t\t\t\t})\n\t\t\t\tdataItem.bullets = undefined;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\n\t\t\tif (children) {\n\t\t\t\tthis._handleBullets(children);\n\t\t\t}\n\t\t})\n\n\t\tthis._updateVisuals();\n\t}\n\n\tprotected _onDataClear() {\n\t\tsuper._onDataClear();\n\t\tconst colors = this.get(\"colors\");\n\t\tif (colors) {\n\t\t\tcolors.reset();\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst childData = dataItem.get(\"childData\");\n\t\tconst colors = this.get(\"colors\");\n\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\tif (!dataItem.get(\"parent\")) {\n\t\t\tdataItem.setRaw(\"depth\", 0);\n\t\t\tif (colors && topDepth == 0 && dataItem.get(\"fill\") == null) {\n\t\t\t\tdataItem.setRaw(\"fill\", colors.next());\n\t\t\t}\n\t\t}\n\n\t\tlet depth = dataItem.get(\"depth\");\n\t\tconst initialDepth = this.get(\"initialDepth\", 1);\n\n\t\tthis.makeNode(dataItem);\n\t\tthis._processDataItem(dataItem);\n\n\t\tif (childData) {\n\t\t\tconst children: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\t\t\tdataItem.setRaw(\"children\", children);\n\n\t\t\t$array.each(childData, (child) => {\n\t\t\t\tconst childDataItem = new DataItem(this, child, this._makeDataItem(child));\n\n\t\t\t\tchildren.push(childDataItem);\n\n\t\t\t\tchildDataItem.setRaw(\"parent\", dataItem);\n\t\t\t\tchildDataItem.setRaw(\"depth\", depth + 1);\n\n\t\t\t\tif (this.dataItems.length == 1 && depth == 0) {\n\t\t\t\t\tif (colors && childDataItem.get(\"fill\") == null) {\n\t\t\t\t\t\tchildDataItem.setRaw(\"fill\", colors.next());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tchildDataItem.setRaw(\"fill\", dataItem.get(\"fill\"));\n\t\t\t\t}\n\n\t\t\t\tthis.processDataItem(childDataItem);\n\t\t\t})\n\t\t}\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (!children || children.length == 0) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tnode.setAll({ toggleKey: undefined });\n\t\t}\n\n\t\tif (dataItem.get(\"disabled\") == null) {\n\t\t\tif (depth >= topDepth + initialDepth) {\n\t\t\t\tthis.disableDataItem(dataItem, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\tprotected _updateValues(d3HierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>) {\n\t\tconst dataItem = d3HierarchyNode.data.dataItem;\n\n\t\tif (d3HierarchyNode.depth > this.getPrivate(\"maxDepth\")) {\n\t\t\tthis.setPrivateRaw(\"maxDepth\", d3HierarchyNode.depth);\n\t\t}\n\n\t\tif (dataItem) {\n\t\t\tdataItem.setRaw(\"d3HierarchyNode\", d3HierarchyNode);\n\n\t\t\t(d3HierarchyNode as any).index = this._index;\n\n\t\t\tthis._index++;\n\n\t\t\tdataItem.get(\"node\").set(\"disabled\", dataItem.get(\"disabled\"));\n\n\t\t\tlet dataValue = d3HierarchyNode.data.value;\n\t\t\tlet value = d3HierarchyNode.value\n\n\t\t\tif (dataValue != null) {\n\t\t\t\tvalue = dataValue;\n\t\t\t\t(d3HierarchyNode as any)[\"value\"] = value;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdataItem.setRaw(\"sum\", value);\n\t\t\t\tdataItem.setRaw(\"valuePercentTotal\", value / this.dataItems[0].get(\"sum\") * 100);\n\n\t\t\t\tlet valuePercent = 100;\n\t\t\t\tconst parent = dataItem.get(\"parent\");\n\t\t\t\tif (parent) {\n\t\t\t\t\tvaluePercent = value / parent.get(\"sum\") * 100;\n\t\t\t\t}\n\t\t\t\tdataItem.get(\"label\").text.markDirtyText();\n\t\t\t\tdataItem.setRaw(\"valuePercent\", valuePercent);\n\n\t\t\t\tif (this.getPrivate(\"valueLow\") > value) {\n\t\t\t\t\tthis.setPrivateRaw(\"valueLow\", value);\n\t\t\t\t}\n\n\t\t\t\tif (this.getPrivate(\"valueHigh\") < value) {\n\t\t\t\t\tthis.setPrivateRaw(\"valueHigh\", value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.updateLegendValue(dataItem);\n\t\t}\n\n\t\tconst hierarchyChildren = d3HierarchyNode.children;\n\t\tif (hierarchyChildren) {\n\t\t\t$array.each(hierarchyChildren, (d3HierarchyChild) => {\n\t\t\t\tthis._updateValues(d3HierarchyChild);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _makeHierarchyData(data: IHierarchyDataObject, dataItem: DataItem<IHierarchyDataItem>) {\n\t\tdata.dataItem = dataItem;\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\tconst childrenDataArray: Array<IHierarchyDataObject> = [];\n\t\t\tdata.children = childrenDataArray;\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tconst childData = {};\n\t\t\t\tchildrenDataArray.push(childData);\n\t\t\t\tthis._makeHierarchyData(childData, childDataItem);\n\t\t\t})\n\n\t\t\tconst value = dataItem.get(\"valueWorking\");\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdata.value = value;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst value = dataItem.get(\"valueWorking\");\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdata.value = value;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst node = dataItem.get(\"node\");\n\t\tif (node) {\n\t\t\tthis.nodes.removeValue(node);\n\t\t\tnode.dispose();\n\t\t}\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tthis.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\t$array.each(children, (child) => {\n\t\t\t\tthis.disposeDataItem(child);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides hierarchy's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tconst stateAnimationDuration = \"stateAnimationDuration\"\n\t\t\tduration = hiddenState.get(stateAnimationDuration, this.get(stateAnimationDuration, 0));\n\t\t}\n\n\t\tconst stateAnimationEasing = \"stateAnimationEasing\";\n\t\tconst easing = hiddenState.get(stateAnimationEasing, this.get(stateAnimationEasing));\n\n\t\tconst children = dataItem.get(\"children\");\n\n\t\tif ((!children || children.length == 0) && $type.isNumber(dataItem.get(\"value\"))) {\n\t\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: 0, duration: duration, easing: easing }).waitForStop());\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.hide();\n\t\tnode.hideTooltip();\n\n\t\tif (children) {\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tpromises.push(this.hideDataItem(childDataItem));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows hierarchy's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\tconst children = dataItem.get(\"children\");\n\n\t\tif ((!children || children.length == 0) && $type.isNumber(dataItem.get(\"value\"))) {\n\t\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: dataItem.get(\"value\"), duration: duration, easing: easing }).waitForStop());\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.show();\n\n\t\tif (children) {\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tpromises.push(this.showDataItem(childDataItem));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Enables a disabled data item.\n\t *\n\t * @param  dataItem  Target data item\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic enableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, maxDepth?: number, depth?: number, duration?: number) {\n\n\t\tif (depth == null) {\n\t\t\tdepth = 0;\n\t\t}\n\n\t\tif (maxDepth == null) {\n\t\t\tmaxDepth = 1;\n\t\t}\n\n\t\tdataItem.set(\"disabled\", false);\n\t\tdataItem.get(\"node\").set(\"disabled\", false);\n\n\t\tif (!dataItem.isHidden()) {\n\t\t\tdataItem.get(\"node\").show(duration);\n\t\t}\n\n\t\tconst topDepth = this.get(\"topDepth\", 0);\n\t\tif (dataItem.get(\"depth\") < topDepth) {\n\t\t\tdataItem.get(\"node\").hide(0);\n\t\t}\n\n\t\tif (depth == 0) {\n\t\t\tconst upDepth = this.get(\"upDepth\", Infinity);\n\t\t\tlet parent = dataItem;\n\t\t\tlet count = 0;\n\n\t\t\twhile (parent !== undefined) {\n\t\t\t\tif (count > upDepth) {\n\t\t\t\t\tparent.get(\"node\").hide();\n\t\t\t\t}\n\t\t\t\tparent = parent.get(\"parent\");\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\n\t\tlet children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\tif (depth < maxDepth - 1) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tthis.enableDataItem(child, maxDepth, depth as number + 1, duration);\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (!child.isHidden()) {\n\t\t\t\t\t\tchild.get(\"node\").show(duration);\n\t\t\t\t\t\tchild.get(\"node\").states.applyAnimate(\"disabled\");\n\t\t\t\t\t\tchild.set(\"disabled\", true);\n\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Disables a data item.\n\t *\n\t * @param  dataItem  Target data item\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic disableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number) {\n\t\tdataItem.set(\"disabled\", true);\n\t\tlet children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\t$array.each(children, (child) => {\n\t\t\t\tthis.disableDataItem(child, duration);\n\t\t\t\tchild.get(\"node\").hide(duration);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _selectDataItem(dataItem?: DataItem<this[\"_dataItemSettings\"]>, downDepth?: number, skipDisptach?: boolean) {\n\t\tif (dataItem) {\n\t\t\tif (!skipDisptach) {\n\t\t\t\tconst type = \"dataitemselected\";\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, dataItem: dataItem });\n\t\t\t}\n\n\t\t\tlet maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\t\tif (downDepth == null) {\n\t\t\t\tdownDepth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\n\t\t\t}\n\n\t\t\tif (!this.inited) {\n\t\t\t\tdownDepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - topDepth);\n\t\t\t}\n\n\t\t\tthis._currentDownDepth = downDepth;\n\n\t\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\t\tlet currentDepth = hierarchyNode.depth;\n\n\t\t\tif (currentDepth + downDepth > maxDepth) {\n\t\t\t\tdownDepth = maxDepth - currentDepth;\n\t\t\t}\n\n\t\t\tif (currentDepth < topDepth) {\n\t\t\t\tdownDepth += topDepth - currentDepth;\n\t\t\t\tcurrentDepth = topDepth;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\n\t\t\tif (children && children.length > 0) {\n\t\t\t\tif (downDepth > 0) {\n\t\t\t\t\tthis.enableDataItem(dataItem, downDepth);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem.get(\"node\").show();\n\t\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\t\tchild.get(\"node\").hide();\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif (hierarchyNode.depth < topDepth) {\n\t\t\t\t\tdataItem.get(\"node\").hide(0);\n\t\t\t\t}\n\n\t\t\t\tif (this.get(\"singleBranchOnly\")) {\n\t\t\t\t\tthis._handleSingle(dataItem);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.enableDataItem(this.dataItems[0], downDepth, 0);\n\t\t\t}\n\n\t\t\tthis._zoom(dataItem);\n\t\t}\n\n\t}\n\n\tprotected _zoom(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t}\n\n\tprotected _handleSingle(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tif (parent) {\n\t\t\tconst children = parent.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (child != dataItem) {\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Selects specific data item.\n\t *\n\t * @param  dataItem  Target data item\n\t */\n\tpublic selectDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tconst maxDepth = this.getPrivate(\"maxDepth\", 1);\n\n\t\tif (this.get(\"selectedDataItem\") == dataItem) {\n\t\t\tif (parent) {\n\t\t\t\tthis.set(\"selectedDataItem\", parent);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet depth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\n\n\t\t\t\tif (this._currentDownDepth == depth) {\n\t\t\t\t\tdepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - this.get(\"topDepth\", 0));\n\t\t\t\t}\n\n\t\t\t\tthis._selectDataItem(dataItem, depth);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.set(\"selectedDataItem\", dataItem);\n\t\t}\n\t}\n\n\n\tprotected _makeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>, bulletFunction: (root: Root, series: Series, dataItem: DataItem<this[\"_dataItemSettings\"]>) => Bullet | undefined, index?: number) {\n\t\tconst bullet = super._makeBullet(dataItem, bulletFunction, index);\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tif (sprite) {\n\t\t\t\tnode.children.push(sprite);\n\t\t\t\tnode.on(\"width\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\t\t\t\tnode.on(\"height\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\treturn bullet;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tsprite.set(\"x\", node.width() * locationX);\n\t\t\tsprite.set(\"y\", node.height() * locationY);\n\t\t}\n\t}\n\n\t/**\n\t * Triggers hover on a series data item.\n\t *\n\t * @since 5.0.7\n\t * @param  dataItem  Target data item\n\t */\n\tpublic hoverDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst node = dataItem.get(\"node\");\n\t\tif (node && !node.isHidden()) {\n\t\t\tnode.hover();\n\t\t}\n\t}\n\n\t/**\n\t * Triggers un-hover on a series data item.\n\t *\n\t * @since 5.0.7\n\t * @param  dataItem  Target data item\n\t */\n\tpublic unhoverDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst node = dataItem.get(\"node\");\n\t\tif (node) {\n\t\t\tnode.unhover();\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { LinkedHierarchy, ILinkedHierarchyDataItem } from \"./LinkedHierarchy\";\n\nimport { HierarchyNode, IHierarchyNodePrivate, IHierarchyNodeSettings } from \"./HierarchyNode\";\n\nimport * as $array from \"../../core/util/Array\";\n\nexport interface ILinkedHierarchyNodeSettings extends IHierarchyNodeSettings {\n}\n\nexport interface ILinkedHierarchyNodePrivate extends IHierarchyNodePrivate {\n}\n\n/**\n * A node class for [[LinkedHierarchy]].\n */\nexport class LinkedHierarchyNode extends HierarchyNode {\n\n\t/**\n\t * A series node belongs to.\n\t */\n\tdeclare public series: LinkedHierarchy | undefined;\n\n\tdeclare public _settings: ILinkedHierarchyNodeSettings;\n\tdeclare public _privateSettings: ILinkedHierarchyNodePrivate;\n\n\tpublic static className: string = \"LinkedHierarchyNode\";\n\tpublic static classNames: Array<string> = HierarchyNode.classNames.concat([LinkedHierarchyNode.className]);\n\n\tdeclare protected _dataItem: DataItem<ILinkedHierarchyDataItem> | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.states.create(\"disabled\", {});\n\t\tthis.states.create(\"hover\", {});\n\t\tthis.states.create(\"hoverDisabled\", {});\n\t}\n\n\n\tpublic _updateLinks(duration?: number) {\n\t\tconst dataItem = this.dataItem;\n\t\tif (dataItem) {\n\t\t\tlet links = (dataItem as DataItem<ILinkedHierarchyDataItem>).get(\"links\");\n\n\t\t\t$array.each(links, (link) => {\n\t\t\t\tlet source = link.get(\"source\")\n\t\t\t\tlet target = link.get(\"target\")\n\n\t\t\t\tif (source && target) {\n\t\t\t\t\tif (source.get(\"node\").isHidden() || target.get(\"node\").isHidden()) {\n\t\t\t\t\t\tlink.hide(duration);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlink.show(duration);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"disabled\")) {\n\t\t\tthis._updateLinks();\n\t\t}\n\t}\n\n\tprotected _onHide(duration?: number) {\n\t\tsuper._onHide(duration);\n\t\tthis._updateLinks(duration);\n\t}\n\n\tprotected _onShow(duration?: number) {\n\t\tsuper._onShow(duration);\n\t\tthis._updateLinks(duration);\n\t}\n}\n","import type { IHierarchyDataItem } from \"./Hierarchy\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\n\nexport interface IHierarchyLinkSettings extends IGraphicsSettings {\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Target node data item.\n\t */\n\ttarget?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Strength of the link.\n\t */\n\tstrength?: number;\n\n\t/**\n\t * Distance in pixels.\n\t */\n\tdistance?: number;\n\n}\n\nexport interface IHierarchyLinkPrivate extends IGraphicsPrivate {\n\td3Link:any;\n}\n\n/**\n * Draws a link between nodes in a hierarchy series.\n */\nexport class HierarchyLink extends Graphics {\n\tdeclare public _settings: IHierarchyLinkSettings;\n\tdeclare public _privateSettings: IHierarchyLinkPrivate;\n\n\tpublic static className: string = \"HierarchyLink\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([HierarchyLink.className]);\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this._clear) {\n\t\t\tlet source = this.get(\"source\");\n\t\t\tlet target = this.get(\"target\");\n\t\t\tif (source && target) {\n\t\t\t\tconst sourceNode = source.get(\"node\");\n\t\t\t\tconst targetNode = target.get(\"node\");\n\t\t\t\tthis._display.moveTo(sourceNode.x(), sourceNode.y());\n\t\t\t\tthis._display.lineTo(targetNode.x(), targetNode.y());\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"source\")) {\n\t\t\tconst source = this.get(\"source\");\n\t\t\tif (source) {\n\t\t\t\tconst sourceNode = source.get(\"node\");\n\t\t\t\tsourceNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"target\")) {\n\t\t\tconst target = this.get(\"target\");\n\t\t\tif (target) {\n\t\t\t\tconst targetNode = target.get(\"node\");\n\t\t\t\ttargetNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type * as d3hierarchy from \"d3-hierarchy\";\n\nimport { Hierarchy, IHierarchySettings, IHierarchyDataItem, IHierarchyPrivate, IHierarchyEvents } from \"./Hierarchy\";\nimport { Container } from \"../../core/render/Container\";\nimport { LinkedHierarchyNode } from \"./LinkedHierarchyNode\";\nimport { HierarchyLink } from \"./HierarchyLink\";\nimport { Template } from \"../../core/util/Template\";\nimport { Circle } from \"../../core/render/Circle\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\n\n/**\n * @ignore\n */\nexport interface ILinkedHierarchyDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ILinkedHierarchyDataObject[],\n\tdataItem?: DataItem<ILinkedHierarchyDataItem>\n};\n\nexport interface ILinkedHierarchyDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * An array of child data items.\n\t */\n\tchildren: Array<DataItem<ILinkedHierarchyDataItem>>;\n\n\t/**\n\t * A data item of a parent node.\n\t */\n\tparent: DataItem<ILinkedHierarchyDataItem>;\n\n\t/**\n\t * A related node.\n\t */\n\tnode: LinkedHierarchyNode;\n\n\t/**\n\t * [[Circle]] element of the related node.\n\t */\n\tcircle: Circle;\n\n\t/**\n\t * [[Circle]] element of the related node, representing outer circle.\n\t */\n\touterCircle: Circle;\n\n\t/**\n\t * A [[HierarchyLink]] leading to parent node.\n\t */\n\tparentLink: HierarchyLink;\n\n\t/**\n\t * An [[HierarchyLink]] leading to parent node.\n\t */\n\tlinks: Array<HierarchyLink>;\n\n\t/**\n\t * An array of [[HierarchyLink]] objects leading to child nodes.\n\t */\n\tchildLinks: Array<HierarchyLink>;\n\n\t/**\n\t * An array of IDs of directly linked nodes.\n\t */\n\tlinkWith: Array<string>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyPointNode<ILinkedHierarchyDataObject>;\n\n}\n\nexport interface ILinkedHierarchySettings extends IHierarchySettings {\n\n\t/**\n\t * A field in data which holds IDs of nodes to link with.\n\t */\n\tlinkWithField?: string;\n\n}\n\nexport interface ILinkedHierarchyPrivate extends IHierarchyPrivate {\n}\n\nexport interface ILinkedHierarchyEvents extends IHierarchyEvents {\n}\n\n/**\n * A base class for linked hierarchy series.\n */\nexport abstract class LinkedHierarchy extends Hierarchy {\n\n\tpublic static className: string = \"LinkedHierarchy\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([LinkedHierarchy.className]);\n\n\tdeclare public _settings: ILinkedHierarchySettings;\n\tdeclare public _privateSettings: ILinkedHierarchyPrivate;\n\tdeclare public _dataItemSettings: ILinkedHierarchyDataItem;\n\tdeclare public _events: ILinkedHierarchyEvents;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"linkWith\", \"x\", \"y\");\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * A list of nodes in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<LinkedHierarchyNode>\n\t */\n\tpublic readonly nodes: ListTemplate<LinkedHierarchyNode> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => LinkedHierarchyNode._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.nodes.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"node\"]),\n\t\t\tx: this.width() / 2,\n\t\t\ty: this.height() / 2\n\t\t}, [this.nodes.template])\n\t);\n\n\t/**\n\t * A list of node circle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly circles: ListTemplate<Circle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.circles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.circles.template])\n\t);\n\n\t/**\n\t * A list of node outer circle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly outerCircles: ListTemplate<Circle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.outerCircles.template.get(\"themeTags\", []), [this._tag, \"outer\", \"shape\"])\n\t\t}, [this.outerCircles.template])\n\t);\n\n\t/**\n\t * A list of link elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<HierarchyLink>\n\t */\n\tpublic readonly links: ListTemplate<HierarchyLink> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => HierarchyLink._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.links.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"link\"])\n\t\t}, [this.links.template])\n\t);\n\n\t/**\n\t * A [[Container]] that link elements are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly linksContainer = this.children.moveValue(Container.new(this._root, {}), 0);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): LinkedHierarchyNode {\n\t\tconst node = super.makeNode(dataItem) as LinkedHierarchyNode;\n\n\t\tconst circle = node.children.moveValue(this.circles.make(), 0);\n\t\tthis.circles.push(circle);\n\t\tnode.setPrivate(\"tooltipTarget\", circle);\n\t\tdataItem.setRaw(\"circle\", circle);\n\n\t\tconst outerCircle = node.children.moveValue(this.outerCircles.make(), 0);\n\t\tthis.outerCircles.push(outerCircle);\n\t\tdataItem.setRaw(\"outerCircle\", outerCircle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\tcircle.on(\"radius\", () => {\n\t\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\t\tlabel.setAll({ maxWidth: d, maxHeight: d })\n\t\t\touterCircle.set(\"radius\", d / 2);\n\n\t\t\tthis._handleRadiusChange();\n\t\t})\n\n\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\tlabel.setAll({ maxWidth: d, maxHeight: d });\n\t\t\n\t\tcircle._setDataItem(dataItem);\n\t\touterCircle._setDataItem(dataItem);\n\n\t\treturn node;\n\t}\n\n\tpublic _handleRadiusChange() {\n\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tdataItem.setRaw(\"childLinks\", []);\n\t\tdataItem.setRaw(\"links\", []);\n\t\tsuper.processDataItem(dataItem);\n\t}\n\n\tprotected _processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._processDataItem(dataItem);\n\n\t\tconst parentDataItem = dataItem.get(\"parent\");\n\t\tif (parentDataItem && parentDataItem.get(\"depth\") >= this.get(\"topDepth\")) {\n\t\t\tconst link = this.linkDataItems(parentDataItem, dataItem);\n\t\t\tdataItem.setRaw(\"parentLink\", link);\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tthis.updateLinkWith(this.dataItems);\n\t\tnode._updateLinks(0);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLinkWith(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst linkWith = dataItem.get(\"linkWith\");\n\t\t\tif (linkWith) {\n\t\t\t\t$array.each(linkWith, (id) => {\n\t\t\t\t\tconst linkWithDataItem = this._getDataItemById(this.dataItems, id);\n\n\t\t\t\t\tif (linkWithDataItem) {\n\t\t\t\t\t\tthis.linkDataItems(dataItem, linkWithDataItem);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tthis.updateLinkWith(children);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _getPoint(hierarchyNode: this[\"_dataItemSettings\"][\"d3HierarchyNode\"]): IPoint {\n\t\treturn { x: hierarchyNode.x, y: hierarchyNode.y };\n\t}\n\n\tprotected _animatePositions(dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst point = this._getPoint(hierarchyNode);\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: point.x, duration: duration, easing: easing });\n\t\tnode.animate({ key: \"y\", to: point.y, duration: duration, easing: easing });\t\t\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tthis._animatePositions(dataItem);\n\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\tif (hierarchyChildren) {\n\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\tthis._updateNodes(hierarchyChild)\n\t\t\t})\n\t\t}\n\n\t\tconst fill = dataItem.get(\"fill\");\n\t\tconst circle = dataItem.get(\"circle\");\n\t\tconst children = dataItem.get(\"children\");\n\t\t\n\t\tif (circle) {\n\t\t\tcircle._setDefault(\"fill\", fill);\n\t\t\tcircle._setDefault(\"stroke\", fill);\n\t\t}\n\n\t\tconst outerCircle = dataItem.get(\"outerCircle\");\n\t\tif (outerCircle) {\n\t\t\touterCircle._setDefault(\"fill\", fill);\n\t\t\touterCircle._setDefault(\"stroke\", fill);\n\n\t\t\tif (!children || children.length == 0) {\n\t\t\t\touterCircle.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Link two data items with a link element.\n\t *\n\t * @param   source    Source node data item\n\t * @param   target    Target node data item\n\t * @param   strength  Link strength\n\t * @return            Link element\n\t */\n\tpublic linkDataItems(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>, strength?: number): HierarchyLink {\n\n\t\tlet link!: HierarchyLink;\n\n\t\tconst sourceLinks = source.get(\"links\");\n\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == target) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == source) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (!link) {\n\t\t\tlink = this.links.make();\n\t\t\tthis.links.push(link);\n\t\t\tthis.linksContainer.children.push(link);\n\t\t\tlink.set(\"source\", source);\n\t\t\tlink.set(\"target\", target);\n\t\t\tlink._setDataItem(source);\n\t\t\tlink.set(\"stroke\", source.get(\"fill\"));\n\t\t\tif (strength != null) {\n\t\t\t\tlink.set(\"strength\", strength)\n\t\t\t}\n\n\t\t\tsource.get(\"childLinks\").push(link);\n\n\t\t\t$array.move(source.get(\"links\"), link);\n\t\t\t$array.move(target.get(\"links\"), link);\n\n\t\t\tthis._processLink(link, source, target);\n\t\t}\n\n\t\treturn link;\n\t}\n\n\n\t/**\n\t * Unlink two linked data items.\n\t *\n\t * @param   source  Source node data item\n\t * @param   target  Target node data item\n\t */\n\tpublic unlinkDataItems(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tlet link!: HierarchyLink;\n\n\t\tconst sourceLinks = source.get(\"links\");\n\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk && lnk.get(\"target\") == target) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t\t$array.remove(sourceLinks, link);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk && lnk.get(\"target\") == source) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t\t$array.remove(targetLinks, link);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (link) {\n\t\t\tthis._disposeLink(link);\n\t\t}\n\n\t\tthis._handleUnlink();\n\t}\n\n\tprotected _handleUnlink() {\n\n\t}\n\n\tprotected _disposeLink(link: HierarchyLink) {\n\t\tthis.links.removeValue(link);\n\t\tlink.dispose();\n\t}\n\n\t/**\n\t * Returns `true` if two nodes are linked with each other.\n\t */\n\tpublic areLinked(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tconst sourceLinks = source.get(\"links\");\n\t\tlet linked = false;\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == target) {\n\t\t\t\t\tlinked = true;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == source) {\n\t\t\t\t\tlinked = true;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\treturn linked;\n\t}\n\n\tprotected _processLink(_link: HierarchyLink, _source: DataItem<this[\"_dataItemSettings\"]>, _target: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst links = dataItem.get(\"links\");\n\t\tif (links) {\n\t\t\t$array.each(links, (link) => {\n\t\t\t\tthis._disposeLink(link)\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Select a data item.\n\t * @param  dataItem  Data item\n\t */\n\tpublic selectDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\n\t\tif (!dataItem.get(\"disabled\")) {\n\t\t\tthis.set(\"selectedDataItem\", dataItem);\n\t\t}\n\t\telse {\n\t\t\tif (parent) {\n\t\t\t\tthis.setRaw(\"selectedDataItem\", parent);\n\t\t\t\tconst type = \"dataitemselected\";\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, dataItem: parent });\n\t\t\t\tthis.disableDataItem(dataItem);\n\t\t\t}\n\t\t}\n\t}\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { Percent } from \"../../core/util/Percent\";\nimport type { LinkedHierarchyNode } from \"./LinkedHierarchyNode\";\nimport type { HierarchyLink } from \"./HierarchyLink\";\nimport type * as d3Hierarchy from \"d3-hierarchy\";\n\nimport { LinkedHierarchy, ILinkedHierarchySettings, ILinkedHierarchyDataItem, ILinkedHierarchyPrivate, ILinkedHierarchyEvents } from \"./LinkedHierarchy\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\nimport * as d3Force from \"d3-force\";\n\n/**\n * @ignore\n */\nexport interface IForceDirectedDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IForceDirectedDataObject[],\n\tdataItem?: DataItem<IForceDirectedDataItem>\n};\n\nexport interface IForceDirectedDataItem extends ILinkedHierarchyDataItem {\n\n\t/**\n\t * An array of data items of child nodes.\n\t */\n\tchildren: Array<DataItem<IForceDirectedDataItem>>;\n\n\t/**\n\t * Data item of a parent node.\n\t */\n\tparent: DataItem<IForceDirectedDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3ForceNode: d3Force.SimulationNodeDatum;\n\n\t/**\n\t * X coordinate.\n\t */\n\tx: number | undefined;\n\n\t/**\n\t * Y coordinate.\n\t */\n\ty: number | undefined;\n}\n\nexport interface IForceDirectedSettings extends ILinkedHierarchySettings {\n\n\t/**\n\t * Minimum gap in pixels between the nodes.\n\t */\n\tnodePadding?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) all nodes to the center of the\n\t * chart.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tcenterStrength?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) all nodes to each other.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default -15\n\t */\n\tmanyBodyStrength?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) nodes that are linked together\n\t * via `linkWithField`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tlinkWithStrength?: number | undefined;\n\n\t/**\n\t * Resistance acting agains node speed.\n\t *\n\t * The greater the value, the more \"sluggish\" the nodes will be.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tvelocityDecay?: number;\n\n\t/**\n\t * Length of how long initial force simulation would run in frames.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 500\n\t */\n\tinitialFrames?: number;\n\n\t/**\n\t * If set to a number will wait X number of frames before revealing\n\t * the tree.\n\t *\n\t * Can be used to hide initial animations where nodes settle into their\n\t * places.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 10\n\t */\n\tshowOnFrame?: number;\n\n\t/**\n\t * Smallest possible radius for a node circle.\n\t *\n\t * Can be a fixed pixel value or percent relative to chart size.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Sizing_nodes} for more info\n\t * @default 1%\n\t */\n\tminRadius?: number | Percent;\n\n\t/**\n\t * Biggest possible radius for a node circle.\n\t *\n\t * Can be a fixed pixel value or percent relative to chart size.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Sizing_nodes} for more info\n\t * @default 8%\n\t */\n\tmaxRadius?: number | Percent;\n\n\t/**\n\t * Field in data that holds X coordinate of the node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Fixed_nodes} for more info\n\t */\n\txField?: string;\n\n\t/**\n\t * Field in data that holds X coordinate of the node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Fixed_nodes} for more info\n\t */\n\tyField?: string;\n\n}\n\nexport interface IForceDirectedPrivate extends ILinkedHierarchyPrivate {\n}\n\nexport interface IForceDirectedEvents extends ILinkedHierarchyEvents {\n}\n\n/**\n * Creates a force-directed tree.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/} for more info\n * @important\n */\nexport class ForceDirected extends LinkedHierarchy {\n\n\tprotected _tag: string = \"forcedirected\";\n\n\t/**\n\t * @ignore\n\t */\n\tpublic readonly d3forceSimulation: d3Force.Simulation<{}, d3Force.SimulationLinkDatum<d3Force.SimulationNodeDatum>> = d3Force.forceSimulation();\n\n\t/**\n\t * @ignore\n\t */\n\tpublic readonly collisionForce: d3Force.ForceCollide<d3Force.SimulationNodeDatum> = d3Force.forceCollide(20);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic linkForce: d3Force.ForceLink<d3Force.SimulationNodeDatum, d3Force.SimulationLinkDatum<d3Force.SimulationNodeDatum>> = d3Force.forceLink();\n\n\tpublic static className: string = \"ForceDirected\";\n\tpublic static classNames: Array<string> = LinkedHierarchy.classNames.concat([ForceDirected.className]);\n\n\tdeclare public _settings: IForceDirectedSettings;\n\tdeclare public _privateSettings: IForceDirectedPrivate;\n\tdeclare public _dataItemSettings: IForceDirectedDataItem;\n\tdeclare public _events: IForceDirectedEvents;\n\n\tprotected _nodes: Array<any> = [];\n\tprotected _links: Array<any> = [];\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.d3forceSimulation.on(\"tick\", () => {\n\t\t\tthis._tick++;\n\t\t\tthis.updateNodePositions();\n\t\t});\n\t}\n\n\tprotected _tick: number = 0;\n\tprotected _nodesDirty: boolean = false;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\t\tif (this.isDirty(\"showOnFrame\")) {\n\t\t\tconst showOnFrame = this.get(\"showOnFrame\");\n\t\t\tif (showOnFrame > this._tick) {\n\t\t\t\tthis.nodesContainer.setPrivate(\"visible\", false);\n\t\t\t\tthis.linksContainer.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\n\t\tif (this.isDirty(\"velocityDecay\")) {\n\t\t\td3forceSimulation.velocityDecay(this.get(\"velocityDecay\", 0));\n\t\t}\n\n\t\tif (this.isDirty(\"initialFrames\")) {\n\t\t\td3forceSimulation.alphaDecay(1 - Math.pow(0.001, 1 / this.get(\"initialFrames\", 500)));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic restartSimulation(alpha: number): void {\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\tif (d3forceSimulation.alpha() < alpha) {\n\t\t\td3forceSimulation.alpha(alpha);\n\t\t\td3forceSimulation.restart();\n\t\t}\n\t}\n\n\tpublic _handleRadiusChange() {\n\t\tthis._updateForces();\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst d3ForceNode: any = { index: this._index, x: this.innerWidth() / 2, y: this.innerHeight() / 2, dataItem: dataItem };\n\t\tconst index = this._nodes.push(d3ForceNode) - 1;\n\t\td3ForceNode.index = index;\n\n\t\tthis.d3forceSimulation.nodes(this._nodes);\n\n\t\tdataItem.set(\"d3ForceNode\", d3ForceNode);\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.set(\"x\", -10000);\n\t\tnode.on(\"scale\", () => {\n\t\t\tthis._updateForces();\n\t\t})\n\n\t\tnode.events.on(\"dragged\", () => {\n\t\t\td3ForceNode.fx = node.x();\n\t\t\td3ForceNode.fy = node.y();\n\t\t\tthis._updateForces();\n\t\t})\n\n\t\tnode.events.on(\"dragstop\", () => {\n\t\t\tif (dataItem.get(\"x\") == null) {\n\t\t\t\td3ForceNode.fx = undefined;\n\t\t\t}\n\t\t\tif (dataItem.get(\"y\") == null) {\n\t\t\t\td3ForceNode.fy = undefined;\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _updateValues(d3HierarchyNode: d3Hierarchy.HierarchyNode<IForceDirectedDataObject>) {\n\t\tsuper._updateValues(d3HierarchyNode);\n\n\t\tthis._nodesDirty = true;\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\td3forceSimulation.force(\"collision\", this.collisionForce);\n\t\td3forceSimulation.nodes(this._nodes);\n\n\t\tthis.linkForce = d3Force.forceLink(this._links);\n\t\td3forceSimulation.force(\"link\", this.linkForce);\n\t}\n\n\tprotected _updateVisuals() {\n\t\tsuper._updateVisuals();\n\t\tthis.restartSimulation(1);\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\n\t\tif (this._sizeDirty) {\n\t\t\tlet w = Math.max(50, this.innerWidth());\n\t\t\tlet h = Math.max(50, this.innerHeight());\n\t\t\tlet pt = this.get(\"paddingTop\", 0);\n\t\t\tlet pl = this.get(\"paddingLeft\", 0);\n\n\t\t\tlet centerStrength = this.get(\"centerStrength\", 1);\n\n\t\t\td3forceSimulation.force(\"x\", d3Force.forceX().x(w / 2 + pl).strength(centerStrength * 100 / w));\n\t\t\td3forceSimulation.force(\"y\", d3Force.forceY().y(h / 2 + pt).strength(centerStrength * 100 / h));\n\t\t}\n\n\t\tif (this._nodesDirty) {\n\t\t\tthis._updateForces();\n\t\t}\n\t}\n\n\tpublic _updateForces() {\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\td3forceSimulation.force(\"manybody\", d3Force.forceManyBody().strength((d3node) => {\n\t\t\tlet dataItem = (d3node as any).dataItem;\n\t\t\tlet node = dataItem.get(\"node\") as LinkedHierarchyNode;\n\t\t\tlet circle = dataItem.get(\"circle\");\n\t\t\tlet manyBodyStrength = this.get(\"manyBodyStrength\", -15);\n\n\t\t\tif(circle){\n\t\t\t\treturn circle.get(\"radius\", 1) * node.get(\"scale\", 1) * manyBodyStrength;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}));\n\n\t\tthis.collisionForce.radius((d3node) => {\n\t\t\tlet dataItem = (d3node as any).dataItem;\n\t\t\tlet node = dataItem.get(\"node\") as LinkedHierarchyNode;\n\t\t\tlet circle = dataItem.get(\"circle\");\n\t\t\tlet outerCircle = dataItem.get(\"outerCircle\");\n\t\t\tif(circle && outerCircle){\n\t\t\t\tlet radius = circle.get(\"radius\", 1);\n\n\t\t\t\tif (!outerCircle.isHidden()) {\n\t\t\t\t\tradius = radius * outerCircle.get(\"scale\", 1.1);\n\t\t\t\t}\n\n\t\t\t\tradius *= node.get(\"scale\", 1);\n\n\t\t\t\treturn radius + this.get(\"nodePadding\", 0);\n\t\t\t}\n\t\t})\n\n\t\tthis.restartSimulation(1);\n\t}\n\n\tprotected _animatePositions(_dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\t\t// void, do not remove\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._nodesDirty = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateNodePositions() {\n\t\tconst linkForce = this.linkForce;\n\t\tif (linkForce) {\n\t\t\tlinkForce.distance((linkDatum) => {\n\t\t\t\treturn this.getDistance(linkDatum)\n\t\t\t});\n\t\t\tlinkForce.strength((linkDatum) => {\n\t\t\t\treturn this.getStrength(linkDatum)\n\t\t\t});\n\t\t}\n\t\tif (this._tick == this.get(\"showOnFrame\")) {\n\t\t\tthis.nodesContainer.setPrivate(\"visible\", true);\n\t\t\tthis.linksContainer.setPrivate(\"visible\", true);\n\t\t}\n\n\t\tlet d3Nodes = this.d3forceSimulation.nodes();\n\n\t\t$array.each(d3Nodes, (d3Node: any) => {\n\t\t\tconst dataItem = d3Node.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tnode.set(\"x\", d3Node.x);\n\t\t\tnode.set(\"y\", d3Node.y);\n\t\t})\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLinkWith(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst linkWith = dataItem.get(\"linkWith\");\n\t\t\tif (linkWith) {\n\t\t\t\t$array.each(linkWith, (id) => {\n\t\t\t\t\tconst linkWithDataItem = this._getDataItemById(this.dataItems, id);\n\n\t\t\t\t\tif (linkWithDataItem) {\n\t\t\t\t\t\tthis.linkDataItems(dataItem, linkWithDataItem, this.get(\"linkWithStrength\"));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tthis.updateLinkWith(children);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected getDistance(linkDatum: any) {\n\t\tlet sourceDataItem: DataItem<this[\"_dataItemSettings\"]> = <DataItem<this[\"_dataItemSettings\"]>>linkDatum.sourceDataItem;\n\t\tlet targetDataItem: DataItem<this[\"_dataItemSettings\"]> = <DataItem<this[\"_dataItemSettings\"]>>linkDatum.targetDataItem;\n\n\t\tlet distance = 0;\n\n\t\tif (sourceDataItem && targetDataItem) {\n\n\t\t\tconst targetNode = targetDataItem.get(\"node\");\n\t\t\tif (targetNode.isHidden()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tlet link = linkDatum.link;\n\t\t\tif (link) {\n\t\t\t\tdistance = link.get(\"distance\", 1);\n\t\t\t}\n\n\t\t\tconst sourceNode = sourceDataItem.get(\"node\");\n\n\t\t\tif (targetNode.isHidden()) {\n\t\t\t\tdistance = 1;\n\t\t\t}\n\n\t\t\treturn (distance * (sourceDataItem.get(\"circle\").get(\"radius\", 1) * sourceNode.get(\"scale\", 1) + targetDataItem.get(\"circle\").get(\"radius\", 1) * targetNode.get(\"scale\", 1)));\n\t\t}\n\t\treturn distance;\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo description\n\t */\n\tprotected getStrength(linkDatum: any) {\n\t\tlet strength = 0;\n\n\t\tlet link = linkDatum.link;\n\t\tif (link) {\n\t\t\tstrength = link.get(\"strength\", 1);\n\t\t}\n\n\t\tconst targetDataItem = linkDatum.targetDataItem;\n\t\tstrength *= targetDataItem.get(\"node\").get(\"scale\");\n\n\t\treturn strength;\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\t\tthis._updateRadius(dataItem);\n\n\t\tconst x = dataItem.get(\"x\");\n\t\tconst y = dataItem.get(\"y\");\n\n\t\tconst d3Node = dataItem.get(\"d3ForceNode\");\n\n\t\tif (x != null) {\n\t\t\t(d3Node as any).fx = $utils.relativeToValue(x, this.innerWidth());\n\t\t}\n\t\telse{\n\t\t\t(d3Node as any).fx = undefined;\n\t\t}\n\n\t\tif (y != null) {\n\t\t\t(d3Node as any).fy = $utils.relativeToValue(y, this.innerHeight());\n\t\t}\n\t\telse{\n\t\t\t(d3Node as any).fx = undefined;\n\t\t}\n\t}\n\n\tprotected _updateRadius(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet size = (this.innerWidth() + this.innerHeight()) / 2;\n\n\t\tlet minRadius = $utils.relativeToValue(this.get(\"minRadius\", 1), size);\n\t\tlet maxRadius = $utils.relativeToValue(this.get(\"maxRadius\", 5), size);\n\n\t\tlet valueWorking = dataItem.get(\"sum\");\n\n\t\tlet radius = maxRadius;\n\n\t\tconst min = this.getPrivate(\"valueLow\", 0);\n\t\tconst max = this.getPrivate(\"valueHigh\", 0);\n\n\t\tif (max > 0) {\n\t\t\tradius = minRadius + (valueWorking - min) / (max - min) * (maxRadius - minRadius);\n\t\t}\n\n\t\tif (!$type.isNumber(radius)) {\n\t\t\tradius = minRadius;\n\t\t}\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tdataItem.get(\"circle\").animate({ key: \"radius\", to: radius, duration: duration, easing: easing });\n\t}\n\n\tprotected _processLink(link: HierarchyLink, source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst d3Link = { link: link, source: source.get(\"d3ForceNode\").index, target: target.get(\"d3ForceNode\").index, sourceDataItem: source, targetDataItem: target };\n\t\tthis._links.push(d3Link);\n\t\tlink.setPrivate(\"d3Link\", d3Link);\n\n\t\tthis.linkForce = d3Force.forceLink(this._links);\n\t\tthis.d3forceSimulation.force(\"link\", this.linkForce);\n\t\tthis.restartSimulation(0.5);\n\t}\n\n\tprotected _disposeLink(link: HierarchyLink) {\n\t\tsuper._disposeLink(link);\n\t\t$array.remove(this._links, link.getPrivate(\"d3Link\"));\n\t}\n\n\tprotected _handleUnlink() {\n\t\tthis.restartSimulation(0.5);\n\t}\n\n\tprotected _onDataClear() {\n\t\t\t\t\n\t\tsuper._onDataClear();\n\n\t\tthis._nodes = [];\n\t\tthis._links = [];\n\t}\t\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {shuffle} from \"../array.js\";\nimport lcg from \"../lcg.js\";\n\nexport default function(circles) {\n  return packEncloseRandom(circles, lcg());\n}\n\nexport function packEncloseRandom(circles, random) {\n  var i = 0, n = (circles = shuffle(Array.from(circles), random)).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(Math.abs(A) > 1e-6 ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import array from \"../array.js\";\nimport lcg from \"../lcg.js\";\nimport {packEncloseRandom} from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packSiblingsRandom(circles, random) {\n  if (!(n = (circles = array(circles)).length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = packEncloseRandom(a, random);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packSiblingsRandom(circles, lcg());\n  return circles;\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nexport function shuffle(array, random) {\n  let m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import {optional} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\nimport lcg from \"../lcg.js\";\nimport {packSiblingsRandom} from \"./siblings.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    const random = lcg();\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildrenRandom(padding, 0.5, random))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildrenRandom(constantZero, 1, random))\n          .eachAfter(packChildrenRandom(padding, root.r / Math.min(dx, dy), random))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildrenRandom(padding, k, random) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packSiblingsRandom(children, random);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { HierarchyNode } from \"./HierarchyNode\";\n\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem, IHierarchyEvents } from \"./Hierarchy\";\nimport { Circle } from \"../../core/render/Circle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as d3hierarchy from \"d3-hierarchy\";\nimport * as $utils from \"../../core/util/Utils\";\n\n/**\n * @ignore\n */\nexport interface IPackDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IPackDataObject[],\n\tdataItem?: DataItem<IPackDataItem>\n};\n\nexport interface IPackDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * An array of data items of node's children.\n\t */\n\tchildren: Array<DataItem<IPackDataItem>>;\n\n\t/**\n\t * A data item of node's parent.\n\t */\n\tparent: DataItem<IPackDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyCircularNode<IPackDataObject>;\n\n\t/**\n\t * A [[Circle]] element of the node.\n\t */\n\tcircle: Circle;\n\n}\n\nexport interface IPackSettings extends IHierarchySettings {\n\n\t/**\n\t * Gap between nodes, in pixels.\n\t *\n\t * @since 5.2.6\n\t */\n\tnodePadding?:number\n\n}\n\nexport interface IPackPrivate extends IHierarchyPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tscaleR?: number;\n\n}\n\nexport interface IPackEvents extends IHierarchyEvents {\n}\n\n/**\n * Builds a pack diagram.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/sunburst/} for more info\n * @important\n */\nexport class Pack extends Hierarchy {\n\n\tdeclare public _settings: IPackSettings;\n\tdeclare public _privateSettings: IPackPrivate;\n\tdeclare public _dataItemSettings: IPackDataItem;\n\n\tprotected _tag: string = \"pack\";\n\n\tpublic static className: string = \"Pack\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([Pack.className]);\n\n\tpublic _packLayout = d3hierarchy.pack();\n\tdeclare public _rootNode: d3hierarchy.HierarchyCircularNode<IPackDataObject> | undefined;\n\tpublic _packData: IPackDataObject | undefined;\n\n\t/**\n\t * A list of node circle elements in a [[Pack]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly circles: ListTemplate<Circle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.circles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.circles.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"scaleR\", 1);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"scaleR\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst packLayout = this._packLayout;\n\t\t\tpackLayout.size([this.innerWidth(), this.innerHeight()]);\n\t\t\tpackLayout(this._rootNode);\n\t\t\tpackLayout.padding(this.get(\"nodePadding\", 0));\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst circle = dataItem.get(\"circle\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst scaleR = this.getPrivate(\"scaleR\", 1);\n\n\t\tconst x = hierarchyNode.x * scaleR;\n\t\tconst y = hierarchyNode.y * scaleR;\n\t\tconst radius = hierarchyNode.r * scaleR;\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: x, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"y\", to: y, duration: duration, easing: easing })\n\n\t\tif (circle) {\n\t\t\tconst fill = dataItem.get(\"fill\");\n\n\t\t\tcircle.animate({ key: \"radius\", to: radius, duration: duration, easing: easing })\n\t\t\tcircle._setDefault(\"fill\", fill);\n\t\t\tcircle._setDefault(\"stroke\", fill);\n\t\t}\n\t}\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyCircularNode<IPackDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tconst circle = dataItem.get(\"circle\");\n\n\t\t\tconst scaleR = this.getPrivate(\"scaleR\", 1);\n\n\t\t\tconst x = hierarchyNode.x * scaleR;\n\t\t\tconst y = hierarchyNode.y * scaleR;\n\t\t\tconst radius = hierarchyNode.r * scaleR;\n\n\t\t\tnode.setAll({ x: x, y: y })\n\t\t\tcircle.set(\"radius\", radius);\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\t\tconst node = super.makeNode(dataItem);\n\n\t\tconst circle = node.children.moveValue(this.circles.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", circle);\n\t\tthis.circles.push(circle);\n\t\tdataItem.setRaw(\"circle\", circle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\tcircle.on(\"radius\", () => {\n\t\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\t\tlabel.setAll({ maxWidth: d, maxHeight: d });\n\t\t})\n\n\t\treturn node;\n\t}\n\n\tpublic _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tlet x = hierarchyNode.x;\n\t\tlet y = hierarchyNode.y;\n\t\tlet r = hierarchyNode.r;\n\n\t\tlet scaleR = Math.min(this.innerWidth(), this.innerHeight()) / (r * 2);\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\tif (!this.inited) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tthis.animatePrivate({ key: \"scaleR\", to: scaleR, duration: duration, easing: easing });\n\n\t\tconst nodesContainer = this.nodesContainer;\n\t\tnodesContainer.animate({ key: \"x\", from: nodesContainer.x(), to: this.width() / 2 - x * scaleR, duration: duration, easing: easing });\n\t\tnodesContainer.animate({ key: \"y\", from: nodesContainer.y(), to: this.height() / 2 - y * scaleR, duration: duration, easing: easing });\n\t}\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import roundNode from \"./treemap/round.js\";\nimport treemapDice from \"./treemap/dice.js\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import type { HierarchyNode } from \"./HierarchyNode\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem, IHierarchyDataObject } from \"./Hierarchy\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\n/**\n * @ignore\n */\nexport interface IPartitionDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IPartitionDataObject[],\n\tdataItem?: DataItem<IPartitionDataItem>\n};\n\nexport interface IPartitionDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * Data items of child nodes.\n\t */\n\tchildren: Array<DataItem<IPartitionDataItem>>;\n\n\t/**\n\t * Data it of a parent node.\n\t */\n\tparent: DataItem<IPartitionDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyRectangularNode<IHierarchyDataObject>;\n\n\t/**\n\t * A [[RoundedRectangle]] element of a node.\n\t */\n\trectangle: RoundedRectangle;\n\n}\n\nexport interface IPartitionSettings extends IHierarchySettings {\n\n\t/**\n\t * Gap between nodes in pixels.\n\t *\n\t * @default 0\n\t */\n\tnodePadding?: number;\n\n\t/**\n\t * Orientation of the diagram.\n\t *\n\t * @default \"vertical\"\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n}\n\nexport interface IPartitionPrivate extends IHierarchyPrivate {\n\n\t/**\n\t * Current horizontal scale.\n\t */\n\tscaleX?: number;\n\n\t/**\n\t * Current vertical scale.\n\t */\n\tscaleY?: number;\n\n}\n\n/**\n * Partition series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/partition/} for more info\n */\nexport class Partition extends Hierarchy {\n\n\tdeclare public _settings: IPartitionSettings;\n\tdeclare public _privateSettings: IPartitionPrivate;\n\tdeclare public _dataItemSettings: IPartitionDataItem;\n\n\tprotected _tag: string = \"partition\";\n\n\tpublic static className: string = \"Partition\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([Partition.className]);\n\n\t/**\n\t * A list of node rectangle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly rectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.rectangles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.rectangles.template])\n\t);\n\n\tpublic _partitionLayout = d3hierarchy.partition();\n\n\tdeclare public _rootNode: d3hierarchy.HierarchyRectangularNode<IPartitionDataObject> | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"partition\", this._settings.orientation || \"vertical\"]);\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"scaleX\", 1);\n\t\tthis.setPrivate(\"scaleY\", 1);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"nodePadding\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodes(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"scaleX\") || this.isPrivateDirty(\"scaleY\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"orientation\")) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst partitionLayout = this._partitionLayout;\n\t\t\tlet w = this.innerWidth();\n\t\t\tlet h = this.innerHeight();\n\n\t\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\t\t[w, h] = [h, w];\n\t\t\t}\n\n\t\t\tpartitionLayout.size([w, h]);\n\n\t\t\tconst nodePadding = this.get(\"nodePadding\");\n\n\t\t\tif ($type.isNumber(nodePadding)) {\n\t\t\t\tpartitionLayout.padding(nodePadding);\n\t\t\t}\n\n\n\t\t\tpartitionLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\tlet x0, x1, y0, y1: number;\n\n\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\tx0 = hierarchyNode.y0 * scaleX;\n\t\t\tx1 = hierarchyNode.y1 * scaleX;\n\t\t\ty0 = hierarchyNode.x0 * scaleY;\n\t\t\ty1 = hierarchyNode.x1 * scaleY;\n\t\t}\n\t\telse {\n\t\t\tx0 = hierarchyNode.x0 * scaleX;\n\t\t\tx1 = hierarchyNode.x1 * scaleX;\n\t\t\ty0 = hierarchyNode.y0 * scaleY;\n\t\t\ty1 = hierarchyNode.y1 * scaleY;\n\t\t}\n\t\tlet w = x1 - x0;\n\t\tlet h = y1 - y0;\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: x0, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"y\", to: y0, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\n\t\tif (rectangle) {\n\t\t\tconst fill = dataItem.get(\"fill\");\n\t\t\t\n\t\t\trectangle.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\t\trectangle.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\t\t\trectangle._setDefault(\"fill\", fill);\n\t\t\trectangle._setDefault(\"stroke\", fill);\t\t\t\n\t\t}\n\t}\n\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyRectangularNode<IPartitionDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\n\t\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\t\tlet x0, x1, y0, y1: number;\n\n\t\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\t\tx0 = hierarchyNode.y0 * scaleX;\n\t\t\t\tx1 = hierarchyNode.y1 * scaleX;\n\t\t\t\ty0 = hierarchyNode.x0 * scaleY;\n\t\t\t\ty1 = hierarchyNode.x1 * scaleY;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx0 = hierarchyNode.x0 * scaleX;\n\t\t\t\tx1 = hierarchyNode.x1 * scaleX;\n\t\t\t\ty0 = hierarchyNode.y0 * scaleY;\n\t\t\t\ty1 = hierarchyNode.y1 * scaleY;\n\t\t\t}\n\n\t\t\tconst w = x1 - x0;\n\t\t\tconst h = y1 - y0;\n\n\t\t\tnode.setAll({ x: x0, y: y0, width: w, height: h });\n\t\t\trectangle.setAll({ width: w, height: h });\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\t\tconst node = super.makeNode(dataItem);\n\t\tthis._makeNode(dataItem, node);\n\t\treturn node;\n\t}\n\n\tprotected _makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>, node: HierarchyNode) {\n\t\tconst rectangle = node.children.moveValue(this.rectangles.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", rectangle);\n\t\tdataItem.setRaw(\"rectangle\", rectangle);\n\t\trectangle._setDataItem(dataItem);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\trectangle.on(\"width\", () => {\n\t\t\tlabel.set(\"maxWidth\", rectangle.width());\n\t\t})\n\n\t\trectangle.on(\"height\", () => {\n\t\t\tlabel.set(\"maxHeight\", rectangle.height());\n\t\t})\n\t}\n\n\tprotected _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet x0 = 0;\n\t\tlet x1 = 0;\n\t\tlet y0 = 0;\n\t\tlet y1 = 0;\n\n\t\tconst upDepth = this.get(\"upDepth\", 0) + 1;\n\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\tconst width = this.innerWidth();\n\t\tconst height = this.innerHeight();\n\n\t\tconst maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\tconst levelHeight = height / (maxDepth + 1);\n\t\tconst levelWidth = width / (maxDepth + 1);\n\t\tconst initialDepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - topDepth);\n\n\t\tlet downDepth = this._currentDownDepth;\n\t\tif (downDepth == null) {\n\t\t\tdownDepth = this.get(\"downDepth\", 1);\n\t\t}\n\n\t\tif (dataItem) {\n\t\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\t\tlet currentDepth = hierarchyNode.depth;\n\n\t\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\t\tx0 = hierarchyNode.y0;\n\t\t\t\tx1 = hierarchyNode.y1;\n\n\t\t\t\ty0 = hierarchyNode.x0;\n\t\t\t\ty1 = hierarchyNode.x1;\n\n\t\t\t\tx0 = x1 - levelWidth * upDepth;\n\t\t\t\tx1 = x0 + levelWidth * (downDepth + 1);\n\n\t\t\t\tif (currentDepth < topDepth) {\n\t\t\t\t\ty0 = 0;\n\t\t\t\t\ty1 = height;\n\t\t\t\t\tx0 = levelWidth * topDepth;\n\t\t\t\t\tx1 = x0 + levelWidth * initialDepth;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx0 = hierarchyNode.x0;\n\t\t\t\tx1 = hierarchyNode.x1;\n\n\t\t\t\ty0 = hierarchyNode.y0;\n\t\t\t\ty1 = hierarchyNode.y1;\n\n\t\t\t\ty0 = y1 - levelHeight * upDepth;\n\t\t\t\ty1 = y0 + levelHeight * (downDepth + 1);\n\n\t\t\t\tif (currentDepth < topDepth) {\n\t\t\t\t\tx0 = 0;\n\t\t\t\t\tx1 = width;\n\t\t\t\t\ty0 = levelHeight * topDepth;\n\t\t\t\t\ty1 = y0 + levelHeight * initialDepth;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet scaleX = width / (x1 - x0);\n\t\tlet scaleY = height / (y1 - y0);\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\tif (!this.inited) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tthis.animatePrivate({ key: \"scaleX\", to: scaleX, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"scaleY\", to: scaleY, duration: duration, easing: easing });\n\n\t\tthis.nodesContainer.animate({ key: \"x\", to: -x0 * scaleX, duration: duration, easing: easing });\n\t\tthis.nodesContainer.animate({ key: \"y\", to: -y0 * scaleY, duration: duration, easing: easing });\n\t}\n}\n","import type { Root } from \"../../core/Root\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { HierarchyNode } from \"./HierarchyNode\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { Series } from \"../../core/render/Series\";\n\nimport { Partition, IPartitionPrivate, IPartitionSettings, IPartitionDataItem } from \"./Partition\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Slice } from \"../../core/render/Slice\";\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\nimport { Percent, p100, p50 } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as d3hierarchy from \"d3-hierarchy\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $math from \"../../core/util/Math\";\n\n/**\n * @ignore\n */\nexport interface ISunburstDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ISunburstDataObject[],\n\tdataItem?: DataItem<ISunburstDataItem>\n};\n\nexport interface ISunburstDataItem extends IPartitionDataItem {\n\n\t/**\n\t * Data items of child nodes.\n\t */\n\tchildren: Array<DataItem<ISunburstDataItem>>;\n\n\t/**\n\t * Data item of a parent node.\n\t */\n\tparent: DataItem<ISunburstDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3PartitionNode: d3hierarchy.HierarchyRectangularNode<ISunburstDataObject>;\n\n\t/**\n\t * A [[Slice]] element of the node.\n\t */\n\tslice: Slice;\n\n}\n\nexport interface ISunburstSettings extends IPartitionSettings {\n\n\t/**\n\t * Start angle of the series.\n\t *\n\t * @default -90\n\t */\n\tstartAngle?: number;\n\n\t/**\n\t * End angle of the series.\n\t *\n\t * @default 270\n\t */\n\tendAngle?: number;\n\n\t/**\n\t * Inner radius of the suburst pie.\n\t *\n\t * Setting to negative number will mean pixels from outer radius.\n\t *\n\t * @default 0\n\t */\n\tinnerRadius?: number | Percent;\n\n\t/**\n\t * Outer radius of the sunburst pie.\n\t *\n\t * @default 100%\n\t */\n\tradius?: number | Percent;\n\n}\n\nexport interface ISunburstPrivate extends IPartitionPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tdr: number;\n\n\t/**\n\t * @ignore\n\t */\n\tdx: number;\n\n\t/**\n\t * @ignore\n\t */\n\tinnerRadius: number;\n\n\t/**\n\t * @ignore\n\t */\n\thierarchySize?: number;\n\n}\n\n/**\n * Builds a sunburst diagram.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/sunburst/} for more info\n * @important\n */\nexport class Sunburst extends Partition {\n\n\tdeclare public _settings: ISunburstSettings;\n\tdeclare public _privateSettings: ISunburstPrivate;\n\tdeclare public _dataItemSettings: ISunburstDataItem;\n\n\tprotected _tag: string = \"sunburst\";\n\n\tpublic static className: string = \"Sunburst\";\n\tpublic static classNames: Array<string> = Partition.classNames.concat([Sunburst.className]);\n\n\tpublic _partitionLayout = d3hierarchy.partition();\n\n\tdeclare public _rootNode: d3hierarchy.HierarchyRectangularNode<ISunburstDataObject> | undefined;\n\n\t/**\n\t * A list of node slice elements in a [[Sunburst]] chart.\n\t *\n\t * @default new ListTemplate<Slice>\n\t */\n\tpublic readonly slices: ListTemplate<Slice> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Slice._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.slices.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\", \"shape\"])\n\t\t}, [this.slices.template])\n\t);\n\n\t/**\n\t * A list of label elements in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<RadialLabel>\n\t */\n\tpublic readonly labels: ListTemplate<RadialLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RadialLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [this._tag])\n\t\t}, [this.labels.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.nodesContainer.setAll({ x: p50, y: p50 });\n\t\tthis.setPrivateRaw(\"dx\", 0);\n\t\tthis.setPrivateRaw(\"dr\", 0);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"dr\") || this.isPrivateDirty(\"dx\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst partitionLayout = this._partitionLayout;\n\n\t\t\tlet bounds = $math.getArcBounds(0, 0, this.get(\"startAngle\", 0), this.get(\"endAngle\", 360), 1);\n\n\t\t\tlet w = this.innerWidth();\n\t\t\tlet h = this.innerHeight();\n\n\t\t\tconst wr = w / (bounds.right - bounds.left);\n\t\t\tconst hr = h / (bounds.bottom - bounds.top);\n\n\t\t\tlet s = Math.min(wr, hr);\n\n\t\t\tlet r = $utils.relativeToValue(this.get(\"radius\", p100), s);\n\t\t\tlet ir = $utils.relativeToValue(this.get(\"innerRadius\", 0), r);\n\n\t\t\tif (ir < 0) {\n\t\t\t\tir = r + ir;\n\t\t\t}\n\n\t\t\ts = r - ir;\n\n\t\t\tthis.setPrivateRaw(\"innerRadius\", ir);\n\t\t\tthis.setPrivateRaw(\"hierarchySize\", s);\n\n\t\t\tpartitionLayout.size([s, s]);\n\n\t\t\tthis.nodesContainer.setAll({\n\t\t\t\tdy: -r * (bounds.bottom + bounds.top) / 2, dx: -r * (bounds.right + bounds.left) / 2\n\t\t\t})\n\n\t\t\tconst nodePadding = this.get(\"nodePadding\");\n\n\t\t\tif ($type.isNumber(nodePadding)) {\n\t\t\t\tpartitionLayout.padding(nodePadding);\n\t\t\t}\n\n\n\t\t\tpartitionLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\tconst node = dataItem.get(\"node\");\n\n\t\tnode.setAll({ x: 0, y: 0 });\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\t\tconst dr = this.getPrivate(\"dr\", 0);\n\t\tconst dx = this.getPrivate(\"dx\", 0);\n\n\t\tconst x0 = hierarchyNode.x0 * scaleX + dx;\n\t\tconst x1 = hierarchyNode.x1 * scaleX + dx;\n\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\tconst ir = this.getPrivate(\"innerRadius\");\n\t\tconst hs = this.getPrivate(\"hierarchySize\", 0);\n\n\t\tconst slice = dataItem.get(\"slice\");\n\t\tif (slice) {\n\t\t\tconst startAngle = this.get(\"startAngle\", -90);\n\t\t\tconst endAngle = this.get(\"endAngle\", 270);\n\n\t\t\tconst sliceStartAngle = startAngle + x0 / hs * (endAngle - startAngle);\n\t\t\tconst arc = startAngle + x1 / hs * (endAngle - startAngle) - sliceStartAngle;\n\n\t\t\tlet sliceInnerRadius = ir + y0;\n\t\t\tlet sliceRadius = ir + y1;\n\n\t\t\tsliceInnerRadius -= dr;\n\t\t\tsliceRadius -= dr;\n\n\t\t\tsliceRadius = Math.max(0, sliceRadius);\n\t\t\tsliceInnerRadius = Math.max(0, sliceInnerRadius);\n\n\t\t\tslice.animate({ key: \"radius\", to: sliceRadius, duration: duration, easing: easing })\n\t\t\tslice.animate({ key: \"innerRadius\", to: sliceInnerRadius, duration: duration, easing: easing })\n\t\t\tslice.animate({ key: \"startAngle\", to: sliceStartAngle, duration: duration, easing: easing })\n\t\t\tslice.animate({ key: \"arc\", to: arc, duration: duration, easing: easing })\n\n\t\t\tconst fill = dataItem.get(\"fill\");\n\n\t\t\tslice._setDefault(\"fill\", fill);\n\t\t\tslice._setDefault(\"stroke\", fill);\n\t\t}\n\t}\n\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyRectangularNode<ISunburstDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\t\t\tconst dr = this.getPrivate(\"dr\", 0);\n\t\t\tconst dx = this.getPrivate(\"dx\", 0);\n\n\t\t\tconst x0 = hierarchyNode.x0 * scaleX + dx;\n\t\t\tconst x1 = hierarchyNode.x1 * scaleX + dx;\n\t\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\t\tconst ir = this.getPrivate(\"innerRadius\");\n\t\t\tconst hs = this.getPrivate(\"hierarchySize\", 0);\n\n\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\tif (slice) {\n\t\t\t\tconst startAngle = this.get(\"startAngle\", -90);\n\t\t\t\tconst endAngle = this.get(\"endAngle\", 270);\n\n\t\t\t\tconst sliceStartAngle = startAngle + x0 / hs * (endAngle - startAngle);\n\t\t\t\tconst arc = startAngle + x1 / hs * (endAngle - startAngle) - sliceStartAngle;\n\n\t\t\t\tlet sliceInnerRadius = ir + y0;\n\t\t\t\tlet sliceRadius = ir + y1;\n\n\t\t\t\tsliceInnerRadius -= dr;\n\t\t\t\tsliceRadius -= dr;\n\n\t\t\t\tsliceRadius = Math.max(0, sliceRadius);\n\t\t\t\tsliceInnerRadius = Math.max(0, sliceInnerRadius);\n\n\t\t\t\tslice.setAll({ radius: sliceRadius, innerRadius: sliceInnerRadius, startAngle: sliceStartAngle, arc: arc });\n\t\t\t}\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>, node: HierarchyNode) {\n\t\tconst slice = node.children.moveValue(this.slices.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", slice);\n\t\tdataItem.setRaw(\"slice\", slice);\n\n\t\tslice._setDataItem(dataItem);\n\n\t\tslice.on(\"arc\", () => {\n\t\t\tthis._updateLabel(dataItem);\n\t\t})\n\t\tslice.on(\"innerRadius\", () => {\n\t\t\tthis._updateLabel(dataItem);\n\t\t})\n\t\tslice.on(\"radius\", () => {\n\t\t\tthis._updateLabel(dataItem);\n\t\t})\n\t}\n\n\tprotected _updateLabel(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst slice = dataItem.get(\"slice\");\n\t\tconst label = dataItem.get(\"label\") as RadialLabel;\n\n\t\tif (slice && label) {\n\t\t\tlet innerRadius = slice.get(\"innerRadius\", 0);\n\t\t\tlet radius = slice.get(\"radius\", 0);\n\t\t\tlet angle = slice.get(\"startAngle\", 0);\n\t\t\tlet arc = Math.abs(slice.get(\"arc\", 0));\n\t\t\tlet labelAngle = angle + arc / 2;\n\t\t\tlet textType = label.get(\"textType\");\n\n\t\t\tlet maxWidth = radius - innerRadius;\n\t\t\tlet maxHeight = radius * arc * $math.RADIANS;\n\n\t\t\tif (innerRadius == 0 && arc >= 360 && textType == \"radial\") {\n\t\t\t\tradius = 1;\n\t\t\t\tlabelAngle = 0;\n\t\t\t\tmaxWidth *= 2;\n\t\t\t\tmaxHeight = maxWidth;\t\t\t\t\n\t\t\t}\n\n\t\t\tif (Math.round(arc) >= 360 && textType == \"radial\") {\n\t\t\t\tlabelAngle = 0;\n\t\t\t}\t\t\t\n\n\t\t\tif (textType == \"circular\") {\n\t\t\t\tmaxWidth = arc * $math.RADIANS * (innerRadius + (radius - innerRadius) / 2) - 10;\n\t\t\t}\n\n\n\t\t\tlabel.setAll({ labelAngle: labelAngle });\n\t\t\tlabel.setPrivate(\"radius\", radius);\n\t\t\tlabel.setPrivate(\"innerRadius\", innerRadius);\n\n\t\t\tlabel.setAll({\n\t\t\t\tmaxHeight: maxHeight,\n\t\t\t\tmaxWidth: maxWidth\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet x0 = 0;\n\t\tlet x1 = 0;\n\t\tlet hs = this.getPrivate(\"hierarchySize\", 0);\n\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tlet upDepth = this.get(\"upDepth\", 0);\n\t\tlet topDepth = this.get(\"topDepth\", 0);\n\t\tlet currentDepth = hierarchyNode.depth;\n\t\tlet maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\tlet downDepth = this._currentDownDepth;\n\n\t\tif (downDepth == null) {\n\t\t\tdownDepth = this.get(\"downDepth\", 1);\n\t\t}\n\n\t\tconst levelHeight = hs / (maxDepth + 1);\n\n\t\tif (currentDepth < topDepth) {\n\t\t\tcurrentDepth = topDepth;\n\t\t}\n\n\t\tif (currentDepth - upDepth < 0) {\n\t\t\tupDepth = currentDepth;\n\t\t}\n\n\t\tx0 = hierarchyNode.x0;\n\t\tx1 = hierarchyNode.x1;\n\n\t\tlet scaleDepth = (downDepth + upDepth + 1);\n\n\t\tif (scaleDepth > maxDepth - topDepth + 1) {\n\t\t\tscaleDepth = maxDepth - topDepth + 1;\n\t\t}\n\n\t\tlet scaleX = hs / (x1 - x0);\n\t\tlet scaleY = hs / (levelHeight * scaleDepth);\n\n\t\tlet dr = Math.max(currentDepth - upDepth, topDepth) * levelHeight * scaleY;\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\tif (!this.inited) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tlet dx = -x0 * scaleX\n\n\t\tthis.animatePrivate({ key: \"scaleX\", to: scaleX, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"scaleY\", to: scaleY, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"dr\", to: dr, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"dx\", to: dx, duration: duration, easing: easing });\n\t}\n\n\n\tprotected _handleSingle(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tif (parent) {\n\t\t\tconst children = parent.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (child != dataItem) {\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t\tchild.get(\"node\").hide();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tthis._handleSingle(parent);\n\t\t}\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\n\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\tconst arc = slice.get(\"arc\", 0);\n\t\t\tconst angle = slice.get(\"startAngle\", 0) + slice.get(\"arc\", 0) * locationX;\n\t\t\tconst innerRadius = slice.get(\"innerRadius\", 0);\n\t\t\tconst radius = innerRadius + (slice.get(\"radius\", 0) - innerRadius) * locationY;\n\n\t\t\tlet x = $math.cos(angle) * radius;\n\t\t\tlet y = $math.sin(angle) * radius;\n\n\t\t\tif ($math.round(arc, 5) === 360 && $math.round(innerRadius, 2) === 0) {\n\t\t\t\tx = 0;\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\tsprite.set(\"x\", x);\n\t\t\tsprite.set(\"y\", y);\n\t\t}\n\t}\n\n\tprotected _makeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>, bulletFunction: (root: Root, series: Series, dataItem: DataItem<this[\"_dataItemSettings\"]>) => Bullet | undefined, index?: number) {\n\t\tconst bullet = super._makeBullet(dataItem, bulletFunction, index);\n\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tconst slice = dataItem.get(\"slice\");\n\n\t\t\tif (sprite && slice) {\n\t\t\t\tslice.on(\"arc\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\n\t\t\t\tslice.on(\"radius\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\treturn bullet;\n\t\t}\n\t}\n}\n","import {Node} from \"./hierarchy/index.js\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { LinkedHierarchy, ILinkedHierarchyPrivate, ILinkedHierarchySettings, ILinkedHierarchyDataItem, ILinkedHierarchyEvents } from \"./LinkedHierarchy\";\n\nimport * as d3hierarchy from \"d3-hierarchy\";\n\nexport interface ITreeDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ITreeDataObject[],\n\tdataItem?: DataItem<ITreeDataItem>\n};\n\nexport interface ITreeDataItem extends ILinkedHierarchyDataItem {\n\n\t/**\n\t * An array of children data items.\n\t */\n\tchildren: Array<DataItem<ITreeDataItem>>;\n\n\t/**\n\t * Parent data item.\n\t * @type {DataItem<ITreeDataItem>}\n\t */\n\tparent: DataItem<ITreeDataItem>;\n\n}\n\nexport interface ITreeSettings extends ILinkedHierarchySettings {\n\n\t/**\n\t * Orientation of the diagram.\n\t *\n\t * @default \"vertical\"\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n\t/**\n\t * If set to `true`, will flip the tree direction.\n\t *\n\t * @default false\n\t * @since 5.2.4\n\t */\n\tinversed?: boolean;\n\n}\n\nexport interface ITreePrivate extends ILinkedHierarchyPrivate {\n\n\t/**\n\t * Current horizontal scale.\n\t */\n\tscaleX?: number;\n\n\t/**\n\t * Current vertical scale.\n\t */\n\tscaleY?: number;\n}\n\nexport interface ITreeEvents extends ILinkedHierarchyEvents {\n}\n\n/**\n * Displays a tree diagram.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/tree/} for more info\n * @important\n */\nexport class Tree extends LinkedHierarchy {\n\n\tdeclare public _settings: ITreeSettings;\n\tdeclare public _privateSettings: ITreePrivate;\n\tdeclare public _dataItemSettings: ITreeDataItem;\n\n\tprotected _tag: string = \"tree\";\n\n\tpublic static className: string = \"Tree\";\n\tpublic static classNames: Array<string> = LinkedHierarchy.classNames.concat([Tree.className]);\n\n\tpublic _hierarchyLayout = d3hierarchy.tree();\n\tdeclare public _rootNode: d3hierarchy.HierarchyCircularNode<ITreeDataObject> | undefined;\n\tpublic _packData: ITreeDataObject | undefined;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"orientation\") || this.isDirty(\"inversed\")) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst layout = this._hierarchyLayout;\n\n\t\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\t\tlayout.size([this.innerWidth(), this.innerHeight()]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlayout.size([this.innerHeight(), this.innerWidth()]);\n\t\t\t}\n\n\t\t\tlayout(this._rootNode);\n\t\t}\n\n\t\tsuper._updateVisuals();\n\t}\n\n\tprotected _getPoint(hierarchyNode: this[\"_dataItemSettings\"][\"d3HierarchyNode\"]): IPoint {\n\t\tconst inversed = this.get(\"inversed\");\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\tif (inversed) {\n\t\t\t\treturn { x: hierarchyNode.x, y: this.innerHeight() - hierarchyNode.y };\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn { x: hierarchyNode.x, y: hierarchyNode.y };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inversed) {\n\t\t\t\treturn { x: this.innerWidth() - hierarchyNode.y, y: hierarchyNode.x };\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn { x: hierarchyNode.y, y: hierarchyNode.x };\n\t\t\t}\n\t\t}\n\t}\n\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import roundNode from \"./round.js\";\nimport squarify from \"./squarify.js\";\nimport {required} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice.js\";\nimport slice from \"./slice.js\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import type { HierarchyNode } from \"./HierarchyNode\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem, IHierarchyDataObject } from \"./Hierarchy\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\nexport interface ITreemapDataObject { name?: string, value?: number, children?: ITreemapDataObject[], dataItem?: DataItem<ITreemapDataItem> };\n\nexport interface ITreemapDataItem extends IHierarchyDataItem {\n\tchildren: Array<DataItem<ITreemapDataItem>>;\n\tparent: DataItem<ITreemapDataItem>;\n\td3HierarchyNode: d3hierarchy.HierarchyRectangularNode<IHierarchyDataObject>;\n\trectangle: RoundedRectangle;\n}\n\nexport interface ITreemapSettings extends IHierarchySettings {\n\n\t/**\n\t * Gap between nodes. In pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingInner?: number;\n\n\t/**\n\t * Gap between nodes and outer edge of the chart. In pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingOuter?: number;\n\n\t/**\n\t * Gap between nodes and top edge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingTop?: number;\n\n\t/**\n\t * Gap between nodes and bottomedge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingBottom?: number;\n\n\t/**\n\t * Gap between nodes and left edge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingLeft?: number;\n\n\t/**\n\t * Gap between nodes and bottom edge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingRight?: number;\n\n\t/**\n\t * An algorithm to use when laying out node rectangles.\n\t *\n\t * @see {@link }\n\t * @default \"squarify\"\n\t */\n\tlayoutAlgorithm?: \"binary\" | \"squarify\" | \"slice\" | \"dice\" | \"sliceDice\";\n\n}\n\nexport interface ITreemapPrivate extends IHierarchyPrivate {\n\n\t/**\n\t * Current horizontal scale.\n\t */\n\tscaleX?: number;\n\n\t/**\n\t * Current vertical scale.\n\t */\n\tscaleY?: number;\n\n}\n\n/**\n * Treemap series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/} for more info\n */\nexport class Treemap extends Hierarchy {\n\n\tdeclare public _settings: ITreemapSettings;\n\tdeclare public _privateSettings: ITreemapPrivate;\n\tdeclare public _dataItemSettings: ITreemapDataItem;\n\n\tprotected _tag: string = \"treemap\";\n\n\tpublic static className: string = \"Treemap\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([Treemap.className]);\n\n\tpublic readonly rectangleTemplate: Template<RoundedRectangle> = Template.new({});\n\n\tpublic _treemapLayout = d3hierarchy.treemap().tile(d3hierarchy.treemapSquarify);\n\n\tdeclare public _rootNode: d3hierarchy.HierarchyRectangularNode<ITreemapDataObject> | undefined;\n\n\t/**\n\t * A list of node rectangle elements in a [[Treemap]] chart.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly rectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.rectangles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.rectangles.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"scaleX\", 1);\n\t\tthis.setPrivate(\"scaleY\", 1);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"layoutAlgorithm\")) {\n\t\t\tlet algorithm;\n\n\t\t\tswitch (this.get(\"layoutAlgorithm\")) {\n\t\t\t\tcase \"squarify\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapSquarify;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"binary\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapBinary;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"slice\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapSlice;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"dice\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapDice;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"sliceDice\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapSliceDice;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (algorithm) {\n\t\t\t\tthis._treemapLayout = d3hierarchy.treemap().tile(algorithm);\n\t\t\t}\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodes(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"nodePaddingRight\") || this.isDirty(\"nodePaddingLeft\") || this.isDirty(\"nodePaddingTop\") || this.isDirty(\"nodePaddingBottom\") || this.isDirty(\"nodePaddingOuter\") || this.isDirty(\"nodePaddingInner\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodes(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"scaleX\") || this.isPrivateDirty(\"scaleY\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst treemapLayout = this._treemapLayout;\n\t\t\ttreemapLayout.size([this.innerWidth(), this.innerHeight()]);\n\n\t\t\tconst paddingLeft = this.get(\"nodePaddingLeft\");\n\t\t\tconst paddingRight = this.get(\"nodePaddingRight\");\n\t\t\tconst paddingTop = this.get(\"nodePaddingTop\");\n\t\t\tconst paddingBottom = this.get(\"nodePaddingBottom\");\n\t\t\tconst paddingInner = this.get(\"nodePaddingInner\");\n\t\t\tconst paddingOuter = this.get(\"nodePaddingOuter\");\n\t\t\tif ($type.isNumber(paddingLeft)) {\n\t\t\t\ttreemapLayout.paddingLeft(paddingLeft);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingRight)) {\n\t\t\t\ttreemapLayout.paddingRight(paddingRight);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingTop)) {\n\t\t\t\ttreemapLayout.paddingTop(paddingTop);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingBottom)) {\n\t\t\t\ttreemapLayout.paddingBottom(paddingBottom);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingInner)) {\n\t\t\t\ttreemapLayout.paddingInner(paddingInner);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingOuter)) {\n\t\t\t\ttreemapLayout.paddingOuter(paddingOuter);\n\t\t\t}\n\n\t\t\ttreemapLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\tconst x0 = hierarchyNode.x0 * scaleX;\n\t\tconst x1 = hierarchyNode.x1 * scaleX;\n\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\tconst w = x1 - x0;\n\t\tconst h = y1 - y0;\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: x0, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"y\", to: y0, duration: duration, easing: easing })\n\n\t\tnode.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\n\t\tif (rectangle) {\n\t\t\tconst fill = dataItem.get(\"fill\");\n\n\t\t\trectangle.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\t\trectangle.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\t\t\trectangle._setDefault(\"fill\", fill);\n\t\t\trectangle._setDefault(\"stroke\", fill);\n\t\t}\n\t}\n\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyRectangularNode<ITreemapDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\n\t\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\t\tconst x0 = hierarchyNode.x0 * scaleX;\n\t\t\tconst x1 = hierarchyNode.x1 * scaleX;\n\t\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\t\tconst w = x1 - x0;\n\t\t\tconst h = y1 - y0;\n\n\t\t\tnode.setAll({ x: x0, y: y0, width: w, height: h });\n\t\t\trectangle.setAll({ width: w, height: h });\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\t\tconst node = super.makeNode(dataItem);\n\n\t\tconst rectangle = node.children.moveValue(this.rectangles.make(), 0);\n\n\t\tnode.setPrivate(\"tooltipTarget\", rectangle);\n\t\tdataItem.setRaw(\"rectangle\", rectangle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\trectangle.on(\"width\", () => {\n\t\t\tlabel.setPrivate(\"maxWidth\", rectangle.width());\n\t\t})\n\n\t\trectangle.on(\"height\", () => {\n\t\t\tlabel.setPrivate(\"maxHeight\", rectangle.height());\n\t\t})\n\n\t\treturn node;\n\t}\n\n\tpublic _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tif (this.width() > 0 && this.height() > 0) {\n\t\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\t\tconst nodePaddingOuter = this.get(\"nodePaddingOuter\", 0);\n\n\t\t\tlet x0 = hierarchyNode.x0 + nodePaddingOuter;\n\t\t\tlet x1 = hierarchyNode.x1 - nodePaddingOuter;\n\n\t\t\tlet y0 = hierarchyNode.y0 + nodePaddingOuter;\n\t\t\tlet y1 = hierarchyNode.y1 - nodePaddingOuter;\n\n\t\t\tlet scaleX = (this.innerWidth() - nodePaddingOuter * 2) / (x1 - x0);\n\t\t\tlet scaleY = (this.innerHeight() - nodePaddingOuter * 2) / (y1 - y0);\n\n\t\t\tconst easing = this.get(\"animationEasing\");\n\t\t\tconst duration = this.get(\"animationDuration\", 0);\n\n\t\t\tthis.animatePrivate({ key: \"scaleX\", to: scaleX, duration: duration, easing: easing });\n\t\t\tthis.animatePrivate({ key: \"scaleY\", to: scaleY, duration: duration, easing: easing });\n\n\t\t\tthis.nodesContainer.animate({ key: \"x\", to: nodePaddingOuter - x0 * scaleX, duration: duration, easing: easing });\n\t\t\tthis.nodesContainer.animate({ key: \"y\", to: nodePaddingOuter - y0 * scaleY, duration: duration, easing: easing });\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/hierarchy.js\";\nexport const am5hierarchy = m;"],"names":["HierarchyDefaultTheme","Theme","setupDefaultRules","super","ic","this","_root","interfaceColors","gridLayout","r","rule","bind","setAll","legendLabelText","legendValueText","width","height","colors","ColorSet","step","downDepth","initialDepth","singleBranchOnly","maskContent","animationEasing","toggleKey","setStateOnChildren","position","isMeasured","cursorOverStyle","tooltipText","centerX","centerY","paddingBottom","paddingTop","paddingRight","paddingLeft","text","populateText","oversizedBehavior","minScale","strokeWidth","strokeOpacity","strength","distance","fillOpacity","radius","tooltipY","opacity","strokeDasharray","scale","interactive","states","create","layout","stateAnimationDuration","fontWeight","upDepth","visible","x","y","rotation","cornerRadiusBR","cornerRadiusTR","cornerRadiusBL","cornerRadiusTL","cornerRadius","textType","baseRadius","minRadius","maxRadius","initialFrames","centerStrength","manyBodyStrength","velocityDecay","linkWithStrength","showOnFrame","Infinity","topDepth","orientation","nodePadding","draggable","layoutAlgorithm","BreadcrumbBar","Container","List","Template","Label","themeTags","labels","template","get","background","RoundedRectangle","makeLabel","dataItem","label","make","_setDataItem","events","on","series","selectDataItem","push","_afterNew","_defaultThemes","_settings","_changed","isDirty","previous","_prevSettings","_disposer","event","_handleDataItem","dispose","set","children","clear","parent","addTag","moveValue","className","HierarchyNode","disabled","disableDataItem","enableDataItem","_clickDisposer","_isDragging","count","node","sum","i","length","value","hierarchy","data","Map","undefined","mapChildren","objectChildren","child","childs","n","root","Node","nodes","pop","Array","from","depth","eachBefore","computeHeight","d","isArray","copyData","prototype","constructor","eachAfter","each","callback","that","index","call","next","find","sort","compare","path","end","start","ancestor","a","b","aNodes","ancestors","bNodes","c","leastCommonAncestor","k","splice","descendants","leaves","links","source","target","copy","Symbol","iterator","current","reverse","Hierarchy","Series","_tag","makeNode","childData","setRaw","nodesContainer","fields","bulletsContainer","_prepareChildren","_valuesDirty","_treeData","first","dataItems","_makeHierarchyData","_index","_rootNode","setPrivateRaw","_updateValues","_sizeDirty","_updateVisuals","_selectDataItem","_currentDownDepth","_updateNodes","hierarchyNode","_updateNode","bullets","_makeBullets","hierarchyChildren","hierarchyChild","_dataItem","_getDataItemById","id","di","childDataItem","_handleBullets","bullet","_onDataClear","reset","processDataItem","_processDataItem","_makeDataItem","d3HierarchyNode","getPrivate","dataValue","valuePercent","markDirtyText","updateLegendValue","d3HierarchyChild","childrenDataArray","disposeDataItem","removeValue","hideDataItem","duration","promises","hiddenState","stateAnimationEasing","easing","animate","key","to","waitForStop","hide","hideTooltip","Promise","all","showDataItem","show","maxDepth","isHidden","applyAnimate","skipDisptach","type","dispatch","Math","min","inited","currentDepth","_handleSingle","_zoom","_makeBullet","bulletFunction","sprite","_positionBullet","locationX","locationY","hoverDataItem","hover","unhoverDataItem","unhover","LinkedHierarchyNode","_updateLinks","link","_onHide","_onShow","classNames","concat","HierarchyLink","Graphics","_clear","sourceNode","targetNode","_display","moveTo","lineTo","_beforeChanged","_markDirtyKey","LinkedHierarchy","_new","Circle","C","circles","outerCircles","circle","setPrivate","outerCircle","maxWidth","maxHeight","_handleRadiusChange","parentDataItem","linkDataItems","updateLinkWith","linkWith","linkWithDataItem","_getPoint","_animatePositions","point","fill","_setDefault","sourceLinks","lnk","targetLinks","linksContainer","_processLink","unlinkDataItems","_disposeLink","_handleUnlink","areLinked","linked","_link","_source","_target","m","initialAngle","PI","sqrt","simulation","alpha","alphaMin","alphaDecay","pow","alphaTarget","forces","stepper","timer","random","s","tick","stop","iterations","forEach","force","fx","vx","fy","vy","initializeNodes","isNaN","angle","cos","sin","initializeForce","initialize","restart","_","arguments","randomSource","name","delete","dx","dy","d2","closest","tree","xm","ym","xp","yp","right","bottom","j","leaf","x0","_x0","y0","_y0","x1","_x1","y1","_y1","_x","_y","defaultX","defaultY","quadtree","Quadtree","NaN","addAll","leaf_copy","treeProto","radii","xi","yi","ri","ri2","visitAfter","prepare","visit","apply","quad","rj","l","jiggle","constant","_nodes","_random","nodeById","nodeId","Error","strengths","distances","bias","map","initializeStrength","initializeDistance","add","cover","xz","yz","floor","z","extent","x2","y2","q","x3","y3","quads","remove","retainer","removeAll","size","ForceDirected","d3forceSimulation","_tick","updateNodePositions","restartSimulation","_updateForces","d3ForceNode","innerWidth","innerHeight","_nodesDirty","collisionForce","linkForce","_links","_updateChildren","w","max","h","pt","pl","distanceMin2","distanceMax2","theta2","accumulate","weight","abs","distanceMin","distanceMax","theta","d3node","_clearDirty","linkDatum","getDistance","getStrength","d3Nodes","d3Node","sourceDataItem","targetDataItem","_updateRadius","valueWorking","d3Link","optional","f","required","constantZero","extendBasis","B","p","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","enclosesWeak","encloseBasis","r1","r2","x21","y21","r21","r3","a2","a3","b2","b3","c2","c3","d1","d3","ab","xa","xb","ya","yb","A","place","intersects","score","packSiblingsRandom","array","aa","ca","sj","sk","pack","e","t","shuffle","packEncloseRandom","defaultRadius","padding","radiusLeaf","packChildrenRandom","translateChild","Pack","isPrivateDirty","_updateNodesScale","packLayout","_packLayout","scaleR","animatePrivate","round","partition","positionNode","Partition","rectangles","partitionLayout","_partitionLayout","rectangle","scaleX","scaleY","_makeNode","levelHeight","levelWidth","Sunburst","Slice","slices","RadialLabel","bounds","wr","left","hr","top","ir","hs","slice","startAngle","endAngle","sliceStartAngle","arc","sliceInnerRadius","sliceRadius","innerRadius","_updateLabel","labelAngle","scaleDepth","defaultSeparation","nextLeft","v","nextRight","moveSubtree","wm","wp","shift","change","nextAncestor","vim","TreeNode","separation","nodeSize","treeRoot","firstWalk","secondWalk","sizeNode","tx","kx","ky","siblings","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","Object","Tree","_hierarchyLayout","inversed","custom","ratio","squarify","row","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","rows","i0","i1","dice","squarifyRatio","tile","paddingStack","paddingInner","treemap","paddingOuter","sums","valueOffset","valueTarget","hi","mid","valueLeft","valueRight","xk","yk","Treemap","algorithm","_treemapLayout","treemapLayout","nodePaddingOuter","am5hierarchy"],"sourceRoot":""}